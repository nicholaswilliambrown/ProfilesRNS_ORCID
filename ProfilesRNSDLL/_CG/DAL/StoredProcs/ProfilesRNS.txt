USE [ProfilesRNS]

GO

    DECLARE @procedureName varchar(500) 
    DECLARE @schemaName varchar(500)
    DECLARE cur CURSOR
    FOR SELECT [name], SCHEMA_NAME(schema_id) AS TableSchema FROM sys.objects WHERE [TYPE] = 'P' and [Name] not like 'sp_%' and [Name] like 'cg2_%'
 
    OPEN cur
    
    FETCH NEXT FROM cur INTO @procedureName, @schemaName
    WHILE @@fetch_status = 0
    BEGIN 
    	EXEC('DROP PROCEDURE [' + @schemaName + '].[' + @procedureName + ']') 
    	FETCH NEXT FROM cur INTO @procedureName, @schemaName 
    END 
    CLOSE cur 
    DEALLOCATE cur 


GO

if exists (select * from dbo.sysobjects where id = object_id(N'[ORNG].[cg2_AppDataGetBykeynameAndvalueAndnodeIdAndappId]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
    drop procedure [ORNG].[cg2_AppDataGetBykeynameAndvalueAndnodeIdAndappId]

GO

CREATE PROCEDURE [ORNG].[cg2_AppDataGetBykeynameAndvalueAndnodeIdAndappId]
 
    @keyname  NVARCHAR(255) 
    , @value  NVARCHAR(4000) 
    , @nodeId  BIGINT 
    , @appId  INT 

AS
 
    SELECT TOP 100 PERCENT
        [ORNG].[AppData].[nodeId]
        , [ORNG].[AppData].[appId]
        , [ORNG].[AppData].[keyname]
        , [ORNG].[AppData].[value]
        , [ORNG].[AppData].[createdDT]
        , [ORNG].[AppData].[updatedDT]
    FROM
        [ORNG].[AppData]
    WHERE
        [ORNG].[AppData].[keyname] = @keyname
        AND [ORNG].[AppData].[value] = @value
        AND [ORNG].[AppData].[nodeId] = @nodeId
        AND [ORNG].[AppData].[appId] = @appId


GO

GRANT EXECUTE ON [ORNG].[cg2_AppDataGetBykeynameAndvalueAndnodeIdAndappId] TO App_Profiles10

GO

if exists (select * from dbo.sysobjects where id = object_id(N'[ORNG].[cg2_AppDataGetBykeynameAndvalueAndnodeIdAndappId]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
    drop procedure [ORNG].[cg2_AppDataGetBykeynameAndvalueAndnodeIdAndappId]

GO

CREATE PROCEDURE [ORNG].[cg2_AppDataGetBykeynameAndvalueAndnodeIdAndappId]
 
    @keyname  NVARCHAR(255) 
    , @value  NVARCHAR(4000) 
    , @nodeId  BIGINT 
    , @appId  INT 

AS
 
    SELECT TOP 100 PERCENT
        [ORNG].[AppData].[nodeId]
        , [ORNG].[AppData].[appId]
        , [ORNG].[AppData].[keyname]
        , [ORNG].[AppData].[value]
        , [ORNG].[AppData].[createdDT]
        , [ORNG].[AppData].[updatedDT]
    FROM
        [ORNG].[AppData]
    WHERE
        [ORNG].[AppData].[keyname] = @keyname
        AND [ORNG].[AppData].[value] = @value
        AND [ORNG].[AppData].[nodeId] = @nodeId
        AND [ORNG].[AppData].[appId] = @appId


GO

GRANT EXECUTE ON [ORNG].[cg2_AppDataGetBykeynameAndvalueAndnodeIdAndappId] TO App_Profiles10

GO

if exists (select * from dbo.sysobjects where id = object_id(N'[ORNG].[cg2_AppDataGetBykeynameAndvalueAndnodeIdAndappId]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
    drop procedure [ORNG].[cg2_AppDataGetBykeynameAndvalueAndnodeIdAndappId]

GO

CREATE PROCEDURE [ORNG].[cg2_AppDataGetBykeynameAndvalueAndnodeIdAndappId]
 
    @keyname  NVARCHAR(255) 
    , @value  NVARCHAR(4000) 
    , @nodeId  BIGINT 
    , @appId  INT 

AS
 
    SELECT TOP 100 PERCENT
        [ORNG].[AppData].[nodeId]
        , [ORNG].[AppData].[appId]
        , [ORNG].[AppData].[keyname]
        , [ORNG].[AppData].[value]
        , [ORNG].[AppData].[createdDT]
        , [ORNG].[AppData].[updatedDT]
    FROM
        [ORNG].[AppData]
    WHERE
        [ORNG].[AppData].[keyname] = @keyname
        AND [ORNG].[AppData].[value] = @value
        AND [ORNG].[AppData].[nodeId] = @nodeId
        AND [ORNG].[AppData].[appId] = @appId


GO

GRANT EXECUTE ON [ORNG].[cg2_AppDataGetBykeynameAndvalueAndnodeIdAndappId] TO App_Profiles10

GO

if exists (select * from dbo.sysobjects where id = object_id(N'[ORNG].[cg2_AppDataGetBykeynameAndvalueAndnodeIdAndappId]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
    drop procedure [ORNG].[cg2_AppDataGetBykeynameAndvalueAndnodeIdAndappId]

GO

CREATE PROCEDURE [ORNG].[cg2_AppDataGetBykeynameAndvalueAndnodeIdAndappId]
 
    @keyname  NVARCHAR(255) 
    , @value  NVARCHAR(4000) 
    , @nodeId  BIGINT 
    , @appId  INT 

AS
 
    SELECT TOP 100 PERCENT
        [ORNG].[AppData].[nodeId]
        , [ORNG].[AppData].[appId]
        , [ORNG].[AppData].[keyname]
        , [ORNG].[AppData].[value]
        , [ORNG].[AppData].[createdDT]
        , [ORNG].[AppData].[updatedDT]
    FROM
        [ORNG].[AppData]
    WHERE
        [ORNG].[AppData].[keyname] = @keyname
        AND [ORNG].[AppData].[value] = @value
        AND [ORNG].[AppData].[nodeId] = @nodeId
        AND [ORNG].[AppData].[appId] = @appId


GO

GRANT EXECUTE ON [ORNG].[cg2_AppDataGetBykeynameAndvalueAndnodeIdAndappId] TO App_Profiles10

GO

CREATE PROCEDURE [ORNG].[cg2_AppDatasGet]
 
AS
 
    SELECT TOP 100 PERCENT
        [ORNG].[AppData].[nodeId]
        , [ORNG].[AppData].[appId]
        , [ORNG].[AppData].[keyname]
        , [ORNG].[AppData].[value]
        , [ORNG].[AppData].[createdDT]
        , [ORNG].[AppData].[updatedDT]
    FROM
        [ORNG].[AppData]

GO

GRANT EXECUTE ON [ORNG].[cg2_AppDatasGet] TO App_Profiles10

GO

 
if exists (select * from dbo.sysobjects where id = object_id(N'[ORNG].[cg2_AppRegistryGetBynodeid]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
    drop procedure [ORNG].[cg2_AppRegistryGetBynodeid]

GO

CREATE PROCEDURE [ORNG].[cg2_AppRegistryGetBynodeid]
 
    @nodeid  BIGINT 

AS
 
    SELECT TOP 100 PERCENT
        [ORNG].[AppRegistry].[nodeid]
        , [ORNG].[AppRegistry].[appId]
        , [ORNG].[AppRegistry].[visibility]
        , [ORNG].[AppRegistry].[createdDT]
    FROM
        [ORNG].[AppRegistry]
    WHERE
        [ORNG].[AppRegistry].[nodeid] = @nodeid


GO

GRANT EXECUTE ON [ORNG].[cg2_AppRegistryGetBynodeid] TO App_Profiles10

GO

CREATE PROCEDURE [ORNG].[cg2_AppRegistrysGet]
 
AS
 
    SELECT TOP 100 PERCENT
        [ORNG].[AppRegistry].[nodeid]
        , [ORNG].[AppRegistry].[appId]
        , [ORNG].[AppRegistry].[visibility]
        , [ORNG].[AppRegistry].[createdDT]
    FROM
        [ORNG].[AppRegistry]

GO

GRANT EXECUTE ON [ORNG].[cg2_AppRegistrysGet] TO App_Profiles10

GO

 
if exists (select * from dbo.sysobjects where id = object_id(N'[ORNG].[cg2_AppsGet]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
    drop procedure [ORNG].[cg2_AppsGet]

GO

CREATE PROCEDURE [ORNG].[cg2_AppsGet]
 
    @appId  INT 

AS
 
    SELECT TOP 100 PERCENT
        [ORNG].[Apps].[appId]
        , [ORNG].[Apps].[name]
        , [ORNG].[Apps].[url]
        , [ORNG].[Apps].[PersonFilterID]
        , [ORNG].[Apps].[enabled]
    FROM
        [ORNG].[Apps]
    WHERE
        [ORNG].[Apps].[appId] = @appId


GO

GRANT EXECUTE ON [ORNG].[cg2_AppsGet] TO App_Profiles10

GO

CREATE PROCEDURE [ORNG].[cg2_AppssGet]
 
AS
 
    SELECT TOP 100 PERCENT
        [ORNG].[Apps].[appId]
        , [ORNG].[Apps].[name]
        , [ORNG].[Apps].[url]
        , [ORNG].[Apps].[PersonFilterID]
        , [ORNG].[Apps].[enabled]
    FROM
        [ORNG].[Apps]

GO

GRANT EXECUTE ON [ORNG].[cg2_AppssGet] TO App_Profiles10

GO

 
CREATE PROCEDURE [ORNG].[cg2_AppsAdd]

    @appId  INT 
    , @name  NVARCHAR(255) 
    , @url  NVARCHAR(255) =NULL
    , @PersonFilterID  INT =NULL
    , @enabled  BIT 

AS


    DECLARE @intReturnVal INT 
    SET @intReturnVal = 0
    DECLARE @strReturn  Varchar(200) 
    SET @intReturnVal = 0
    DECLARE @intRecordLevelAuditTrailID INT 
    DECLARE @intFieldLevelAuditTrailID INT 
    DECLARE @intTableID INT 
    SET @intTableID = 3694
 
  
        INSERT INTO [ORNG].[Apps]
        (
            [appId]
            , [name]
            , [url]
            , [PersonFilterID]
            , [enabled]
        )
        (
            SELECT
            @appId
            , @name
            , @url
            , @PersonFilterID
            , @enabled
        )
   
        SET @intReturnVal = @@error
        IF @intReturnVal <> 0
        BEGIN
            RAISERROR (N'An error occurred while adding the Apps record.', 11, 11); 
            RETURN @intReturnVal 
        END

GO

GRANT EXECUTE ON [ORNG].[cg2_AppsAdd] TO App_Profiles10

GO

 
CREATE PROCEDURE [ORNG].[cg2_AppsEdit]

    @appId  INT 
    , @name  NVARCHAR(255) 
    , @url  NVARCHAR(255) =NULL
    , @PersonFilterID  INT =NULL
    , @enabled  BIT 

AS


    DECLARE @intReturnVal INT 
    SET @intReturnVal = 0
    DECLARE @strReturn  Varchar(200) 
    SET @intReturnVal = 0
    DECLARE @intRecordLevelAuditTrailID INT 
    DECLARE @intFieldLevelAuditTrailID INT 
    DECLARE @intTableID INT 
    SET @intTableID = 3694
 
  
        UPDATE [ORNG].[Apps]
        SET
            [appId] = @appId
            , [name] = @name
            , [url] = @url
            , [PersonFilterID] = @PersonFilterID
            , [enabled] = @enabled
        FROM
            [ORNG].[Apps]
        WHERE
        [ORNG].[Apps].[appId] = @appId

        
        SET @intReturnVal = @@error
        IF @intReturnVal <> 0
        BEGIN
            RAISERROR (N'An error occurred while editing the Apps record.', 11, 11); 
            RETURN @intReturnVal 
        END

GO

GRANT EXECUTE ON [ORNG].[cg2_AppsEdit] TO App_Profiles10

GO

CREATE PROCEDURE [ORNG].[cg2_AppsDelete]
 
    @appId  INT 

 
AS
 
    DECLARE @intReturnVal INT 
    SET @intReturnVal = 0
 
 
        DELETE FROM [ORNG].[Apps] WHERE         [ORNG].[Apps].[appId] = @appId

 
        SET @intReturnVal = @@error
        IF @intReturnVal <> 0
        BEGIN
            RAISERROR (N'An error occurred while deleting the Apps record.', 11, 11); 
            RETURN @intReturnVal 
        END
    RETURN @intReturnVal

GO

GRANT EXECUTE ON [ORNG].[cg2_AppsDelete] TO App_Profiles10

GO

if exists (select * from dbo.sysobjects where id = object_id(N'[ORCID].[cg2_ErrorLogGet]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
    drop procedure [ORCID].[cg2_ErrorLogGet]

GO

CREATE PROCEDURE [ORCID].[cg2_ErrorLogGet]
 
    @ErrorLogID  INT 

AS
 
    SELECT TOP 100 PERCENT
        [ORCID].[ErrorLog].[ErrorLogID]
        , [ORCID].[ErrorLog].[InternalUsername]
        , [ORCID].[ErrorLog].[Exception]
        , [ORCID].[ErrorLog].[OccurredOn]
        , [ORCID].[ErrorLog].[Processed]
    FROM
        [ORCID].[ErrorLog]
    WHERE
        [ORCID].[ErrorLog].[ErrorLogID] = @ErrorLogID


GO

GRANT EXECUTE ON [ORCID].[cg2_ErrorLogGet] TO App_Profiles10

GO

CREATE PROCEDURE [ORCID].[cg2_ErrorLogsGet]
 
AS
 
    SELECT TOP 100 PERCENT
        [ORCID].[ErrorLog].[ErrorLogID]
        , [ORCID].[ErrorLog].[InternalUsername]
        , [ORCID].[ErrorLog].[Exception]
        , [ORCID].[ErrorLog].[OccurredOn]
        , [ORCID].[ErrorLog].[Processed]
    FROM
        [ORCID].[ErrorLog]

GO

GRANT EXECUTE ON [ORCID].[cg2_ErrorLogsGet] TO App_Profiles10

GO

 
CREATE PROCEDURE [ORCID].[cg2_ErrorLogAdd]

    @ErrorLogID  INT =NULL OUTPUT 
    , @InternalUsername  NVARCHAR(11) =NULL
    , @Exception  TEXT 
    , @OccurredOn  SMALLDATETIME 
    , @Processed  BIT 

AS


    DECLARE @intReturnVal INT 
    SET @intReturnVal = 0
    DECLARE @strReturn  Varchar(200) 
    SET @intReturnVal = 0
    DECLARE @intRecordLevelAuditTrailID INT 
    DECLARE @intFieldLevelAuditTrailID INT 
    DECLARE @intTableID INT 
    SET @intTableID = 3732
 
  
        INSERT INTO [ORCID].[ErrorLog]
        (
            [InternalUsername]
            , [Exception]
            , [OccurredOn]
            , [Processed]
        )
        (
            SELECT
            @InternalUsername
            , @Exception
            , @OccurredOn
            , @Processed
        )
   
        SET @intReturnVal = @@error
        SET @ErrorLogID = @@IDENTITY
        IF @intReturnVal <> 0
        BEGIN
            RAISERROR (N'An error occurred while adding the ErrorLog record.', 11, 11); 
            RETURN @intReturnVal 
        END

GO

GRANT EXECUTE ON [ORCID].[cg2_ErrorLogAdd] TO App_Profiles10

GO

 
CREATE PROCEDURE [ORCID].[cg2_ErrorLogEdit]

    @ErrorLogID  INT =NULL OUTPUT 
    , @InternalUsername  NVARCHAR(11) =NULL
    , @Exception  TEXT 
    , @OccurredOn  SMALLDATETIME 
    , @Processed  BIT 

AS


    DECLARE @intReturnVal INT 
    SET @intReturnVal = 0
    DECLARE @strReturn  Varchar(200) 
    SET @intReturnVal = 0
    DECLARE @intRecordLevelAuditTrailID INT 
    DECLARE @intFieldLevelAuditTrailID INT 
    DECLARE @intTableID INT 
    SET @intTableID = 3732
 
  
        UPDATE [ORCID].[ErrorLog]
        SET
            [InternalUsername] = @InternalUsername
            , [Exception] = @Exception
            , [OccurredOn] = @OccurredOn
            , [Processed] = @Processed
        FROM
            [ORCID].[ErrorLog]
        WHERE
        [ORCID].[ErrorLog].[ErrorLogID] = @ErrorLogID

        
        SET @intReturnVal = @@error
        IF @intReturnVal <> 0
        BEGIN
            RAISERROR (N'An error occurred while editing the ErrorLog record.', 11, 11); 
            RETURN @intReturnVal 
        END

GO

GRANT EXECUTE ON [ORCID].[cg2_ErrorLogEdit] TO App_Profiles10

GO

CREATE PROCEDURE [ORCID].[cg2_ErrorLogDelete]
 
    @ErrorLogID  INT 

 
AS
 
    DECLARE @intReturnVal INT 
    SET @intReturnVal = 0
 
 
        DELETE FROM [ORCID].[ErrorLog] WHERE         [ORCID].[ErrorLog].[ErrorLogID] = @ErrorLogID

 
        SET @intReturnVal = @@error
        IF @intReturnVal <> 0
        BEGIN
            RAISERROR (N'An error occurred while deleting the ErrorLog record.', 11, 11); 
            RETURN @intReturnVal 
        END
    RETURN @intReturnVal

GO

GRANT EXECUTE ON [ORCID].[cg2_ErrorLogDelete] TO App_Profiles10

GO

if exists (select * from dbo.sysobjects where id = object_id(N'[ORCID].[cg2_FieldLevelAuditTrailGet]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
    drop procedure [ORCID].[cg2_FieldLevelAuditTrailGet]

GO

CREATE PROCEDURE [ORCID].[cg2_FieldLevelAuditTrailGet]
 
    @FieldLevelAuditTrailID  BIGINT 

AS
 
    SELECT TOP 100 PERCENT
        [ORCID].[FieldLevelAuditTrail].[FieldLevelAuditTrailID]
        , [ORCID].[FieldLevelAuditTrail].[RecordLevelAuditTrailID]
        , [ORCID].[FieldLevelAuditTrail].[MetaFieldID]
        , [ORCID].[FieldLevelAuditTrail].[ValueBefore]
        , [ORCID].[FieldLevelAuditTrail].[ValueAfter]
    FROM
        [ORCID].[FieldLevelAuditTrail]
    WHERE
        [ORCID].[FieldLevelAuditTrail].[FieldLevelAuditTrailID] = @FieldLevelAuditTrailID


GO

GRANT EXECUTE ON [ORCID].[cg2_FieldLevelAuditTrailGet] TO App_Profiles10

GO

CREATE PROCEDURE [ORCID].[cg2_FieldLevelAuditTrailsGet]
 
AS
 
    SELECT TOP 100 PERCENT
        [ORCID].[FieldLevelAuditTrail].[FieldLevelAuditTrailID]
        , [ORCID].[FieldLevelAuditTrail].[RecordLevelAuditTrailID]
        , [ORCID].[FieldLevelAuditTrail].[MetaFieldID]
        , [ORCID].[FieldLevelAuditTrail].[ValueBefore]
        , [ORCID].[FieldLevelAuditTrail].[ValueAfter]
    FROM
        [ORCID].[FieldLevelAuditTrail]

GO

GRANT EXECUTE ON [ORCID].[cg2_FieldLevelAuditTrailsGet] TO App_Profiles10

GO

 
CREATE PROCEDURE [ORCID].[cg2_FieldLevelAuditTrailAdd]

    @FieldLevelAuditTrailID  BIGINT =NULL OUTPUT 
    , @RecordLevelAuditTrailID  BIGINT 
    , @MetaFieldID  INT 
    , @ValueBefore  VARCHAR(50) =NULL
    , @ValueAfter  VARCHAR(50) =NULL

AS


    DECLARE @intReturnVal INT 
    SET @intReturnVal = 0
    DECLARE @strReturn  Varchar(200) 
    SET @intReturnVal = 0
 
  
        INSERT INTO [ORCID].[FieldLevelAuditTrail]
        (
            [RecordLevelAuditTrailID]
            , [MetaFieldID]
            , [ValueBefore]
            , [ValueAfter]
        )
        (
            SELECT
            @RecordLevelAuditTrailID
            , @MetaFieldID
            , @ValueBefore
            , @ValueAfter
        )
   
        SET @intReturnVal = @@error
        SET @FieldLevelAuditTrailID = @@IDENTITY
        IF @intReturnVal <> 0
        BEGIN
            RAISERROR (N'An error occurred while adding the FieldLevelAuditTrail record.', 11, 11); 
            RETURN @intReturnVal 
        END

GO

GRANT EXECUTE ON [ORCID].[cg2_FieldLevelAuditTrailAdd] TO App_Profiles10

GO

 
CREATE PROCEDURE [ORCID].[cg2_FieldLevelAuditTrailEdit]

    @FieldLevelAuditTrailID  BIGINT =NULL OUTPUT 
    , @RecordLevelAuditTrailID  BIGINT 
    , @MetaFieldID  INT 
    , @ValueBefore  VARCHAR(50) =NULL
    , @ValueAfter  VARCHAR(50) =NULL

AS


    DECLARE @intReturnVal INT 
    SET @intReturnVal = 0
    DECLARE @strReturn  Varchar(200) 
    SET @intReturnVal = 0
 
  
        UPDATE [ORCID].[FieldLevelAuditTrail]
        SET
            [RecordLevelAuditTrailID] = @RecordLevelAuditTrailID
            , [MetaFieldID] = @MetaFieldID
            , [ValueBefore] = @ValueBefore
            , [ValueAfter] = @ValueAfter
        FROM
            [ORCID].[FieldLevelAuditTrail]
        WHERE
        [ORCID].[FieldLevelAuditTrail].[FieldLevelAuditTrailID] = @FieldLevelAuditTrailID

        
        SET @intReturnVal = @@error
        IF @intReturnVal <> 0
        BEGIN
            RAISERROR (N'An error occurred while editing the FieldLevelAuditTrail record.', 11, 11); 
            RETURN @intReturnVal 
        END

GO

GRANT EXECUTE ON [ORCID].[cg2_FieldLevelAuditTrailEdit] TO App_Profiles10

GO

CREATE PROCEDURE [ORCID].[cg2_FieldLevelAuditTrailDelete]
 
    @FieldLevelAuditTrailID  BIGINT 

 
AS
 
    DECLARE @intReturnVal INT 
    SET @intReturnVal = 0
 
 
        DELETE FROM [ORCID].[FieldLevelAuditTrail] WHERE         [ORCID].[FieldLevelAuditTrail].[FieldLevelAuditTrailID] = @FieldLevelAuditTrailID

 
        SET @intReturnVal = @@error
        IF @intReturnVal <> 0
        BEGIN
            RAISERROR (N'An error occurred while deleting the FieldLevelAuditTrail record.', 11, 11); 
            RETURN @intReturnVal 
        END
    RETURN @intReturnVal

GO

GRANT EXECUTE ON [ORCID].[cg2_FieldLevelAuditTrailDelete] TO App_Profiles10

GO

if exists (select * from dbo.sysobjects where id = object_id(N'[Profile.Import].[cg2_FreetextKeywordsGet]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
    drop procedure [Profile.Import].[cg2_FreetextKeywordsGet]

GO

CREATE PROCEDURE [Profile.Import].[cg2_FreetextKeywordsGet]
 
    @PersonKeywordID  INT 

AS
 
    SELECT TOP 100 PERCENT
        [Profile.Import].[FreetextKeywords].[PersonKeywordID]
        , [Profile.Import].[FreetextKeywords].[InternalUsername]
        , [Profile.Import].[FreetextKeywords].[Keyword]
        , [Profile.Import].[FreetextKeywords].[DisplaySecurityGroupID]
    FROM
        [Profile.Import].[FreetextKeywords]
    WHERE
        [Profile.Import].[FreetextKeywords].[PersonKeywordID] = @PersonKeywordID


GO

GRANT EXECUTE ON [Profile.Import].[cg2_FreetextKeywordsGet] TO App_Profiles10

GO

if exists (select * from dbo.sysobjects where id = object_id(N'[Profile.Import].[cg2_FreetextKeywordsGetByInternalUsername]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
    drop procedure [Profile.Import].[cg2_FreetextKeywordsGetByInternalUsername]

GO

CREATE PROCEDURE [Profile.Import].[cg2_FreetextKeywordsGetByInternalUsername]
 
    @InternalUsername  NVARCHAR(50) 

AS
 
    SELECT TOP 100 PERCENT
        [Profile.Import].[FreetextKeywords].[PersonKeywordID]
        , [Profile.Import].[FreetextKeywords].[InternalUsername]
        , [Profile.Import].[FreetextKeywords].[Keyword]
        , [Profile.Import].[FreetextKeywords].[DisplaySecurityGroupID]
    FROM
        [Profile.Import].[FreetextKeywords]
    WHERE
        [Profile.Import].[FreetextKeywords].[InternalUsername] = @InternalUsername


GO

GRANT EXECUTE ON [Profile.Import].[cg2_FreetextKeywordsGetByInternalUsername] TO App_Profiles10

GO

if exists (select * from dbo.sysobjects where id = object_id(N'[Profile.Import].[cg2_FreetextKeywordsGetByDisplaySecurityGroupID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
    drop procedure [Profile.Import].[cg2_FreetextKeywordsGetByDisplaySecurityGroupID]

GO

CREATE PROCEDURE [Profile.Import].[cg2_FreetextKeywordsGetByDisplaySecurityGroupID]
 
    @DisplaySecurityGroupID  INT 

AS
 
    SELECT TOP 100 PERCENT
        [Profile.Import].[FreetextKeywords].[PersonKeywordID]
        , [Profile.Import].[FreetextKeywords].[InternalUsername]
        , [Profile.Import].[FreetextKeywords].[Keyword]
        , [Profile.Import].[FreetextKeywords].[DisplaySecurityGroupID]
    FROM
        [Profile.Import].[FreetextKeywords]
    WHERE
        [Profile.Import].[FreetextKeywords].[DisplaySecurityGroupID] = @DisplaySecurityGroupID


GO

GRANT EXECUTE ON [Profile.Import].[cg2_FreetextKeywordsGetByDisplaySecurityGroupID] TO App_Profiles10

GO

if exists (select * from dbo.sysobjects where id = object_id(N'[Profile.Import].[cg2_FreetextKeywordsGetByInternalUsernameAndKeyword]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
    drop procedure [Profile.Import].[cg2_FreetextKeywordsGetByInternalUsernameAndKeyword]

GO

CREATE PROCEDURE [Profile.Import].[cg2_FreetextKeywordsGetByInternalUsernameAndKeyword]
 
    @InternalUsername  NVARCHAR(50) 
    , @Keyword  VARCHAR(250) 

AS
 
    SELECT TOP 100 PERCENT
        [Profile.Import].[FreetextKeywords].[PersonKeywordID]
        , [Profile.Import].[FreetextKeywords].[InternalUsername]
        , [Profile.Import].[FreetextKeywords].[Keyword]
        , [Profile.Import].[FreetextKeywords].[DisplaySecurityGroupID]
    FROM
        [Profile.Import].[FreetextKeywords]
    WHERE
        [Profile.Import].[FreetextKeywords].[InternalUsername] = @InternalUsername
        AND [Profile.Import].[FreetextKeywords].[Keyword] = @Keyword


GO

GRANT EXECUTE ON [Profile.Import].[cg2_FreetextKeywordsGetByInternalUsernameAndKeyword] TO App_Profiles10

GO

if exists (select * from dbo.sysobjects where id = object_id(N'[Profile.Import].[cg2_FreetextKeywordsGetByInternalUsernameAndKeyword]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
    drop procedure [Profile.Import].[cg2_FreetextKeywordsGetByInternalUsernameAndKeyword]

GO

CREATE PROCEDURE [Profile.Import].[cg2_FreetextKeywordsGetByInternalUsernameAndKeyword]
 
    @InternalUsername  NVARCHAR(50) 
    , @Keyword  VARCHAR(250) 

AS
 
    SELECT TOP 100 PERCENT
        [Profile.Import].[FreetextKeywords].[PersonKeywordID]
        , [Profile.Import].[FreetextKeywords].[InternalUsername]
        , [Profile.Import].[FreetextKeywords].[Keyword]
        , [Profile.Import].[FreetextKeywords].[DisplaySecurityGroupID]
    FROM
        [Profile.Import].[FreetextKeywords]
    WHERE
        [Profile.Import].[FreetextKeywords].[InternalUsername] = @InternalUsername
        AND [Profile.Import].[FreetextKeywords].[Keyword] = @Keyword


GO

GRANT EXECUTE ON [Profile.Import].[cg2_FreetextKeywordsGetByInternalUsernameAndKeyword] TO App_Profiles10

GO

CREATE PROCEDURE [Profile.Import].[cg2_FreetextKeywordssGet]
 
AS
 
    SELECT TOP 100 PERCENT
        [Profile.Import].[FreetextKeywords].[PersonKeywordID]
        , [Profile.Import].[FreetextKeywords].[InternalUsername]
        , [Profile.Import].[FreetextKeywords].[Keyword]
        , [Profile.Import].[FreetextKeywords].[DisplaySecurityGroupID]
    FROM
        [Profile.Import].[FreetextKeywords]

GO

GRANT EXECUTE ON [Profile.Import].[cg2_FreetextKeywordssGet] TO App_Profiles10

GO

 
CREATE PROCEDURE [Profile.Import].[cg2_FreetextKeywordsAdd]

    @PersonKeywordID  INT =NULL OUTPUT 
    , @InternalUsername  NVARCHAR(50) 
    , @Keyword  VARCHAR(250) 
    , @DisplaySecurityGroupID  INT 

AS


    DECLARE @intReturnVal INT 
    SET @intReturnVal = 0
    DECLARE @strReturn  Varchar(200) 
    SET @intReturnVal = 0
    DECLARE @intRecordLevelAuditTrailID INT 
    DECLARE @intFieldLevelAuditTrailID INT 
    DECLARE @intTableID INT 
    SET @intTableID = 4441
 
  
        INSERT INTO [Profile.Import].[FreetextKeywords]
        (
            [InternalUsername]
            , [Keyword]
            , [DisplaySecurityGroupID]
        )
        (
            SELECT
            @InternalUsername
            , @Keyword
            , @DisplaySecurityGroupID
        )
   
        SET @intReturnVal = @@error
        SET @PersonKeywordID = @@IDENTITY
        IF @intReturnVal <> 0
        BEGIN
            RAISERROR (N'An error occurred while adding the FreetextKeywords record.', 11, 11); 
            RETURN @intReturnVal 
        END

GO

GRANT EXECUTE ON [Profile.Import].[cg2_FreetextKeywordsAdd] TO App_Profiles10

GO

 
CREATE PROCEDURE [Profile.Import].[cg2_FreetextKeywordsEdit]

    @PersonKeywordID  INT =NULL OUTPUT 
    , @InternalUsername  NVARCHAR(50) 
    , @Keyword  VARCHAR(250) 
    , @DisplaySecurityGroupID  INT 

AS


    DECLARE @intReturnVal INT 
    SET @intReturnVal = 0
    DECLARE @strReturn  Varchar(200) 
    SET @intReturnVal = 0
    DECLARE @intRecordLevelAuditTrailID INT 
    DECLARE @intFieldLevelAuditTrailID INT 
    DECLARE @intTableID INT 
    SET @intTableID = 4441
 
  
        UPDATE [Profile.Import].[FreetextKeywords]
        SET
            [InternalUsername] = @InternalUsername
            , [Keyword] = @Keyword
            , [DisplaySecurityGroupID] = @DisplaySecurityGroupID
        FROM
            [Profile.Import].[FreetextKeywords]
        WHERE
        [Profile.Import].[FreetextKeywords].[PersonKeywordID] = @PersonKeywordID

        
        SET @intReturnVal = @@error
        IF @intReturnVal <> 0
        BEGIN
            RAISERROR (N'An error occurred while editing the FreetextKeywords record.', 11, 11); 
            RETURN @intReturnVal 
        END

GO

GRANT EXECUTE ON [Profile.Import].[cg2_FreetextKeywordsEdit] TO App_Profiles10

GO

CREATE PROCEDURE [Profile.Import].[cg2_FreetextKeywordsDelete]
 
    @PersonKeywordID  INT 

 
AS
 
    DECLARE @intReturnVal INT 
    SET @intReturnVal = 0
 
 
        DELETE FROM [Profile.Import].[FreetextKeywords] WHERE         [Profile.Import].[FreetextKeywords].[PersonKeywordID] = @PersonKeywordID

 
        SET @intReturnVal = @@error
        IF @intReturnVal <> 0
        BEGIN
            RAISERROR (N'An error occurred while deleting the FreetextKeywords record.', 11, 11); 
            RETURN @intReturnVal 
        END
    RETURN @intReturnVal

GO

GRANT EXECUTE ON [Profile.Import].[cg2_FreetextKeywordsDelete] TO App_Profiles10

GO

if exists (select * from dbo.sysobjects where id = object_id(N'[RDF.Security].[cg2_GroupGet]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
    drop procedure [RDF.Security].[cg2_GroupGet]

GO

CREATE PROCEDURE [RDF.Security].[cg2_GroupGet]
 
    @SecurityGroupID  BIGINT 

AS
 
    SELECT TOP 100 PERCENT
        [RDF.Security].[Group].[SecurityGroupID]
        , [RDF.Security].[Group].[Label]
        , [RDF.Security].[Group].[HasSpecialViewAccess]
        , [RDF.Security].[Group].[HasSpecialEditAccess]
        , [RDF.Security].[Group].[Description]
        , [RDF.Security].[Group].[DefaultORCIDDecisionID]
    FROM
        [RDF.Security].[Group]
    WHERE
        [RDF.Security].[Group].[SecurityGroupID] = @SecurityGroupID


GO

GRANT EXECUTE ON [RDF.Security].[cg2_GroupGet] TO App_Profiles10

GO

CREATE PROCEDURE [RDF.Security].[cg2_GroupsGet]
 
AS
 
    SELECT TOP 100 PERCENT
        [RDF.Security].[Group].[SecurityGroupID]
        , [RDF.Security].[Group].[Label]
        , [RDF.Security].[Group].[HasSpecialViewAccess]
        , [RDF.Security].[Group].[HasSpecialEditAccess]
        , [RDF.Security].[Group].[Description]
        , [RDF.Security].[Group].[DefaultORCIDDecisionID]
    FROM
        [RDF.Security].[Group]

GO

GRANT EXECUTE ON [RDF.Security].[cg2_GroupsGet] TO App_Profiles10

GO

 
CREATE PROCEDURE [RDF.Security].[cg2_GroupAdd]

    @SecurityGroupID  BIGINT 
    , @Label  VARCHAR(255) 
    , @HasSpecialViewAccess  BIT =NULL
    , @HasSpecialEditAccess  BIT =NULL
    , @Description  VARCHAR(MAX) =NULL
    , @DefaultORCIDDecisionID  INT =NULL

AS


    DECLARE @intReturnVal INT 
    SET @intReturnVal = 0
    DECLARE @strReturn  Varchar(200) 
    SET @intReturnVal = 0
    DECLARE @intRecordLevelAuditTrailID INT 
    DECLARE @intFieldLevelAuditTrailID INT 
    DECLARE @intTableID INT 
    SET @intTableID = 3657
 
  
        INSERT INTO [RDF.Security].[Group]
        (
            [SecurityGroupID]
            , [Label]
            , [HasSpecialViewAccess]
            , [HasSpecialEditAccess]
            , [Description]
            , [DefaultORCIDDecisionID]
        )
        (
            SELECT
            @SecurityGroupID
            , @Label
            , @HasSpecialViewAccess
            , @HasSpecialEditAccess
            , @Description
            , @DefaultORCIDDecisionID
        )
   
        SET @intReturnVal = @@error
        IF @intReturnVal <> 0
        BEGIN
            RAISERROR (N'An error occurred while adding the Group record.', 11, 11); 
            RETURN @intReturnVal 
        END

GO

GRANT EXECUTE ON [RDF.Security].[cg2_GroupAdd] TO App_Profiles10

GO

 
CREATE PROCEDURE [RDF.Security].[cg2_GroupEdit]

    @SecurityGroupID  BIGINT 
    , @Label  VARCHAR(255) 
    , @HasSpecialViewAccess  BIT =NULL
    , @HasSpecialEditAccess  BIT =NULL
    , @Description  VARCHAR(MAX) =NULL
    , @DefaultORCIDDecisionID  INT =NULL

AS


    DECLARE @intReturnVal INT 
    SET @intReturnVal = 0
    DECLARE @strReturn  Varchar(200) 
    SET @intReturnVal = 0
    DECLARE @intRecordLevelAuditTrailID INT 
    DECLARE @intFieldLevelAuditTrailID INT 
    DECLARE @intTableID INT 
    SET @intTableID = 3657
 
  
        UPDATE [RDF.Security].[Group]
        SET
            [SecurityGroupID] = @SecurityGroupID
            , [Label] = @Label
            , [HasSpecialViewAccess] = @HasSpecialViewAccess
            , [HasSpecialEditAccess] = @HasSpecialEditAccess
            , [Description] = @Description
            , [DefaultORCIDDecisionID] = @DefaultORCIDDecisionID
        FROM
            [RDF.Security].[Group]
        WHERE
        [RDF.Security].[Group].[SecurityGroupID] = @SecurityGroupID

        
        SET @intReturnVal = @@error
        IF @intReturnVal <> 0
        BEGIN
            RAISERROR (N'An error occurred while editing the Group record.', 11, 11); 
            RETURN @intReturnVal 
        END

GO

GRANT EXECUTE ON [RDF.Security].[cg2_GroupEdit] TO App_Profiles10

GO

CREATE PROCEDURE [RDF.Security].[cg2_GroupDelete]
 
    @SecurityGroupID  BIGINT 

 
AS
 
    DECLARE @intReturnVal INT 
    SET @intReturnVal = 0
 
 
        DELETE FROM [RDF.Security].[Group] WHERE         [RDF.Security].[Group].[SecurityGroupID] = @SecurityGroupID

 
        SET @intReturnVal = @@error
        IF @intReturnVal <> 0
        BEGIN
            RAISERROR (N'An error occurred while deleting the Group record.', 11, 11); 
            RETURN @intReturnVal 
        END
    RETURN @intReturnVal

GO

GRANT EXECUTE ON [RDF.Security].[cg2_GroupDelete] TO App_Profiles10

GO

if exists (select * from dbo.sysobjects where id = object_id(N'[Profile.Import].[cg2_NIHAwardsGet]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
    drop procedure [Profile.Import].[cg2_NIHAwardsGet]

GO

CREATE PROCEDURE [Profile.Import].[cg2_NIHAwardsGet]
 
    @NIHAwardsID  INT 

AS
 
    SELECT TOP 100 PERCENT
        [Profile.Import].[NIHAwards].[NIHAwardsID]
        , [Profile.Import].[NIHAwards].[Application_Id]
        , [Profile.Import].[NIHAwards].[InternalUsername]
        , [Profile.Import].[NIHAwards].[Activity]
        , [Profile.Import].[NIHAwards].[Administering_IC]
        , [Profile.Import].[NIHAwards].[Application_Type]
        , [Profile.Import].[NIHAwards].[ARRA]
        , [Profile.Import].[NIHAwards].[Budget_Start]
        , [Profile.Import].[NIHAwards].[Budget_End]
        , [Profile.Import].[NIHAwards].[FOA_Number]
        , [Profile.Import].[NIHAwards].[Full_Project_Num_DC]
        , [Profile.Import].[NIHAwards].[SubProject_Id]
        , [Profile.Import].[NIHAwards].[Funding_ICs]
        , [Profile.Import].[NIHAwards].[FY]
        , [Profile.Import].[NIHAwards].[IC_Name]
        , [Profile.Import].[NIHAwards].[NIH_Reporting_Categories]
        , [Profile.Import].[NIHAwards].[Org_City]
        , [Profile.Import].[NIHAwards].[Org_Country]
        , [Profile.Import].[NIHAwards].[Org_Dept]
        , [Profile.Import].[NIHAwards].[Org_District]
        , [Profile.Import].[NIHAwards].[Org_DUNS]
        , [Profile.Import].[NIHAwards].[Org_FIPS]
        , [Profile.Import].[NIHAwards].[Org_State]
        , [Profile.Import].[NIHAwards].[Org_ZipCode]
        , [Profile.Import].[NIHAwards].[Organization]
        , [Profile.Import].[NIHAwards].[PI_Names]
        , [Profile.Import].[NIHAwards].[PI_PersonIds]
        , [Profile.Import].[NIHAwards].[Project_Start]
        , [Profile.Import].[NIHAwards].[Project_End]
        , [Profile.Import].[NIHAwards].[Project_Num]
        , [Profile.Import].[NIHAwards].[Project_Terms]
        , [Profile.Import].[NIHAwards].[Project_Title]
        , [Profile.Import].[NIHAwards].[Relevance]
        , [Profile.Import].[NIHAwards].[Serial_Number]
        , [Profile.Import].[NIHAwards].[Study_Section]
        , [Profile.Import].[NIHAwards].[Study_Section_Name]
        , [Profile.Import].[NIHAwards].[Suffix]
        , [Profile.Import].[NIHAwards].[Support_Year]
        , [Profile.Import].[NIHAwards].[Total_Cost]
        , [Profile.Import].[NIHAwards].[Total_Cost_Sub_Project]
        , [Profile.Import].[NIHAwards].[ImportID]
        , [Profile.Import].[NIHAwards].[Major_Component_Name]
        , [Profile.Import].[NIHAwards].[Award_Notice_Date]
        , [Profile.Import].[NIHAwards].[Core_Project_Num]
        , [Profile.Import].[NIHAwards].[CFDA_Code]
        , [Profile.Import].[NIHAwards].[Ed_Inst_Type]
        , [Profile.Import].[NIHAwards].[Program_Officer_Name]
        , [Profile.Import].[NIHAwards].[PHR]
        , [Profile.Import].[NIHAwards].[IsBU]
        , [Profile.Import].[NIHAwards].[IsBUMC]
        , [Profile.Import].[NIHAwards].[IsBMC]
        , [Profile.Import].[NIHAwards].[PubCount]
    FROM
        [Profile.Import].[NIHAwards]
    WHERE
        [Profile.Import].[NIHAwards].[NIHAwardsID] = @NIHAwardsID


GO

GRANT EXECUTE ON [Profile.Import].[cg2_NIHAwardsGet] TO App_Profiles10

GO

if exists (select * from dbo.sysobjects where id = object_id(N'[Profile.Import].[cg2_NIHAwardsGetByInternalUsername]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
    drop procedure [Profile.Import].[cg2_NIHAwardsGetByInternalUsername]

GO

CREATE PROCEDURE [Profile.Import].[cg2_NIHAwardsGetByInternalUsername]
 
    @InternalUsername  NVARCHAR(50) 

AS
 
    SELECT TOP 100 PERCENT
        [Profile.Import].[NIHAwards].[NIHAwardsID]
        , [Profile.Import].[NIHAwards].[Application_Id]
        , [Profile.Import].[NIHAwards].[InternalUsername]
        , [Profile.Import].[NIHAwards].[Activity]
        , [Profile.Import].[NIHAwards].[Administering_IC]
        , [Profile.Import].[NIHAwards].[Application_Type]
        , [Profile.Import].[NIHAwards].[ARRA]
        , [Profile.Import].[NIHAwards].[Budget_Start]
        , [Profile.Import].[NIHAwards].[Budget_End]
        , [Profile.Import].[NIHAwards].[FOA_Number]
        , [Profile.Import].[NIHAwards].[Full_Project_Num_DC]
        , [Profile.Import].[NIHAwards].[SubProject_Id]
        , [Profile.Import].[NIHAwards].[Funding_ICs]
        , [Profile.Import].[NIHAwards].[FY]
        , [Profile.Import].[NIHAwards].[IC_Name]
        , [Profile.Import].[NIHAwards].[NIH_Reporting_Categories]
        , [Profile.Import].[NIHAwards].[Org_City]
        , [Profile.Import].[NIHAwards].[Org_Country]
        , [Profile.Import].[NIHAwards].[Org_Dept]
        , [Profile.Import].[NIHAwards].[Org_District]
        , [Profile.Import].[NIHAwards].[Org_DUNS]
        , [Profile.Import].[NIHAwards].[Org_FIPS]
        , [Profile.Import].[NIHAwards].[Org_State]
        , [Profile.Import].[NIHAwards].[Org_ZipCode]
        , [Profile.Import].[NIHAwards].[Organization]
        , [Profile.Import].[NIHAwards].[PI_Names]
        , [Profile.Import].[NIHAwards].[PI_PersonIds]
        , [Profile.Import].[NIHAwards].[Project_Start]
        , [Profile.Import].[NIHAwards].[Project_End]
        , [Profile.Import].[NIHAwards].[Project_Num]
        , [Profile.Import].[NIHAwards].[Project_Terms]
        , [Profile.Import].[NIHAwards].[Project_Title]
        , [Profile.Import].[NIHAwards].[Relevance]
        , [Profile.Import].[NIHAwards].[Serial_Number]
        , [Profile.Import].[NIHAwards].[Study_Section]
        , [Profile.Import].[NIHAwards].[Study_Section_Name]
        , [Profile.Import].[NIHAwards].[Suffix]
        , [Profile.Import].[NIHAwards].[Support_Year]
        , [Profile.Import].[NIHAwards].[Total_Cost]
        , [Profile.Import].[NIHAwards].[Total_Cost_Sub_Project]
        , [Profile.Import].[NIHAwards].[ImportID]
        , [Profile.Import].[NIHAwards].[Major_Component_Name]
        , [Profile.Import].[NIHAwards].[Award_Notice_Date]
        , [Profile.Import].[NIHAwards].[Core_Project_Num]
        , [Profile.Import].[NIHAwards].[CFDA_Code]
        , [Profile.Import].[NIHAwards].[Ed_Inst_Type]
        , [Profile.Import].[NIHAwards].[Program_Officer_Name]
        , [Profile.Import].[NIHAwards].[PHR]
        , [Profile.Import].[NIHAwards].[IsBU]
        , [Profile.Import].[NIHAwards].[IsBUMC]
        , [Profile.Import].[NIHAwards].[IsBMC]
        , [Profile.Import].[NIHAwards].[PubCount]
    FROM
        [Profile.Import].[NIHAwards]
    WHERE
        [Profile.Import].[NIHAwards].[InternalUsername] = @InternalUsername


GO

GRANT EXECUTE ON [Profile.Import].[cg2_NIHAwardsGetByInternalUsername] TO App_Profiles10

GO

CREATE PROCEDURE [Profile.Import].[cg2_NIHAwardssGet]
 
AS
 
    SELECT TOP 100 PERCENT
        [Profile.Import].[NIHAwards].[NIHAwardsID]
        , [Profile.Import].[NIHAwards].[Application_Id]
        , [Profile.Import].[NIHAwards].[InternalUsername]
        , [Profile.Import].[NIHAwards].[Activity]
        , [Profile.Import].[NIHAwards].[Administering_IC]
        , [Profile.Import].[NIHAwards].[Application_Type]
        , [Profile.Import].[NIHAwards].[ARRA]
        , [Profile.Import].[NIHAwards].[Budget_Start]
        , [Profile.Import].[NIHAwards].[Budget_End]
        , [Profile.Import].[NIHAwards].[FOA_Number]
        , [Profile.Import].[NIHAwards].[Full_Project_Num_DC]
        , [Profile.Import].[NIHAwards].[SubProject_Id]
        , [Profile.Import].[NIHAwards].[Funding_ICs]
        , [Profile.Import].[NIHAwards].[FY]
        , [Profile.Import].[NIHAwards].[IC_Name]
        , [Profile.Import].[NIHAwards].[NIH_Reporting_Categories]
        , [Profile.Import].[NIHAwards].[Org_City]
        , [Profile.Import].[NIHAwards].[Org_Country]
        , [Profile.Import].[NIHAwards].[Org_Dept]
        , [Profile.Import].[NIHAwards].[Org_District]
        , [Profile.Import].[NIHAwards].[Org_DUNS]
        , [Profile.Import].[NIHAwards].[Org_FIPS]
        , [Profile.Import].[NIHAwards].[Org_State]
        , [Profile.Import].[NIHAwards].[Org_ZipCode]
        , [Profile.Import].[NIHAwards].[Organization]
        , [Profile.Import].[NIHAwards].[PI_Names]
        , [Profile.Import].[NIHAwards].[PI_PersonIds]
        , [Profile.Import].[NIHAwards].[Project_Start]
        , [Profile.Import].[NIHAwards].[Project_End]
        , [Profile.Import].[NIHAwards].[Project_Num]
        , [Profile.Import].[NIHAwards].[Project_Terms]
        , [Profile.Import].[NIHAwards].[Project_Title]
        , [Profile.Import].[NIHAwards].[Relevance]
        , [Profile.Import].[NIHAwards].[Serial_Number]
        , [Profile.Import].[NIHAwards].[Study_Section]
        , [Profile.Import].[NIHAwards].[Study_Section_Name]
        , [Profile.Import].[NIHAwards].[Suffix]
        , [Profile.Import].[NIHAwards].[Support_Year]
        , [Profile.Import].[NIHAwards].[Total_Cost]
        , [Profile.Import].[NIHAwards].[Total_Cost_Sub_Project]
        , [Profile.Import].[NIHAwards].[ImportID]
        , [Profile.Import].[NIHAwards].[Major_Component_Name]
        , [Profile.Import].[NIHAwards].[Award_Notice_Date]
        , [Profile.Import].[NIHAwards].[Core_Project_Num]
        , [Profile.Import].[NIHAwards].[CFDA_Code]
        , [Profile.Import].[NIHAwards].[Ed_Inst_Type]
        , [Profile.Import].[NIHAwards].[Program_Officer_Name]
        , [Profile.Import].[NIHAwards].[PHR]
        , [Profile.Import].[NIHAwards].[IsBU]
        , [Profile.Import].[NIHAwards].[IsBUMC]
        , [Profile.Import].[NIHAwards].[IsBMC]
        , [Profile.Import].[NIHAwards].[PubCount]
    FROM
        [Profile.Import].[NIHAwards]

GO

GRANT EXECUTE ON [Profile.Import].[cg2_NIHAwardssGet] TO App_Profiles10

GO

 
CREATE PROCEDURE [Profile.Import].[cg2_NIHAwardsAdd]

    @NIHAwardsID  INT =NULL OUTPUT 
    , @Application_Id  INT 
    , @InternalUsername  NVARCHAR(50) 
    , @Activity  VARCHAR(3) =NULL
    , @Administering_IC  VARCHAR(2) =NULL
    , @Application_Type  INT =NULL
    , @ARRA  VARCHAR(1) =NULL
    , @Budget_Start  SMALLDATETIME =NULL
    , @Budget_End  SMALLDATETIME =NULL
    , @FOA_Number  VARCHAR(17) =NULL
    , @Full_Project_Num_DC  VARCHAR(100) =NULL
    , @SubProject_Id  INT =NULL
    , @Funding_ICs  VARCHAR(300) =NULL
    , @FY  INT =NULL
    , @IC_Name  VARCHAR(255) =NULL
    , @NIH_Reporting_Categories  VARCHAR(900) =NULL
    , @Org_City  VARCHAR(255) =NULL
    , @Org_Country  VARCHAR(50) =NULL
    , @Org_Dept  VARCHAR(255) =NULL
    , @Org_District  INT =NULL
    , @Org_DUNS  VARCHAR(255) =NULL
    , @Org_FIPS  VARCHAR(255) =NULL
    , @Org_State  VARCHAR(50) =NULL
    , @Org_ZipCode  NVARCHAR(50) =NULL
    , @Organization  VARCHAR(255) =NULL
    , @PI_Names  VARCHAR(500) =NULL
    , @PI_PersonIds  VARCHAR(500) =NULL
    , @Project_Start  DATETIME =NULL
    , @Project_End  DATETIME =NULL
    , @Project_Num  VARCHAR(30) =NULL
    , @Project_Terms  VARCHAR(4000) =NULL
    , @Project_Title  VARCHAR(255) =NULL
    , @Relevance  VARCHAR(4000) =NULL
    , @Serial_Number  INT =NULL
    , @Study_Section  VARCHAR(4) =NULL
    , @Study_Section_Name  VARCHAR(255) =NULL
    , @Suffix  VARCHAR(6) =NULL
    , @Support_Year  INT =NULL
    , @Total_Cost  INT =NULL
    , @Total_Cost_Sub_Project  INT =NULL
    , @ImportID  INT 
    , @Major_Component_Name  VARCHAR(255) =NULL
    , @Award_Notice_Date  SMALLDATETIME =NULL
    , @Core_Project_Num  VARCHAR(50) =NULL
    , @CFDA_Code  VARCHAR(50) =NULL
    , @Ed_Inst_Type  VARCHAR(100) =NULL
    , @Program_Officer_Name  VARCHAR(255) =NULL
    , @PHR  VARCHAR(MAX) =NULL
    , @IsBU  BIT =NULL
    , @IsBUMC  BIT =NULL
    , @IsBMC  BIT =NULL
    , @PubCount  INT =NULL

AS


    DECLARE @intReturnVal INT 
    SET @intReturnVal = 0
    DECLARE @strReturn  Varchar(200) 
    SET @intReturnVal = 0
    DECLARE @intRecordLevelAuditTrailID INT 
    DECLARE @intFieldLevelAuditTrailID INT 
    DECLARE @intTableID INT 
    SET @intTableID = 4442
 
  
        INSERT INTO [Profile.Import].[NIHAwards]
        (
            [Application_Id]
            , [InternalUsername]
            , [Activity]
            , [Administering_IC]
            , [Application_Type]
            , [ARRA]
            , [Budget_Start]
            , [Budget_End]
            , [FOA_Number]
            , [Full_Project_Num_DC]
            , [SubProject_Id]
            , [Funding_ICs]
            , [FY]
            , [IC_Name]
            , [NIH_Reporting_Categories]
            , [Org_City]
            , [Org_Country]
            , [Org_Dept]
            , [Org_District]
            , [Org_DUNS]
            , [Org_FIPS]
            , [Org_State]
            , [Org_ZipCode]
            , [Organization]
            , [PI_Names]
            , [PI_PersonIds]
            , [Project_Start]
            , [Project_End]
            , [Project_Num]
            , [Project_Terms]
            , [Project_Title]
            , [Relevance]
            , [Serial_Number]
            , [Study_Section]
            , [Study_Section_Name]
            , [Suffix]
            , [Support_Year]
            , [Total_Cost]
            , [Total_Cost_Sub_Project]
            , [ImportID]
            , [Major_Component_Name]
            , [Award_Notice_Date]
            , [Core_Project_Num]
            , [CFDA_Code]
            , [Ed_Inst_Type]
            , [Program_Officer_Name]
            , [PHR]
            , [IsBU]
            , [IsBUMC]
            , [IsBMC]
            , [PubCount]
        )
        (
            SELECT
            @Application_Id
            , @InternalUsername
            , @Activity
            , @Administering_IC
            , @Application_Type
            , @ARRA
            , @Budget_Start
            , @Budget_End
            , @FOA_Number
            , @Full_Project_Num_DC
            , @SubProject_Id
            , @Funding_ICs
            , @FY
            , @IC_Name
            , @NIH_Reporting_Categories
            , @Org_City
            , @Org_Country
            , @Org_Dept
            , @Org_District
            , @Org_DUNS
            , @Org_FIPS
            , @Org_State
            , @Org_ZipCode
            , @Organization
            , @PI_Names
            , @PI_PersonIds
            , @Project_Start
            , @Project_End
            , @Project_Num
            , @Project_Terms
            , @Project_Title
            , @Relevance
            , @Serial_Number
            , @Study_Section
            , @Study_Section_Name
            , @Suffix
            , @Support_Year
            , @Total_Cost
            , @Total_Cost_Sub_Project
            , @ImportID
            , @Major_Component_Name
            , @Award_Notice_Date
            , @Core_Project_Num
            , @CFDA_Code
            , @Ed_Inst_Type
            , @Program_Officer_Name
            , @PHR
            , @IsBU
            , @IsBUMC
            , @IsBMC
            , @PubCount
        )
   
        SET @intReturnVal = @@error
        SET @NIHAwardsID = @@IDENTITY
        IF @intReturnVal <> 0
        BEGIN
            RAISERROR (N'An error occurred while adding the NIHAwards record.', 11, 11); 
            RETURN @intReturnVal 
        END

GO

GRANT EXECUTE ON [Profile.Import].[cg2_NIHAwardsAdd] TO App_Profiles10

GO

 
CREATE PROCEDURE [Profile.Import].[cg2_NIHAwardsEdit]

    @NIHAwardsID  INT =NULL OUTPUT 
    , @Application_Id  INT 
    , @InternalUsername  NVARCHAR(50) 
    , @Activity  VARCHAR(3) =NULL
    , @Administering_IC  VARCHAR(2) =NULL
    , @Application_Type  INT =NULL
    , @ARRA  VARCHAR(1) =NULL
    , @Budget_Start  SMALLDATETIME =NULL
    , @Budget_End  SMALLDATETIME =NULL
    , @FOA_Number  VARCHAR(17) =NULL
    , @Full_Project_Num_DC  VARCHAR(100) =NULL
    , @SubProject_Id  INT =NULL
    , @Funding_ICs  VARCHAR(300) =NULL
    , @FY  INT =NULL
    , @IC_Name  VARCHAR(255) =NULL
    , @NIH_Reporting_Categories  VARCHAR(900) =NULL
    , @Org_City  VARCHAR(255) =NULL
    , @Org_Country  VARCHAR(50) =NULL
    , @Org_Dept  VARCHAR(255) =NULL
    , @Org_District  INT =NULL
    , @Org_DUNS  VARCHAR(255) =NULL
    , @Org_FIPS  VARCHAR(255) =NULL
    , @Org_State  VARCHAR(50) =NULL
    , @Org_ZipCode  NVARCHAR(50) =NULL
    , @Organization  VARCHAR(255) =NULL
    , @PI_Names  VARCHAR(500) =NULL
    , @PI_PersonIds  VARCHAR(500) =NULL
    , @Project_Start  DATETIME =NULL
    , @Project_End  DATETIME =NULL
    , @Project_Num  VARCHAR(30) =NULL
    , @Project_Terms  VARCHAR(4000) =NULL
    , @Project_Title  VARCHAR(255) =NULL
    , @Relevance  VARCHAR(4000) =NULL
    , @Serial_Number  INT =NULL
    , @Study_Section  VARCHAR(4) =NULL
    , @Study_Section_Name  VARCHAR(255) =NULL
    , @Suffix  VARCHAR(6) =NULL
    , @Support_Year  INT =NULL
    , @Total_Cost  INT =NULL
    , @Total_Cost_Sub_Project  INT =NULL
    , @ImportID  INT 
    , @Major_Component_Name  VARCHAR(255) =NULL
    , @Award_Notice_Date  SMALLDATETIME =NULL
    , @Core_Project_Num  VARCHAR(50) =NULL
    , @CFDA_Code  VARCHAR(50) =NULL
    , @Ed_Inst_Type  VARCHAR(100) =NULL
    , @Program_Officer_Name  VARCHAR(255) =NULL
    , @PHR  VARCHAR(MAX) =NULL
    , @IsBU  BIT =NULL
    , @IsBUMC  BIT =NULL
    , @IsBMC  BIT =NULL
    , @PubCount  INT =NULL

AS


    DECLARE @intReturnVal INT 
    SET @intReturnVal = 0
    DECLARE @strReturn  Varchar(200) 
    SET @intReturnVal = 0
    DECLARE @intRecordLevelAuditTrailID INT 
    DECLARE @intFieldLevelAuditTrailID INT 
    DECLARE @intTableID INT 
    SET @intTableID = 4442
 
  
        UPDATE [Profile.Import].[NIHAwards]
        SET
            [Application_Id] = @Application_Id
            , [InternalUsername] = @InternalUsername
            , [Activity] = @Activity
            , [Administering_IC] = @Administering_IC
            , [Application_Type] = @Application_Type
            , [ARRA] = @ARRA
            , [Budget_Start] = @Budget_Start
            , [Budget_End] = @Budget_End
            , [FOA_Number] = @FOA_Number
            , [Full_Project_Num_DC] = @Full_Project_Num_DC
            , [SubProject_Id] = @SubProject_Id
            , [Funding_ICs] = @Funding_ICs
            , [FY] = @FY
            , [IC_Name] = @IC_Name
            , [NIH_Reporting_Categories] = @NIH_Reporting_Categories
            , [Org_City] = @Org_City
            , [Org_Country] = @Org_Country
            , [Org_Dept] = @Org_Dept
            , [Org_District] = @Org_District
            , [Org_DUNS] = @Org_DUNS
            , [Org_FIPS] = @Org_FIPS
            , [Org_State] = @Org_State
            , [Org_ZipCode] = @Org_ZipCode
            , [Organization] = @Organization
            , [PI_Names] = @PI_Names
            , [PI_PersonIds] = @PI_PersonIds
            , [Project_Start] = @Project_Start
            , [Project_End] = @Project_End
            , [Project_Num] = @Project_Num
            , [Project_Terms] = @Project_Terms
            , [Project_Title] = @Project_Title
            , [Relevance] = @Relevance
            , [Serial_Number] = @Serial_Number
            , [Study_Section] = @Study_Section
            , [Study_Section_Name] = @Study_Section_Name
            , [Suffix] = @Suffix
            , [Support_Year] = @Support_Year
            , [Total_Cost] = @Total_Cost
            , [Total_Cost_Sub_Project] = @Total_Cost_Sub_Project
            , [ImportID] = @ImportID
            , [Major_Component_Name] = @Major_Component_Name
            , [Award_Notice_Date] = @Award_Notice_Date
            , [Core_Project_Num] = @Core_Project_Num
            , [CFDA_Code] = @CFDA_Code
            , [Ed_Inst_Type] = @Ed_Inst_Type
            , [Program_Officer_Name] = @Program_Officer_Name
            , [PHR] = @PHR
            , [IsBU] = @IsBU
            , [IsBUMC] = @IsBUMC
            , [IsBMC] = @IsBMC
            , [PubCount] = @PubCount
        FROM
            [Profile.Import].[NIHAwards]
        WHERE
        [Profile.Import].[NIHAwards].[NIHAwardsID] = @NIHAwardsID

        
        SET @intReturnVal = @@error
        IF @intReturnVal <> 0
        BEGIN
            RAISERROR (N'An error occurred while editing the NIHAwards record.', 11, 11); 
            RETURN @intReturnVal 
        END

GO

GRANT EXECUTE ON [Profile.Import].[cg2_NIHAwardsEdit] TO App_Profiles10

GO

CREATE PROCEDURE [Profile.Import].[cg2_NIHAwardsDelete]
 
    @NIHAwardsID  INT 

 
AS
 
    DECLARE @intReturnVal INT 
    SET @intReturnVal = 0
 
 
        DELETE FROM [Profile.Import].[NIHAwards] WHERE         [Profile.Import].[NIHAwards].[NIHAwardsID] = @NIHAwardsID

 
        SET @intReturnVal = @@error
        IF @intReturnVal <> 0
        BEGIN
            RAISERROR (N'An error occurred while deleting the NIHAwards record.', 11, 11); 
            RETURN @intReturnVal 
        END
    RETURN @intReturnVal

GO

GRANT EXECUTE ON [Profile.Import].[cg2_NIHAwardsDelete] TO App_Profiles10

GO

if exists (select * from dbo.sysobjects where id = object_id(N'[RDF.].[cg2_NodeGetByValueHash]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
    drop procedure [RDF.].[cg2_NodeGetByValueHash]

GO

CREATE PROCEDURE [RDF.].[cg2_NodeGetByValueHash]
 
    @ValueHash  BINARY(20) 

AS
 
    SELECT TOP 100 PERCENT
        [RDF.].[Node].[NodeID]
        , [RDF.].[Node].[ValueHash]
        , [RDF.].[Node].[Language]
        , [RDF.].[Node].[DataType]
        , [RDF.].[Node].[Value]
        , [RDF.].[Node].[InternalNodeMapID]
        , [RDF.].[Node].[ObjectType]
        , [RDF.].[Node].[ViewSecurityGroup]
        , [RDF.].[Node].[EditSecurityGroup]
    FROM
        [RDF.].[Node]
    WHERE
        [RDF.].[Node].[ValueHash] = @ValueHash


GO

GRANT EXECUTE ON [RDF.].[cg2_NodeGetByValueHash] TO App_Profiles10

GO

if exists (select * from dbo.sysobjects where id = object_id(N'[RDF.].[cg2_NodeGet]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
    drop procedure [RDF.].[cg2_NodeGet]

GO

CREATE PROCEDURE [RDF.].[cg2_NodeGet]
 
    @NodeID  BIGINT 

AS
 
    SELECT TOP 100 PERCENT
        [RDF.].[Node].[NodeID]
        , [RDF.].[Node].[ValueHash]
        , [RDF.].[Node].[Language]
        , [RDF.].[Node].[DataType]
        , [RDF.].[Node].[Value]
        , [RDF.].[Node].[InternalNodeMapID]
        , [RDF.].[Node].[ObjectType]
        , [RDF.].[Node].[ViewSecurityGroup]
        , [RDF.].[Node].[EditSecurityGroup]
    FROM
        [RDF.].[Node]
    WHERE
        [RDF.].[Node].[NodeID] = @NodeID


GO

GRANT EXECUTE ON [RDF.].[cg2_NodeGet] TO App_Profiles10

GO

CREATE PROCEDURE [RDF.].[cg2_NodesGet]
 
AS
 
    SELECT TOP 100 PERCENT
        [RDF.].[Node].[NodeID]
        , [RDF.].[Node].[ValueHash]
        , [RDF.].[Node].[Language]
        , [RDF.].[Node].[DataType]
        , [RDF.].[Node].[Value]
        , [RDF.].[Node].[InternalNodeMapID]
        , [RDF.].[Node].[ObjectType]
        , [RDF.].[Node].[ViewSecurityGroup]
        , [RDF.].[Node].[EditSecurityGroup]
    FROM
        [RDF.].[Node]

GO

GRANT EXECUTE ON [RDF.].[cg2_NodesGet] TO App_Profiles10

GO

 
CREATE PROCEDURE [RDF.].[cg2_NodeAdd]

    @NodeID  BIGINT =NULL OUTPUT 
    , @ValueHash  BINARY(20) 
    , @Language  NVARCHAR(255) =NULL
    , @DataType  NVARCHAR(255) =NULL
    , @Value  NVARCHAR(MAX) 
    , @InternalNodeMapID  INT =NULL
    , @ObjectType  BIT =NULL
    , @ViewSecurityGroup  BIGINT =NULL
    , @EditSecurityGroup  BIGINT =NULL

AS


    DECLARE @intReturnVal INT 
    SET @intReturnVal = 0
    DECLARE @strReturn  Varchar(200) 
    SET @intReturnVal = 0
    DECLARE @intRecordLevelAuditTrailID INT 
    DECLARE @intFieldLevelAuditTrailID INT 
    DECLARE @intTableID INT 
    SET @intTableID = 3690
 
  
        INSERT INTO [RDF.].[Node]
        (
            [ValueHash]
            , [Language]
            , [DataType]
            , [Value]
            , [InternalNodeMapID]
            , [ObjectType]
            , [ViewSecurityGroup]
            , [EditSecurityGroup]
        )
        (
            SELECT
            @ValueHash
            , @Language
            , @DataType
            , @Value
            , @InternalNodeMapID
            , @ObjectType
            , @ViewSecurityGroup
            , @EditSecurityGroup
        )
   
        SET @intReturnVal = @@error
        SET @NodeID = @@IDENTITY
        IF @intReturnVal <> 0
        BEGIN
            RAISERROR (N'An error occurred while adding the Node record.', 11, 11); 
            RETURN @intReturnVal 
        END

GO

GRANT EXECUTE ON [RDF.].[cg2_NodeAdd] TO App_Profiles10

GO

 
CREATE PROCEDURE [RDF.].[cg2_NodeEdit]

    @NodeID  BIGINT =NULL OUTPUT 
    , @ValueHash  BINARY(20) 
    , @Language  NVARCHAR(255) =NULL
    , @DataType  NVARCHAR(255) =NULL
    , @Value  NVARCHAR(MAX) 
    , @InternalNodeMapID  INT =NULL
    , @ObjectType  BIT =NULL
    , @ViewSecurityGroup  BIGINT =NULL
    , @EditSecurityGroup  BIGINT =NULL

AS


    DECLARE @intReturnVal INT 
    SET @intReturnVal = 0
    DECLARE @strReturn  Varchar(200) 
    SET @intReturnVal = 0
    DECLARE @intRecordLevelAuditTrailID INT 
    DECLARE @intFieldLevelAuditTrailID INT 
    DECLARE @intTableID INT 
    SET @intTableID = 3690
 
  
        UPDATE [RDF.].[Node]
        SET
            [ValueHash] = @ValueHash
            , [Language] = @Language
            , [DataType] = @DataType
            , [Value] = @Value
            , [InternalNodeMapID] = @InternalNodeMapID
            , [ObjectType] = @ObjectType
            , [ViewSecurityGroup] = @ViewSecurityGroup
            , [EditSecurityGroup] = @EditSecurityGroup
        FROM
            [RDF.].[Node]
        WHERE
        [RDF.].[Node].[NodeID] = @NodeID

        
        SET @intReturnVal = @@error
        IF @intReturnVal <> 0
        BEGIN
            RAISERROR (N'An error occurred while editing the Node record.', 11, 11); 
            RETURN @intReturnVal 
        END

GO

GRANT EXECUTE ON [RDF.].[cg2_NodeEdit] TO App_Profiles10

GO

CREATE PROCEDURE [RDF.].[cg2_NodeDelete]
 
    @NodeID  BIGINT 

 
AS
 
    DECLARE @intReturnVal INT 
    SET @intReturnVal = 0
 
 
        DELETE FROM [RDF.].[Node] WHERE         [RDF.].[Node].[NodeID] = @NodeID

 
        SET @intReturnVal = @@error
        IF @intReturnVal <> 0
        BEGIN
            RAISERROR (N'An error occurred while deleting the Node record.', 11, 11); 
            RETURN @intReturnVal 
        END
    RETURN @intReturnVal

GO

GRANT EXECUTE ON [RDF.].[cg2_NodeDelete] TO App_Profiles10

GO

if exists (select * from dbo.sysobjects where id = object_id(N'[Profile.Data].[cg2_OrganizationDepartmentGet]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
    drop procedure [Profile.Data].[cg2_OrganizationDepartmentGet]

GO

CREATE PROCEDURE [Profile.Data].[cg2_OrganizationDepartmentGet]
 
    @DepartmentID  INT 

AS
 
    SELECT TOP 100 PERCENT
        [Profile.Data].[Organization.Department].[DepartmentID]
        , [Profile.Data].[Organization.Department].[DepartmentName]
        , [Profile.Data].[Organization.Department].[Visible]
    FROM
        [Profile.Data].[Organization.Department]
    WHERE
        [Profile.Data].[Organization.Department].[DepartmentID] = @DepartmentID


GO

GRANT EXECUTE ON [Profile.Data].[cg2_OrganizationDepartmentGet] TO App_Profiles10

GO

CREATE PROCEDURE [Profile.Data].[cg2_OrganizationDepartmentsGet]
 
AS
 
    SELECT TOP 100 PERCENT
        [Profile.Data].[Organization.Department].[DepartmentID]
        , [Profile.Data].[Organization.Department].[DepartmentName]
        , [Profile.Data].[Organization.Department].[Visible]
    FROM
        [Profile.Data].[Organization.Department]

GO

GRANT EXECUTE ON [Profile.Data].[cg2_OrganizationDepartmentsGet] TO App_Profiles10

GO

 
CREATE PROCEDURE [Profile.Data].[cg2_OrganizationDepartmentAdd]

    @DepartmentID  INT =NULL OUTPUT 
    , @DepartmentName  NVARCHAR(500) =NULL
    , @Visible  BIT =NULL

AS


    DECLARE @intReturnVal INT 
    SET @intReturnVal = 0
    DECLARE @strReturn  Varchar(200) 
    SET @intReturnVal = 0
    DECLARE @intRecordLevelAuditTrailID INT 
    DECLARE @intFieldLevelAuditTrailID INT 
    DECLARE @intTableID INT 
    SET @intTableID = 3684
 
  
        INSERT INTO [Profile.Data].[Organization.Department]
        (
            [DepartmentName]
            , [Visible]
        )
        (
            SELECT
            @DepartmentName
            , @Visible
        )
   
        SET @intReturnVal = @@error
        SET @DepartmentID = @@IDENTITY
        IF @intReturnVal <> 0
        BEGIN
            RAISERROR (N'An error occurred while adding the Organization.Department record.', 11, 11); 
            RETURN @intReturnVal 
        END

GO

GRANT EXECUTE ON [Profile.Data].[cg2_OrganizationDepartmentAdd] TO App_Profiles10

GO

 
CREATE PROCEDURE [Profile.Data].[cg2_OrganizationDepartmentEdit]

    @DepartmentID  INT =NULL OUTPUT 
    , @DepartmentName  NVARCHAR(500) =NULL
    , @Visible  BIT =NULL

AS


    DECLARE @intReturnVal INT 
    SET @intReturnVal = 0
    DECLARE @strReturn  Varchar(200) 
    SET @intReturnVal = 0
    DECLARE @intRecordLevelAuditTrailID INT 
    DECLARE @intFieldLevelAuditTrailID INT 
    DECLARE @intTableID INT 
    SET @intTableID = 3684
 
  
        UPDATE [Profile.Data].[Organization.Department]
        SET
            [DepartmentName] = @DepartmentName
            , [Visible] = @Visible
        FROM
            [Profile.Data].[Organization.Department]
        WHERE
        [Profile.Data].[Organization.Department].[DepartmentID] = @DepartmentID

        
        SET @intReturnVal = @@error
        IF @intReturnVal <> 0
        BEGIN
            RAISERROR (N'An error occurred while editing the Organization.Department record.', 11, 11); 
            RETURN @intReturnVal 
        END

GO

GRANT EXECUTE ON [Profile.Data].[cg2_OrganizationDepartmentEdit] TO App_Profiles10

GO

CREATE PROCEDURE [Profile.Data].[cg2_OrganizationDepartmentDelete]
 
    @DepartmentID  INT 

 
AS
 
    DECLARE @intReturnVal INT 
    SET @intReturnVal = 0
 
 
        DELETE FROM [Profile.Data].[Organization.Department] WHERE         [Profile.Data].[Organization.Department].[DepartmentID] = @DepartmentID

 
        SET @intReturnVal = @@error
        IF @intReturnVal <> 0
        BEGIN
            RAISERROR (N'An error occurred while deleting the Organization.Department record.', 11, 11); 
            RETURN @intReturnVal 
        END
    RETURN @intReturnVal

GO

GRANT EXECUTE ON [Profile.Data].[cg2_OrganizationDepartmentDelete] TO App_Profiles10

GO

if exists (select * from dbo.sysobjects where id = object_id(N'[Profile.Data].[cg2_OrganizationDivisionGet]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
    drop procedure [Profile.Data].[cg2_OrganizationDivisionGet]

GO

CREATE PROCEDURE [Profile.Data].[cg2_OrganizationDivisionGet]
 
    @DivisionID  INT 

AS
 
    SELECT TOP 100 PERCENT
        [Profile.Data].[Organization.Division].[DivisionID]
        , [Profile.Data].[Organization.Division].[DivisionName]
    FROM
        [Profile.Data].[Organization.Division]
    WHERE
        [Profile.Data].[Organization.Division].[DivisionID] = @DivisionID


GO

GRANT EXECUTE ON [Profile.Data].[cg2_OrganizationDivisionGet] TO App_Profiles10

GO

CREATE PROCEDURE [Profile.Data].[cg2_OrganizationDivisionsGet]
 
AS
 
    SELECT TOP 100 PERCENT
        [Profile.Data].[Organization.Division].[DivisionID]
        , [Profile.Data].[Organization.Division].[DivisionName]
    FROM
        [Profile.Data].[Organization.Division]

GO

GRANT EXECUTE ON [Profile.Data].[cg2_OrganizationDivisionsGet] TO App_Profiles10

GO

 
CREATE PROCEDURE [Profile.Data].[cg2_OrganizationDivisionAdd]

    @DivisionID  INT =NULL OUTPUT 
    , @DivisionName  NVARCHAR(500) =NULL

AS


    DECLARE @intReturnVal INT 
    SET @intReturnVal = 0
    DECLARE @strReturn  Varchar(200) 
    SET @intReturnVal = 0
    DECLARE @intRecordLevelAuditTrailID INT 
    DECLARE @intFieldLevelAuditTrailID INT 
    DECLARE @intTableID INT 
    SET @intTableID = 3683
 
  
        INSERT INTO [Profile.Data].[Organization.Division]
        (
            [DivisionName]
        )
        (
            SELECT
            @DivisionName
        )
   
        SET @intReturnVal = @@error
        SET @DivisionID = @@IDENTITY
        IF @intReturnVal <> 0
        BEGIN
            RAISERROR (N'An error occurred while adding the Organization.Division record.', 11, 11); 
            RETURN @intReturnVal 
        END

GO

GRANT EXECUTE ON [Profile.Data].[cg2_OrganizationDivisionAdd] TO App_Profiles10

GO

 
CREATE PROCEDURE [Profile.Data].[cg2_OrganizationDivisionEdit]

    @DivisionID  INT =NULL OUTPUT 
    , @DivisionName  NVARCHAR(500) =NULL

AS


    DECLARE @intReturnVal INT 
    SET @intReturnVal = 0
    DECLARE @strReturn  Varchar(200) 
    SET @intReturnVal = 0
    DECLARE @intRecordLevelAuditTrailID INT 
    DECLARE @intFieldLevelAuditTrailID INT 
    DECLARE @intTableID INT 
    SET @intTableID = 3683
 
  
        UPDATE [Profile.Data].[Organization.Division]
        SET
            [DivisionName] = @DivisionName
        FROM
            [Profile.Data].[Organization.Division]
        WHERE
        [Profile.Data].[Organization.Division].[DivisionID] = @DivisionID

        
        SET @intReturnVal = @@error
        IF @intReturnVal <> 0
        BEGIN
            RAISERROR (N'An error occurred while editing the Organization.Division record.', 11, 11); 
            RETURN @intReturnVal 
        END

GO

GRANT EXECUTE ON [Profile.Data].[cg2_OrganizationDivisionEdit] TO App_Profiles10

GO

CREATE PROCEDURE [Profile.Data].[cg2_OrganizationDivisionDelete]
 
    @DivisionID  INT 

 
AS
 
    DECLARE @intReturnVal INT 
    SET @intReturnVal = 0
 
 
        DELETE FROM [Profile.Data].[Organization.Division] WHERE         [Profile.Data].[Organization.Division].[DivisionID] = @DivisionID

 
        SET @intReturnVal = @@error
        IF @intReturnVal <> 0
        BEGIN
            RAISERROR (N'An error occurred while deleting the Organization.Division record.', 11, 11); 
            RETURN @intReturnVal 
        END
    RETURN @intReturnVal

GO

GRANT EXECUTE ON [Profile.Data].[cg2_OrganizationDivisionDelete] TO App_Profiles10

GO

if exists (select * from dbo.sysobjects where id = object_id(N'[Profile.Data].[cg2_OrganizationInstitutionGet]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
    drop procedure [Profile.Data].[cg2_OrganizationInstitutionGet]

GO

CREATE PROCEDURE [Profile.Data].[cg2_OrganizationInstitutionGet]
 
    @InstitutionID  INT 

AS
 
    SELECT TOP 100 PERCENT
        [Profile.Data].[Organization.Institution].[InstitutionID]
        , [Profile.Data].[Organization.Institution].[InstitutionName]
        , [Profile.Data].[Organization.Institution].[InstitutionAbbreviation]
        , [Profile.Data].[Organization.Institution].[City]
        , [Profile.Data].[Organization.Institution].[State]
        , [Profile.Data].[Organization.Institution].[Country]
        , [Profile.Data].[Organization.Institution].[RingGoldID]
    FROM
        [Profile.Data].[Organization.Institution]
    WHERE
        [Profile.Data].[Organization.Institution].[InstitutionID] = @InstitutionID


GO

GRANT EXECUTE ON [Profile.Data].[cg2_OrganizationInstitutionGet] TO App_Profiles10

GO

CREATE PROCEDURE [Profile.Data].[cg2_OrganizationInstitutionsGet]
 
AS
 
    SELECT TOP 100 PERCENT
        [Profile.Data].[Organization.Institution].[InstitutionID]
        , [Profile.Data].[Organization.Institution].[InstitutionName]
        , [Profile.Data].[Organization.Institution].[InstitutionAbbreviation]
        , [Profile.Data].[Organization.Institution].[City]
        , [Profile.Data].[Organization.Institution].[State]
        , [Profile.Data].[Organization.Institution].[Country]
        , [Profile.Data].[Organization.Institution].[RingGoldID]
    FROM
        [Profile.Data].[Organization.Institution]

GO

GRANT EXECUTE ON [Profile.Data].[cg2_OrganizationInstitutionsGet] TO App_Profiles10

GO

 
CREATE PROCEDURE [Profile.Data].[cg2_OrganizationInstitutionAdd]

    @InstitutionID  INT =NULL OUTPUT 
    , @InstitutionName  NVARCHAR(500) =NULL
    , @InstitutionAbbreviation  NVARCHAR(50) =NULL
    , @City  VARCHAR(500) =NULL
    , @State  VARCHAR(2) =NULL
    , @Country  VARCHAR(2) =NULL
    , @RingGoldID  VARCHAR(100) =NULL

AS


    DECLARE @intReturnVal INT 
    SET @intReturnVal = 0
    DECLARE @strReturn  Varchar(200) 
    SET @intReturnVal = 0
    DECLARE @intRecordLevelAuditTrailID INT 
    DECLARE @intFieldLevelAuditTrailID INT 
    DECLARE @intTableID INT 
    SET @intTableID = 3635
 
  
        INSERT INTO [Profile.Data].[Organization.Institution]
        (
            [InstitutionName]
            , [InstitutionAbbreviation]
            , [City]
            , [State]
            , [Country]
            , [RingGoldID]
        )
        (
            SELECT
            @InstitutionName
            , @InstitutionAbbreviation
            , @City
            , @State
            , @Country
            , @RingGoldID
        )
   
        SET @intReturnVal = @@error
        SET @InstitutionID = @@IDENTITY
        IF @intReturnVal <> 0
        BEGIN
            RAISERROR (N'An error occurred while adding the Organization.Institution record.', 11, 11); 
            RETURN @intReturnVal 
        END

GO

GRANT EXECUTE ON [Profile.Data].[cg2_OrganizationInstitutionAdd] TO App_Profiles10

GO

 
CREATE PROCEDURE [Profile.Data].[cg2_OrganizationInstitutionEdit]

    @InstitutionID  INT =NULL OUTPUT 
    , @InstitutionName  NVARCHAR(500) =NULL
    , @InstitutionAbbreviation  NVARCHAR(50) =NULL
    , @City  VARCHAR(500) =NULL
    , @State  VARCHAR(2) =NULL
    , @Country  VARCHAR(2) =NULL
    , @RingGoldID  VARCHAR(100) =NULL

AS


    DECLARE @intReturnVal INT 
    SET @intReturnVal = 0
    DECLARE @strReturn  Varchar(200) 
    SET @intReturnVal = 0
    DECLARE @intRecordLevelAuditTrailID INT 
    DECLARE @intFieldLevelAuditTrailID INT 
    DECLARE @intTableID INT 
    SET @intTableID = 3635
 
  
        UPDATE [Profile.Data].[Organization.Institution]
        SET
            [InstitutionName] = @InstitutionName
            , [InstitutionAbbreviation] = @InstitutionAbbreviation
            , [City] = @City
            , [State] = @State
            , [Country] = @Country
            , [RingGoldID] = @RingGoldID
        FROM
            [Profile.Data].[Organization.Institution]
        WHERE
        [Profile.Data].[Organization.Institution].[InstitutionID] = @InstitutionID

        
        SET @intReturnVal = @@error
        IF @intReturnVal <> 0
        BEGIN
            RAISERROR (N'An error occurred while editing the Organization.Institution record.', 11, 11); 
            RETURN @intReturnVal 
        END

GO

GRANT EXECUTE ON [Profile.Data].[cg2_OrganizationInstitutionEdit] TO App_Profiles10

GO

CREATE PROCEDURE [Profile.Data].[cg2_OrganizationInstitutionDelete]
 
    @InstitutionID  INT 

 
AS
 
    DECLARE @intReturnVal INT 
    SET @intReturnVal = 0
 
 
        DELETE FROM [Profile.Data].[Organization.Institution] WHERE         [Profile.Data].[Organization.Institution].[InstitutionID] = @InstitutionID

 
        SET @intReturnVal = @@error
        IF @intReturnVal <> 0
        BEGIN
            RAISERROR (N'An error occurred while deleting the Organization.Institution record.', 11, 11); 
            RETURN @intReturnVal 
        END
    RETURN @intReturnVal

GO

GRANT EXECUTE ON [Profile.Data].[cg2_OrganizationInstitutionDelete] TO App_Profiles10

GO

if exists (select * from dbo.sysobjects where id = object_id(N'[ORCID].[cg2_PersonGetByCreateUnlessOptOut]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
    drop procedure [ORCID].[cg2_PersonGetByCreateUnlessOptOut]

GO

CREATE PROCEDURE [ORCID].[cg2_PersonGetByCreateUnlessOptOut]
 
    @CreateUnlessOptOut  BIT 

AS
 
    SELECT TOP 100 PERCENT
        [ORCID].[Person].[PersonID]
        , [ORCID].[Person].[InternalUsername]
        , [ORCID].[Person].[PersonStatusTypeID]
        , [ORCID].[Person].[CreateUnlessOptOut]
        , [ORCID].[Person].[ORCID]
        , [ORCID].[Person].[ORCIDRecorded]
        , [ORCID].[Person].[FirstName]
        , [ORCID].[Person].[LastName]
        , [ORCID].[Person].[PublishedName]
        , [ORCID].[Person].[EmailDecisionID]
        , [ORCID].[Person].[EmailAddress]
        , [ORCID].[Person].[AlternateEmailDecisionID]
        , [ORCID].[Person].[AgreementAcknowledged]
        , [ORCID].[Person].[Biography]
        , [ORCID].[Person].[BiographyDecisionID]
    FROM
        [ORCID].[Person]
    WHERE
        [ORCID].[Person].[CreateUnlessOptOut] = @CreateUnlessOptOut


GO

GRANT EXECUTE ON [ORCID].[cg2_PersonGetByCreateUnlessOptOut] TO App_Profiles10

GO

if exists (select * from dbo.sysobjects where id = object_id(N'[ORCID].[cg2_PersonGetByInternalUsername]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
    drop procedure [ORCID].[cg2_PersonGetByInternalUsername]

GO

CREATE PROCEDURE [ORCID].[cg2_PersonGetByInternalUsername]
 
    @InternalUsername  NVARCHAR(100) 

AS
 
    SELECT TOP 100 PERCENT
        [ORCID].[Person].[PersonID]
        , [ORCID].[Person].[InternalUsername]
        , [ORCID].[Person].[PersonStatusTypeID]
        , [ORCID].[Person].[CreateUnlessOptOut]
        , [ORCID].[Person].[ORCID]
        , [ORCID].[Person].[ORCIDRecorded]
        , [ORCID].[Person].[FirstName]
        , [ORCID].[Person].[LastName]
        , [ORCID].[Person].[PublishedName]
        , [ORCID].[Person].[EmailDecisionID]
        , [ORCID].[Person].[EmailAddress]
        , [ORCID].[Person].[AlternateEmailDecisionID]
        , [ORCID].[Person].[AgreementAcknowledged]
        , [ORCID].[Person].[Biography]
        , [ORCID].[Person].[BiographyDecisionID]
    FROM
        [ORCID].[Person]
    WHERE
        [ORCID].[Person].[InternalUsername] = @InternalUsername


GO

GRANT EXECUTE ON [ORCID].[cg2_PersonGetByInternalUsername] TO App_Profiles10

GO

if exists (select * from dbo.sysobjects where id = object_id(N'[ORCID].[cg2_PersonGetByORCID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
    drop procedure [ORCID].[cg2_PersonGetByORCID]

GO

CREATE PROCEDURE [ORCID].[cg2_PersonGetByORCID]
 
    @ORCID  VARCHAR(50) 

AS
 
    SELECT TOP 100 PERCENT
        [ORCID].[Person].[PersonID]
        , [ORCID].[Person].[InternalUsername]
        , [ORCID].[Person].[PersonStatusTypeID]
        , [ORCID].[Person].[CreateUnlessOptOut]
        , [ORCID].[Person].[ORCID]
        , [ORCID].[Person].[ORCIDRecorded]
        , [ORCID].[Person].[FirstName]
        , [ORCID].[Person].[LastName]
        , [ORCID].[Person].[PublishedName]
        , [ORCID].[Person].[EmailDecisionID]
        , [ORCID].[Person].[EmailAddress]
        , [ORCID].[Person].[AlternateEmailDecisionID]
        , [ORCID].[Person].[AgreementAcknowledged]
        , [ORCID].[Person].[Biography]
        , [ORCID].[Person].[BiographyDecisionID]
    FROM
        [ORCID].[Person]
    WHERE
        [ORCID].[Person].[ORCID] = @ORCID


GO

GRANT EXECUTE ON [ORCID].[cg2_PersonGetByORCID] TO App_Profiles10

GO

if exists (select * from dbo.sysobjects where id = object_id(N'[ORCID].[cg2_PersonGetByPersonStatusTypeID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
    drop procedure [ORCID].[cg2_PersonGetByPersonStatusTypeID]

GO

CREATE PROCEDURE [ORCID].[cg2_PersonGetByPersonStatusTypeID]
 
    @PersonStatusTypeID  INT 

AS
 
    SELECT TOP 100 PERCENT
        [ORCID].[Person].[PersonID]
        , [ORCID].[Person].[InternalUsername]
        , [ORCID].[Person].[PersonStatusTypeID]
        , [ORCID].[Person].[CreateUnlessOptOut]
        , [ORCID].[Person].[ORCID]
        , [ORCID].[Person].[ORCIDRecorded]
        , [ORCID].[Person].[FirstName]
        , [ORCID].[Person].[LastName]
        , [ORCID].[Person].[PublishedName]
        , [ORCID].[Person].[EmailDecisionID]
        , [ORCID].[Person].[EmailAddress]
        , [ORCID].[Person].[AlternateEmailDecisionID]
        , [ORCID].[Person].[AgreementAcknowledged]
        , [ORCID].[Person].[Biography]
        , [ORCID].[Person].[BiographyDecisionID]
    FROM
        [ORCID].[Person]
    WHERE
        [ORCID].[Person].[PersonStatusTypeID] = @PersonStatusTypeID


GO

GRANT EXECUTE ON [ORCID].[cg2_PersonGetByPersonStatusTypeID] TO App_Profiles10

GO

if exists (select * from dbo.sysobjects where id = object_id(N'[ORCID].[cg2_PersonGet]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
    drop procedure [ORCID].[cg2_PersonGet]

GO

CREATE PROCEDURE [ORCID].[cg2_PersonGet]
 
    @PersonID  INT 

AS
 
    SELECT TOP 100 PERCENT
        [ORCID].[Person].[PersonID]
        , [ORCID].[Person].[InternalUsername]
        , [ORCID].[Person].[PersonStatusTypeID]
        , [ORCID].[Person].[CreateUnlessOptOut]
        , [ORCID].[Person].[ORCID]
        , [ORCID].[Person].[ORCIDRecorded]
        , [ORCID].[Person].[FirstName]
        , [ORCID].[Person].[LastName]
        , [ORCID].[Person].[PublishedName]
        , [ORCID].[Person].[EmailDecisionID]
        , [ORCID].[Person].[EmailAddress]
        , [ORCID].[Person].[AlternateEmailDecisionID]
        , [ORCID].[Person].[AgreementAcknowledged]
        , [ORCID].[Person].[Biography]
        , [ORCID].[Person].[BiographyDecisionID]
    FROM
        [ORCID].[Person]
    WHERE
        [ORCID].[Person].[PersonID] = @PersonID


GO

GRANT EXECUTE ON [ORCID].[cg2_PersonGet] TO App_Profiles10

GO

CREATE PROCEDURE [ORCID].[cg2_PersonsGet]
 
AS
 
    SELECT TOP 100 PERCENT
        [ORCID].[Person].[PersonID]
        , [ORCID].[Person].[InternalUsername]
        , [ORCID].[Person].[PersonStatusTypeID]
        , [ORCID].[Person].[CreateUnlessOptOut]
        , [ORCID].[Person].[ORCID]
        , [ORCID].[Person].[ORCIDRecorded]
        , [ORCID].[Person].[FirstName]
        , [ORCID].[Person].[LastName]
        , [ORCID].[Person].[PublishedName]
        , [ORCID].[Person].[EmailDecisionID]
        , [ORCID].[Person].[EmailAddress]
        , [ORCID].[Person].[AlternateEmailDecisionID]
        , [ORCID].[Person].[AgreementAcknowledged]
        , [ORCID].[Person].[Biography]
        , [ORCID].[Person].[BiographyDecisionID]
    FROM
        [ORCID].[Person]

GO

GRANT EXECUTE ON [ORCID].[cg2_PersonsGet] TO App_Profiles10

GO

 
CREATE PROCEDURE [ORCID].[cg2_PersonAdd]

    @PersonID  INT =NULL OUTPUT 
    , @InternalUsername  NVARCHAR(100) 
    , @PersonStatusTypeID  INT 
    , @CreateUnlessOptOut  BIT 
    , @ORCID  VARCHAR(50) =NULL
    , @ORCIDRecorded  SMALLDATETIME =NULL
    , @FirstName  NVARCHAR(150) =NULL
    , @LastName  NVARCHAR(150) =NULL
    , @PublishedName  NVARCHAR(500) =NULL
    , @EmailDecisionID  INT =NULL
    , @EmailAddress  VARCHAR(300) =NULL
    , @AlternateEmailDecisionID  INT =NULL
    , @AgreementAcknowledged  BIT =NULL
    , @Biography  VARCHAR(5000) =NULL
    , @BiographyDecisionID  INT =NULL

AS


    DECLARE @intReturnVal INT 
    SET @intReturnVal = 0
    DECLARE @strReturn  Varchar(200) 
    SET @intReturnVal = 0
    DECLARE @intRecordLevelAuditTrailID INT 
    DECLARE @intFieldLevelAuditTrailID INT 
    DECLARE @intTableID INT 
    SET @intTableID = 3566
 
  
        INSERT INTO [ORCID].[Person]
        (
            [InternalUsername]
            , [PersonStatusTypeID]
            , [CreateUnlessOptOut]
            , [ORCID]
            , [ORCIDRecorded]
            , [FirstName]
            , [LastName]
            , [PublishedName]
            , [EmailDecisionID]
            , [EmailAddress]
            , [AlternateEmailDecisionID]
            , [AgreementAcknowledged]
            , [Biography]
            , [BiographyDecisionID]
        )
        (
            SELECT
            @InternalUsername
            , @PersonStatusTypeID
            , @CreateUnlessOptOut
            , @ORCID
            , @ORCIDRecorded
            , @FirstName
            , @LastName
            , @PublishedName
            , @EmailDecisionID
            , @EmailAddress
            , @AlternateEmailDecisionID
            , @AgreementAcknowledged
            , @Biography
            , @BiographyDecisionID
        )
   
        SET @intReturnVal = @@error
        SET @PersonID = @@IDENTITY
        IF @intReturnVal <> 0
        BEGIN
            RAISERROR (N'An error occurred while adding the Person record.', 11, 11); 
            RETURN @intReturnVal 
        END

GO

GRANT EXECUTE ON [ORCID].[cg2_PersonAdd] TO App_Profiles10

GO

 
CREATE PROCEDURE [ORCID].[cg2_PersonEdit]

    @PersonID  INT =NULL OUTPUT 
    , @InternalUsername  NVARCHAR(100) 
    , @PersonStatusTypeID  INT 
    , @CreateUnlessOptOut  BIT 
    , @ORCID  VARCHAR(50) =NULL
    , @ORCIDRecorded  SMALLDATETIME =NULL
    , @FirstName  NVARCHAR(150) =NULL
    , @LastName  NVARCHAR(150) =NULL
    , @PublishedName  NVARCHAR(500) =NULL
    , @EmailDecisionID  INT =NULL
    , @EmailAddress  VARCHAR(300) =NULL
    , @AlternateEmailDecisionID  INT =NULL
    , @AgreementAcknowledged  BIT =NULL
    , @Biography  VARCHAR(5000) =NULL
    , @BiographyDecisionID  INT =NULL

AS


    DECLARE @intReturnVal INT 
    SET @intReturnVal = 0
    DECLARE @strReturn  Varchar(200) 
    SET @intReturnVal = 0
    DECLARE @intRecordLevelAuditTrailID INT 
    DECLARE @intFieldLevelAuditTrailID INT 
    DECLARE @intTableID INT 
    SET @intTableID = 3566
 
  
        UPDATE [ORCID].[Person]
        SET
            [InternalUsername] = @InternalUsername
            , [PersonStatusTypeID] = @PersonStatusTypeID
            , [CreateUnlessOptOut] = @CreateUnlessOptOut
            , [ORCID] = @ORCID
            , [ORCIDRecorded] = @ORCIDRecorded
            , [FirstName] = @FirstName
            , [LastName] = @LastName
            , [PublishedName] = @PublishedName
            , [EmailDecisionID] = @EmailDecisionID
            , [EmailAddress] = @EmailAddress
            , [AlternateEmailDecisionID] = @AlternateEmailDecisionID
            , [AgreementAcknowledged] = @AgreementAcknowledged
            , [Biography] = @Biography
            , [BiographyDecisionID] = @BiographyDecisionID
        FROM
            [ORCID].[Person]
        WHERE
        [ORCID].[Person].[PersonID] = @PersonID

        
        SET @intReturnVal = @@error
        IF @intReturnVal <> 0
        BEGIN
            RAISERROR (N'An error occurred while editing the Person record.', 11, 11); 
            RETURN @intReturnVal 
        END

GO

GRANT EXECUTE ON [ORCID].[cg2_PersonEdit] TO App_Profiles10

GO

CREATE PROCEDURE [ORCID].[cg2_PersonDelete]
 
    @PersonID  INT 

 
AS
 
    DECLARE @intReturnVal INT 
    SET @intReturnVal = 0
 
 
        DELETE FROM [ORCID].[Person] WHERE         [ORCID].[Person].[PersonID] = @PersonID

 
        SET @intReturnVal = @@error
        IF @intReturnVal <> 0
        BEGIN
            RAISERROR (N'An error occurred while deleting the Person record.', 11, 11); 
            RETURN @intReturnVal 
        END
    RETURN @intReturnVal

GO

GRANT EXECUTE ON [ORCID].[cg2_PersonDelete] TO App_Profiles10

GO

if exists (select * from dbo.sysobjects where id = object_id(N'[Profile.Data].[cg2_PersonGetByInternalUsername]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
    drop procedure [Profile.Data].[cg2_PersonGetByInternalUsername]

GO

CREATE PROCEDURE [Profile.Data].[cg2_PersonGetByInternalUsername]
 
    @InternalUsername  NVARCHAR(50) 

AS
 
    SELECT TOP 100 PERCENT
        [Profile.Data].[Person].[PersonID]
        , [Profile.Data].[Person].[UserID]
        , [Profile.Data].[Person].[FirstName]
        , [Profile.Data].[Person].[LastName]
        , [Profile.Data].[Person].[MiddleName]
        , [Profile.Data].[Person].[DisplayName]
        , [Profile.Data].[Person].[Suffix]
        , [Profile.Data].[Person].[IsActive]
        , [Profile.Data].[Person].[EmailAddr]
        , [Profile.Data].[Person].[Phone]
        , [Profile.Data].[Person].[Fax]
        , [Profile.Data].[Person].[AddressLine1]
        , [Profile.Data].[Person].[AddressLine2]
        , [Profile.Data].[Person].[AddressLine3]
        , [Profile.Data].[Person].[AddressLine4]
        , [Profile.Data].[Person].[City]
        , [Profile.Data].[Person].[State]
        , [Profile.Data].[Person].[Zip]
        , [Profile.Data].[Person].[Building]
        , [Profile.Data].[Person].[Floor]
        , [Profile.Data].[Person].[Room]
        , [Profile.Data].[Person].[AddressString]
        , [Profile.Data].[Person].[Latitude]
        , [Profile.Data].[Person].[Longitude]
        , [Profile.Data].[Person].[GeoScore]
        , [Profile.Data].[Person].[FacultyRankID]
        , [Profile.Data].[Person].[InternalUsername]
        , [Profile.Data].[Person].[Visible]
    FROM
        [Profile.Data].[Person]
    WHERE
        [Profile.Data].[Person].[InternalUsername] = @InternalUsername


GO

GRANT EXECUTE ON [Profile.Data].[cg2_PersonGetByInternalUsername] TO App_Profiles10

GO

if exists (select * from dbo.sysobjects where id = object_id(N'[Profile.Data].[cg2_PersonGet]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
    drop procedure [Profile.Data].[cg2_PersonGet]

GO

CREATE PROCEDURE [Profile.Data].[cg2_PersonGet]
 
    @PersonID  INT 

AS
 
    SELECT TOP 100 PERCENT
        [Profile.Data].[Person].[PersonID]
        , [Profile.Data].[Person].[UserID]
        , [Profile.Data].[Person].[FirstName]
        , [Profile.Data].[Person].[LastName]
        , [Profile.Data].[Person].[MiddleName]
        , [Profile.Data].[Person].[DisplayName]
        , [Profile.Data].[Person].[Suffix]
        , [Profile.Data].[Person].[IsActive]
        , [Profile.Data].[Person].[EmailAddr]
        , [Profile.Data].[Person].[Phone]
        , [Profile.Data].[Person].[Fax]
        , [Profile.Data].[Person].[AddressLine1]
        , [Profile.Data].[Person].[AddressLine2]
        , [Profile.Data].[Person].[AddressLine3]
        , [Profile.Data].[Person].[AddressLine4]
        , [Profile.Data].[Person].[City]
        , [Profile.Data].[Person].[State]
        , [Profile.Data].[Person].[Zip]
        , [Profile.Data].[Person].[Building]
        , [Profile.Data].[Person].[Floor]
        , [Profile.Data].[Person].[Room]
        , [Profile.Data].[Person].[AddressString]
        , [Profile.Data].[Person].[Latitude]
        , [Profile.Data].[Person].[Longitude]
        , [Profile.Data].[Person].[GeoScore]
        , [Profile.Data].[Person].[FacultyRankID]
        , [Profile.Data].[Person].[InternalUsername]
        , [Profile.Data].[Person].[Visible]
    FROM
        [Profile.Data].[Person]
    WHERE
        [Profile.Data].[Person].[PersonID] = @PersonID


GO

GRANT EXECUTE ON [Profile.Data].[cg2_PersonGet] TO App_Profiles10

GO

CREATE PROCEDURE [Profile.Data].[cg2_PersonsGet]
 
AS
 
    SELECT TOP 100 PERCENT
        [Profile.Data].[Person].[PersonID]
        , [Profile.Data].[Person].[UserID]
        , [Profile.Data].[Person].[FirstName]
        , [Profile.Data].[Person].[LastName]
        , [Profile.Data].[Person].[MiddleName]
        , [Profile.Data].[Person].[DisplayName]
        , [Profile.Data].[Person].[Suffix]
        , [Profile.Data].[Person].[IsActive]
        , [Profile.Data].[Person].[EmailAddr]
        , [Profile.Data].[Person].[Phone]
        , [Profile.Data].[Person].[Fax]
        , [Profile.Data].[Person].[AddressLine1]
        , [Profile.Data].[Person].[AddressLine2]
        , [Profile.Data].[Person].[AddressLine3]
        , [Profile.Data].[Person].[AddressLine4]
        , [Profile.Data].[Person].[City]
        , [Profile.Data].[Person].[State]
        , [Profile.Data].[Person].[Zip]
        , [Profile.Data].[Person].[Building]
        , [Profile.Data].[Person].[Floor]
        , [Profile.Data].[Person].[Room]
        , [Profile.Data].[Person].[AddressString]
        , [Profile.Data].[Person].[Latitude]
        , [Profile.Data].[Person].[Longitude]
        , [Profile.Data].[Person].[GeoScore]
        , [Profile.Data].[Person].[FacultyRankID]
        , [Profile.Data].[Person].[InternalUsername]
        , [Profile.Data].[Person].[Visible]
    FROM
        [Profile.Data].[Person]

GO

GRANT EXECUTE ON [Profile.Data].[cg2_PersonsGet] TO App_Profiles10

GO

 
CREATE PROCEDURE [Profile.Data].[cg2_PersonAdd]

    @PersonID  INT =NULL OUTPUT 
    , @UserID  INT =NULL
    , @FirstName  NVARCHAR(50) =NULL
    , @LastName  NVARCHAR(50) =NULL
    , @MiddleName  NVARCHAR(50) =NULL
    , @DisplayName  NVARCHAR(255) =NULL
    , @Suffix  NVARCHAR(50) =NULL
    , @IsActive  BIT =NULL
    , @EmailAddr  NVARCHAR(255) =NULL
    , @Phone  NVARCHAR(35) =NULL
    , @Fax  NVARCHAR(25) =NULL
    , @AddressLine1  NVARCHAR(255) =NULL
    , @AddressLine2  NVARCHAR(255) =NULL
    , @AddressLine3  NVARCHAR(255) =NULL
    , @AddressLine4  NVARCHAR(255) =NULL
    , @City  NVARCHAR(55) =NULL
    , @State  NVARCHAR(50) =NULL
    , @Zip  NVARCHAR(50) =NULL
    , @Building  NVARCHAR(255) =NULL
    , @Floor  INT =NULL
    , @Room  NVARCHAR(255) =NULL
    , @AddressString  NVARCHAR(1000) =NULL
    , @Latitude  REAL =NULL
    , @Longitude  REAL =NULL
    , @GeoScore  INT =NULL
    , @FacultyRankID  INT =NULL
    , @InternalUsername  NVARCHAR(50) =NULL
    , @Visible  BIT =NULL

AS


    DECLARE @intReturnVal INT 
    SET @intReturnVal = 0
    DECLARE @strReturn  Varchar(200) 
    SET @intReturnVal = 0
    DECLARE @intRecordLevelAuditTrailID INT 
    DECLARE @intFieldLevelAuditTrailID INT 
    DECLARE @intTableID INT 
    SET @intTableID = 3728
 
  
        INSERT INTO [Profile.Data].[Person]
        (
            [UserID]
            , [FirstName]
            , [LastName]
            , [MiddleName]
            , [DisplayName]
            , [Suffix]
            , [IsActive]
            , [EmailAddr]
            , [Phone]
            , [Fax]
            , [AddressLine1]
            , [AddressLine2]
            , [AddressLine3]
            , [AddressLine4]
            , [City]
            , [State]
            , [Zip]
            , [Building]
            , [Floor]
            , [Room]
            , [AddressString]
            , [Latitude]
            , [Longitude]
            , [GeoScore]
            , [FacultyRankID]
            , [InternalUsername]
            , [Visible]
        )
        (
            SELECT
            @UserID
            , @FirstName
            , @LastName
            , @MiddleName
            , @DisplayName
            , @Suffix
            , @IsActive
            , @EmailAddr
            , @Phone
            , @Fax
            , @AddressLine1
            , @AddressLine2
            , @AddressLine3
            , @AddressLine4
            , @City
            , @State
            , @Zip
            , @Building
            , @Floor
            , @Room
            , @AddressString
            , @Latitude
            , @Longitude
            , @GeoScore
            , @FacultyRankID
            , @InternalUsername
            , @Visible
        )
   
        SET @intReturnVal = @@error
        SET @PersonID = @@IDENTITY
        IF @intReturnVal <> 0
        BEGIN
            RAISERROR (N'An error occurred while adding the Person record.', 11, 11); 
            RETURN @intReturnVal 
        END

GO

GRANT EXECUTE ON [Profile.Data].[cg2_PersonAdd] TO App_Profiles10

GO

 
CREATE PROCEDURE [Profile.Data].[cg2_PersonEdit]

    @PersonID  INT =NULL OUTPUT 
    , @UserID  INT =NULL
    , @FirstName  NVARCHAR(50) =NULL
    , @LastName  NVARCHAR(50) =NULL
    , @MiddleName  NVARCHAR(50) =NULL
    , @DisplayName  NVARCHAR(255) =NULL
    , @Suffix  NVARCHAR(50) =NULL
    , @IsActive  BIT =NULL
    , @EmailAddr  NVARCHAR(255) =NULL
    , @Phone  NVARCHAR(35) =NULL
    , @Fax  NVARCHAR(25) =NULL
    , @AddressLine1  NVARCHAR(255) =NULL
    , @AddressLine2  NVARCHAR(255) =NULL
    , @AddressLine3  NVARCHAR(255) =NULL
    , @AddressLine4  NVARCHAR(255) =NULL
    , @City  NVARCHAR(55) =NULL
    , @State  NVARCHAR(50) =NULL
    , @Zip  NVARCHAR(50) =NULL
    , @Building  NVARCHAR(255) =NULL
    , @Floor  INT =NULL
    , @Room  NVARCHAR(255) =NULL
    , @AddressString  NVARCHAR(1000) =NULL
    , @Latitude  REAL =NULL
    , @Longitude  REAL =NULL
    , @GeoScore  INT =NULL
    , @FacultyRankID  INT =NULL
    , @InternalUsername  NVARCHAR(50) =NULL
    , @Visible  BIT =NULL

AS


    DECLARE @intReturnVal INT 
    SET @intReturnVal = 0
    DECLARE @strReturn  Varchar(200) 
    SET @intReturnVal = 0
    DECLARE @intRecordLevelAuditTrailID INT 
    DECLARE @intFieldLevelAuditTrailID INT 
    DECLARE @intTableID INT 
    SET @intTableID = 3728
 
  
        UPDATE [Profile.Data].[Person]
        SET
            [UserID] = @UserID
            , [FirstName] = @FirstName
            , [LastName] = @LastName
            , [MiddleName] = @MiddleName
            , [DisplayName] = @DisplayName
            , [Suffix] = @Suffix
            , [IsActive] = @IsActive
            , [EmailAddr] = @EmailAddr
            , [Phone] = @Phone
            , [Fax] = @Fax
            , [AddressLine1] = @AddressLine1
            , [AddressLine2] = @AddressLine2
            , [AddressLine3] = @AddressLine3
            , [AddressLine4] = @AddressLine4
            , [City] = @City
            , [State] = @State
            , [Zip] = @Zip
            , [Building] = @Building
            , [Floor] = @Floor
            , [Room] = @Room
            , [AddressString] = @AddressString
            , [Latitude] = @Latitude
            , [Longitude] = @Longitude
            , [GeoScore] = @GeoScore
            , [FacultyRankID] = @FacultyRankID
            , [InternalUsername] = @InternalUsername
            , [Visible] = @Visible
        FROM
            [Profile.Data].[Person]
        WHERE
        [Profile.Data].[Person].[PersonID] = @PersonID

        
        SET @intReturnVal = @@error
        IF @intReturnVal <> 0
        BEGIN
            RAISERROR (N'An error occurred while editing the Person record.', 11, 11); 
            RETURN @intReturnVal 
        END

GO

GRANT EXECUTE ON [Profile.Data].[cg2_PersonEdit] TO App_Profiles10

GO

CREATE PROCEDURE [Profile.Data].[cg2_PersonDelete]
 
    @PersonID  INT 

 
AS
 
    DECLARE @intReturnVal INT 
    SET @intReturnVal = 0
 
 
        DELETE FROM [Profile.Data].[Person] WHERE         [Profile.Data].[Person].[PersonID] = @PersonID

 
        SET @intReturnVal = @@error
        IF @intReturnVal <> 0
        BEGIN
            RAISERROR (N'An error occurred while deleting the Person record.', 11, 11); 
            RETURN @intReturnVal 
        END
    RETURN @intReturnVal

GO

GRANT EXECUTE ON [Profile.Data].[cg2_PersonDelete] TO App_Profiles10

GO

if exists (select * from dbo.sysobjects where id = object_id(N'[Profile.Data].[cg2_PersonFacultyRankGet]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
    drop procedure [Profile.Data].[cg2_PersonFacultyRankGet]

GO

CREATE PROCEDURE [Profile.Data].[cg2_PersonFacultyRankGet]
 
    @FacultyRankID  INT 

AS
 
    SELECT TOP 100 PERCENT
        [Profile.Data].[Person.FacultyRank].[FacultyRankID]
        , [Profile.Data].[Person.FacultyRank].[FacultyRank]
        , [Profile.Data].[Person.FacultyRank].[FacultyRankSort]
        , [Profile.Data].[Person.FacultyRank].[Visible]
    FROM
        [Profile.Data].[Person.FacultyRank]
    WHERE
        [Profile.Data].[Person.FacultyRank].[FacultyRankID] = @FacultyRankID


GO

GRANT EXECUTE ON [Profile.Data].[cg2_PersonFacultyRankGet] TO App_Profiles10

GO

CREATE PROCEDURE [Profile.Data].[cg2_PersonFacultyRanksGet]
 
AS
 
    SELECT TOP 100 PERCENT
        [Profile.Data].[Person.FacultyRank].[FacultyRankID]
        , [Profile.Data].[Person.FacultyRank].[FacultyRank]
        , [Profile.Data].[Person.FacultyRank].[FacultyRankSort]
        , [Profile.Data].[Person.FacultyRank].[Visible]
    FROM
        [Profile.Data].[Person.FacultyRank]

GO

GRANT EXECUTE ON [Profile.Data].[cg2_PersonFacultyRanksGet] TO App_Profiles10

GO

 
CREATE PROCEDURE [Profile.Data].[cg2_PersonFacultyRankAdd]

    @FacultyRankID  INT =NULL OUTPUT 
    , @FacultyRank  VARCHAR(100) =NULL
    , @FacultyRankSort  INT =NULL
    , @Visible  BIT =NULL

AS


    DECLARE @intReturnVal INT 
    SET @intReturnVal = 0
    DECLARE @strReturn  Varchar(200) 
    SET @intReturnVal = 0
    DECLARE @intRecordLevelAuditTrailID INT 
    DECLARE @intFieldLevelAuditTrailID INT 
    DECLARE @intTableID INT 
    SET @intTableID = 3572
 
  
        INSERT INTO [Profile.Data].[Person.FacultyRank]
        (
            [FacultyRank]
            , [FacultyRankSort]
            , [Visible]
        )
        (
            SELECT
            @FacultyRank
            , @FacultyRankSort
            , @Visible
        )
   
        SET @intReturnVal = @@error
        SET @FacultyRankID = @@IDENTITY
        IF @intReturnVal <> 0
        BEGIN
            RAISERROR (N'An error occurred while adding the Person.FacultyRank record.', 11, 11); 
            RETURN @intReturnVal 
        END

GO

GRANT EXECUTE ON [Profile.Data].[cg2_PersonFacultyRankAdd] TO App_Profiles10

GO

 
CREATE PROCEDURE [Profile.Data].[cg2_PersonFacultyRankEdit]

    @FacultyRankID  INT =NULL OUTPUT 
    , @FacultyRank  VARCHAR(100) =NULL
    , @FacultyRankSort  INT =NULL
    , @Visible  BIT =NULL

AS


    DECLARE @intReturnVal INT 
    SET @intReturnVal = 0
    DECLARE @strReturn  Varchar(200) 
    SET @intReturnVal = 0
    DECLARE @intRecordLevelAuditTrailID INT 
    DECLARE @intFieldLevelAuditTrailID INT 
    DECLARE @intTableID INT 
    SET @intTableID = 3572
 
  
        UPDATE [Profile.Data].[Person.FacultyRank]
        SET
            [FacultyRank] = @FacultyRank
            , [FacultyRankSort] = @FacultyRankSort
            , [Visible] = @Visible
        FROM
            [Profile.Data].[Person.FacultyRank]
        WHERE
        [Profile.Data].[Person.FacultyRank].[FacultyRankID] = @FacultyRankID

        
        SET @intReturnVal = @@error
        IF @intReturnVal <> 0
        BEGIN
            RAISERROR (N'An error occurred while editing the Person.FacultyRank record.', 11, 11); 
            RETURN @intReturnVal 
        END

GO

GRANT EXECUTE ON [Profile.Data].[cg2_PersonFacultyRankEdit] TO App_Profiles10

GO

CREATE PROCEDURE [Profile.Data].[cg2_PersonFacultyRankDelete]
 
    @FacultyRankID  INT 

 
AS
 
    DECLARE @intReturnVal INT 
    SET @intReturnVal = 0
 
 
        DELETE FROM [Profile.Data].[Person.FacultyRank] WHERE         [Profile.Data].[Person.FacultyRank].[FacultyRankID] = @FacultyRankID

 
        SET @intReturnVal = @@error
        IF @intReturnVal <> 0
        BEGIN
            RAISERROR (N'An error occurred while deleting the Person.FacultyRank record.', 11, 11); 
            RETURN @intReturnVal 
        END
    RETURN @intReturnVal

GO

GRANT EXECUTE ON [Profile.Data].[cg2_PersonFacultyRankDelete] TO App_Profiles10

GO

if exists (select * from dbo.sysobjects where id = object_id(N'[ORCID].[cg2_PersonAffiliationGetByDecisionID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
    drop procedure [ORCID].[cg2_PersonAffiliationGetByDecisionID]

GO

CREATE PROCEDURE [ORCID].[cg2_PersonAffiliationGetByDecisionID]
 
    @DecisionID  INT 

AS
 
    SELECT TOP 100 PERCENT
        [ORCID].[PersonAffiliation].[PersonAffiliationID]
        , [ORCID].[PersonAffiliation].[ProfilesID]
        , [ORCID].[PersonAffiliation].[AffiliationTypeID]
        , [ORCID].[PersonAffiliation].[PersonID]
        , [ORCID].[PersonAffiliation].[PersonMessageID]
        , [ORCID].[PersonAffiliation].[DecisionID]
        , [ORCID].[PersonAffiliation].[DepartmentName]
        , [ORCID].[PersonAffiliation].[RoleTitle]
        , [ORCID].[PersonAffiliation].[StartDate]
        , [ORCID].[PersonAffiliation].[EndDate]
        , [ORCID].[PersonAffiliation].[OrganizationName]
        , [ORCID].[PersonAffiliation].[OrganizationCity]
        , [ORCID].[PersonAffiliation].[OrganizationRegion]
        , [ORCID].[PersonAffiliation].[OrganizationCountry]
        , [ORCID].[PersonAffiliation].[DisambiguationID]
        , [ORCID].[PersonAffiliation].[DisambiguationSource]
    FROM
        [ORCID].[PersonAffiliation]
    WHERE
        [ORCID].[PersonAffiliation].[DecisionID] = @DecisionID


GO

GRANT EXECUTE ON [ORCID].[cg2_PersonAffiliationGetByDecisionID] TO App_Profiles10

GO

if exists (select * from dbo.sysobjects where id = object_id(N'[ORCID].[cg2_PersonAffiliationGetByPersonID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
    drop procedure [ORCID].[cg2_PersonAffiliationGetByPersonID]

GO

CREATE PROCEDURE [ORCID].[cg2_PersonAffiliationGetByPersonID]
 
    @PersonID  INT 

AS
 
    SELECT TOP 100 PERCENT
        [ORCID].[PersonAffiliation].[PersonAffiliationID]
        , [ORCID].[PersonAffiliation].[ProfilesID]
        , [ORCID].[PersonAffiliation].[AffiliationTypeID]
        , [ORCID].[PersonAffiliation].[PersonID]
        , [ORCID].[PersonAffiliation].[PersonMessageID]
        , [ORCID].[PersonAffiliation].[DecisionID]
        , [ORCID].[PersonAffiliation].[DepartmentName]
        , [ORCID].[PersonAffiliation].[RoleTitle]
        , [ORCID].[PersonAffiliation].[StartDate]
        , [ORCID].[PersonAffiliation].[EndDate]
        , [ORCID].[PersonAffiliation].[OrganizationName]
        , [ORCID].[PersonAffiliation].[OrganizationCity]
        , [ORCID].[PersonAffiliation].[OrganizationRegion]
        , [ORCID].[PersonAffiliation].[OrganizationCountry]
        , [ORCID].[PersonAffiliation].[DisambiguationID]
        , [ORCID].[PersonAffiliation].[DisambiguationSource]
    FROM
        [ORCID].[PersonAffiliation]
    WHERE
        [ORCID].[PersonAffiliation].[PersonID] = @PersonID


GO

GRANT EXECUTE ON [ORCID].[cg2_PersonAffiliationGetByPersonID] TO App_Profiles10

GO

if exists (select * from dbo.sysobjects where id = object_id(N'[ORCID].[cg2_PersonAffiliationGetByPersonMessageID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
    drop procedure [ORCID].[cg2_PersonAffiliationGetByPersonMessageID]

GO

CREATE PROCEDURE [ORCID].[cg2_PersonAffiliationGetByPersonMessageID]
 
    @PersonMessageID  INT 

AS
 
    SELECT TOP 100 PERCENT
        [ORCID].[PersonAffiliation].[PersonAffiliationID]
        , [ORCID].[PersonAffiliation].[ProfilesID]
        , [ORCID].[PersonAffiliation].[AffiliationTypeID]
        , [ORCID].[PersonAffiliation].[PersonID]
        , [ORCID].[PersonAffiliation].[PersonMessageID]
        , [ORCID].[PersonAffiliation].[DecisionID]
        , [ORCID].[PersonAffiliation].[DepartmentName]
        , [ORCID].[PersonAffiliation].[RoleTitle]
        , [ORCID].[PersonAffiliation].[StartDate]
        , [ORCID].[PersonAffiliation].[EndDate]
        , [ORCID].[PersonAffiliation].[OrganizationName]
        , [ORCID].[PersonAffiliation].[OrganizationCity]
        , [ORCID].[PersonAffiliation].[OrganizationRegion]
        , [ORCID].[PersonAffiliation].[OrganizationCountry]
        , [ORCID].[PersonAffiliation].[DisambiguationID]
        , [ORCID].[PersonAffiliation].[DisambiguationSource]
    FROM
        [ORCID].[PersonAffiliation]
    WHERE
        [ORCID].[PersonAffiliation].[PersonMessageID] = @PersonMessageID


GO

GRANT EXECUTE ON [ORCID].[cg2_PersonAffiliationGetByPersonMessageID] TO App_Profiles10

GO

if exists (select * from dbo.sysobjects where id = object_id(N'[ORCID].[cg2_PersonAffiliationGetByProfilesIDAndAffiliationTypeID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
    drop procedure [ORCID].[cg2_PersonAffiliationGetByProfilesIDAndAffiliationTypeID]

GO

CREATE PROCEDURE [ORCID].[cg2_PersonAffiliationGetByProfilesIDAndAffiliationTypeID]
 
    @ProfilesID  INT 
    , @AffiliationTypeID  INT 

AS
 
    SELECT TOP 100 PERCENT
        [ORCID].[PersonAffiliation].[PersonAffiliationID]
        , [ORCID].[PersonAffiliation].[ProfilesID]
        , [ORCID].[PersonAffiliation].[AffiliationTypeID]
        , [ORCID].[PersonAffiliation].[PersonID]
        , [ORCID].[PersonAffiliation].[PersonMessageID]
        , [ORCID].[PersonAffiliation].[DecisionID]
        , [ORCID].[PersonAffiliation].[DepartmentName]
        , [ORCID].[PersonAffiliation].[RoleTitle]
        , [ORCID].[PersonAffiliation].[StartDate]
        , [ORCID].[PersonAffiliation].[EndDate]
        , [ORCID].[PersonAffiliation].[OrganizationName]
        , [ORCID].[PersonAffiliation].[OrganizationCity]
        , [ORCID].[PersonAffiliation].[OrganizationRegion]
        , [ORCID].[PersonAffiliation].[OrganizationCountry]
        , [ORCID].[PersonAffiliation].[DisambiguationID]
        , [ORCID].[PersonAffiliation].[DisambiguationSource]
    FROM
        [ORCID].[PersonAffiliation]
    WHERE
        [ORCID].[PersonAffiliation].[ProfilesID] = @ProfilesID
        AND [ORCID].[PersonAffiliation].[AffiliationTypeID] = @AffiliationTypeID


GO

GRANT EXECUTE ON [ORCID].[cg2_PersonAffiliationGetByProfilesIDAndAffiliationTypeID] TO App_Profiles10

GO

if exists (select * from dbo.sysobjects where id = object_id(N'[ORCID].[cg2_PersonAffiliationGetByProfilesIDAndAffiliationTypeID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
    drop procedure [ORCID].[cg2_PersonAffiliationGetByProfilesIDAndAffiliationTypeID]

GO

CREATE PROCEDURE [ORCID].[cg2_PersonAffiliationGetByProfilesIDAndAffiliationTypeID]
 
    @ProfilesID  INT 
    , @AffiliationTypeID  INT 

AS
 
    SELECT TOP 100 PERCENT
        [ORCID].[PersonAffiliation].[PersonAffiliationID]
        , [ORCID].[PersonAffiliation].[ProfilesID]
        , [ORCID].[PersonAffiliation].[AffiliationTypeID]
        , [ORCID].[PersonAffiliation].[PersonID]
        , [ORCID].[PersonAffiliation].[PersonMessageID]
        , [ORCID].[PersonAffiliation].[DecisionID]
        , [ORCID].[PersonAffiliation].[DepartmentName]
        , [ORCID].[PersonAffiliation].[RoleTitle]
        , [ORCID].[PersonAffiliation].[StartDate]
        , [ORCID].[PersonAffiliation].[EndDate]
        , [ORCID].[PersonAffiliation].[OrganizationName]
        , [ORCID].[PersonAffiliation].[OrganizationCity]
        , [ORCID].[PersonAffiliation].[OrganizationRegion]
        , [ORCID].[PersonAffiliation].[OrganizationCountry]
        , [ORCID].[PersonAffiliation].[DisambiguationID]
        , [ORCID].[PersonAffiliation].[DisambiguationSource]
    FROM
        [ORCID].[PersonAffiliation]
    WHERE
        [ORCID].[PersonAffiliation].[ProfilesID] = @ProfilesID
        AND [ORCID].[PersonAffiliation].[AffiliationTypeID] = @AffiliationTypeID


GO

GRANT EXECUTE ON [ORCID].[cg2_PersonAffiliationGetByProfilesIDAndAffiliationTypeID] TO App_Profiles10

GO

if exists (select * from dbo.sysobjects where id = object_id(N'[ORCID].[cg2_PersonAffiliationGet]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
    drop procedure [ORCID].[cg2_PersonAffiliationGet]

GO

CREATE PROCEDURE [ORCID].[cg2_PersonAffiliationGet]
 
    @PersonAffiliationID  INT 

AS
 
    SELECT TOP 100 PERCENT
        [ORCID].[PersonAffiliation].[PersonAffiliationID]
        , [ORCID].[PersonAffiliation].[ProfilesID]
        , [ORCID].[PersonAffiliation].[AffiliationTypeID]
        , [ORCID].[PersonAffiliation].[PersonID]
        , [ORCID].[PersonAffiliation].[PersonMessageID]
        , [ORCID].[PersonAffiliation].[DecisionID]
        , [ORCID].[PersonAffiliation].[DepartmentName]
        , [ORCID].[PersonAffiliation].[RoleTitle]
        , [ORCID].[PersonAffiliation].[StartDate]
        , [ORCID].[PersonAffiliation].[EndDate]
        , [ORCID].[PersonAffiliation].[OrganizationName]
        , [ORCID].[PersonAffiliation].[OrganizationCity]
        , [ORCID].[PersonAffiliation].[OrganizationRegion]
        , [ORCID].[PersonAffiliation].[OrganizationCountry]
        , [ORCID].[PersonAffiliation].[DisambiguationID]
        , [ORCID].[PersonAffiliation].[DisambiguationSource]
    FROM
        [ORCID].[PersonAffiliation]
    WHERE
        [ORCID].[PersonAffiliation].[PersonAffiliationID] = @PersonAffiliationID


GO

GRANT EXECUTE ON [ORCID].[cg2_PersonAffiliationGet] TO App_Profiles10

GO

CREATE PROCEDURE [ORCID].[cg2_PersonAffiliationsGet]
 
AS
 
    SELECT TOP 100 PERCENT
        [ORCID].[PersonAffiliation].[PersonAffiliationID]
        , [ORCID].[PersonAffiliation].[ProfilesID]
        , [ORCID].[PersonAffiliation].[AffiliationTypeID]
        , [ORCID].[PersonAffiliation].[PersonID]
        , [ORCID].[PersonAffiliation].[PersonMessageID]
        , [ORCID].[PersonAffiliation].[DecisionID]
        , [ORCID].[PersonAffiliation].[DepartmentName]
        , [ORCID].[PersonAffiliation].[RoleTitle]
        , [ORCID].[PersonAffiliation].[StartDate]
        , [ORCID].[PersonAffiliation].[EndDate]
        , [ORCID].[PersonAffiliation].[OrganizationName]
        , [ORCID].[PersonAffiliation].[OrganizationCity]
        , [ORCID].[PersonAffiliation].[OrganizationRegion]
        , [ORCID].[PersonAffiliation].[OrganizationCountry]
        , [ORCID].[PersonAffiliation].[DisambiguationID]
        , [ORCID].[PersonAffiliation].[DisambiguationSource]
    FROM
        [ORCID].[PersonAffiliation]

GO

GRANT EXECUTE ON [ORCID].[cg2_PersonAffiliationsGet] TO App_Profiles10

GO

 
CREATE PROCEDURE [ORCID].[cg2_PersonAffiliationAdd]

    @PersonAffiliationID  INT =NULL OUTPUT 
    , @ProfilesID  INT 
    , @AffiliationTypeID  INT 
    , @PersonID  INT 
    , @PersonMessageID  INT =NULL
    , @DecisionID  INT 
    , @DepartmentName  VARCHAR(4000) =NULL
    , @RoleTitle  VARCHAR(200) =NULL
    , @StartDate  SMALLDATETIME =NULL
    , @EndDate  SMALLDATETIME =NULL
    , @OrganizationName  VARCHAR(4000) 
    , @OrganizationCity  VARCHAR(4000) =NULL
    , @OrganizationRegion  VARCHAR(2) =NULL
    , @OrganizationCountry  VARCHAR(2) =NULL
    , @DisambiguationID  VARCHAR(500) =NULL
    , @DisambiguationSource  VARCHAR(500) =NULL

AS


    DECLARE @intReturnVal INT 
    SET @intReturnVal = 0
    DECLARE @strReturn  Varchar(200) 
    SET @intReturnVal = 0
    DECLARE @intRecordLevelAuditTrailID INT 
    DECLARE @intFieldLevelAuditTrailID INT 
    DECLARE @intTableID INT 
    SET @intTableID = 4467
 
  
        INSERT INTO [ORCID].[PersonAffiliation]
        (
            [ProfilesID]
            , [AffiliationTypeID]
            , [PersonID]
            , [PersonMessageID]
            , [DecisionID]
            , [DepartmentName]
            , [RoleTitle]
            , [StartDate]
            , [EndDate]
            , [OrganizationName]
            , [OrganizationCity]
            , [OrganizationRegion]
            , [OrganizationCountry]
            , [DisambiguationID]
            , [DisambiguationSource]
        )
        (
            SELECT
            @ProfilesID
            , @AffiliationTypeID
            , @PersonID
            , @PersonMessageID
            , @DecisionID
            , @DepartmentName
            , @RoleTitle
            , @StartDate
            , @EndDate
            , @OrganizationName
            , @OrganizationCity
            , @OrganizationRegion
            , @OrganizationCountry
            , @DisambiguationID
            , @DisambiguationSource
        )
   
        SET @intReturnVal = @@error
        SET @PersonAffiliationID = @@IDENTITY
        IF @intReturnVal <> 0
        BEGIN
            RAISERROR (N'An error occurred while adding the PersonAffiliation record.', 11, 11); 
            RETURN @intReturnVal 
        END

GO

GRANT EXECUTE ON [ORCID].[cg2_PersonAffiliationAdd] TO App_Profiles10

GO

 
CREATE PROCEDURE [ORCID].[cg2_PersonAffiliationEdit]

    @PersonAffiliationID  INT =NULL OUTPUT 
    , @ProfilesID  INT 
    , @AffiliationTypeID  INT 
    , @PersonID  INT 
    , @PersonMessageID  INT =NULL
    , @DecisionID  INT 
    , @DepartmentName  VARCHAR(4000) =NULL
    , @RoleTitle  VARCHAR(200) =NULL
    , @StartDate  SMALLDATETIME =NULL
    , @EndDate  SMALLDATETIME =NULL
    , @OrganizationName  VARCHAR(4000) 
    , @OrganizationCity  VARCHAR(4000) =NULL
    , @OrganizationRegion  VARCHAR(2) =NULL
    , @OrganizationCountry  VARCHAR(2) =NULL
    , @DisambiguationID  VARCHAR(500) =NULL
    , @DisambiguationSource  VARCHAR(500) =NULL

AS


    DECLARE @intReturnVal INT 
    SET @intReturnVal = 0
    DECLARE @strReturn  Varchar(200) 
    SET @intReturnVal = 0
    DECLARE @intRecordLevelAuditTrailID INT 
    DECLARE @intFieldLevelAuditTrailID INT 
    DECLARE @intTableID INT 
    SET @intTableID = 4467
 
  
        UPDATE [ORCID].[PersonAffiliation]
        SET
            [ProfilesID] = @ProfilesID
            , [AffiliationTypeID] = @AffiliationTypeID
            , [PersonID] = @PersonID
            , [PersonMessageID] = @PersonMessageID
            , [DecisionID] = @DecisionID
            , [DepartmentName] = @DepartmentName
            , [RoleTitle] = @RoleTitle
            , [StartDate] = @StartDate
            , [EndDate] = @EndDate
            , [OrganizationName] = @OrganizationName
            , [OrganizationCity] = @OrganizationCity
            , [OrganizationRegion] = @OrganizationRegion
            , [OrganizationCountry] = @OrganizationCountry
            , [DisambiguationID] = @DisambiguationID
            , [DisambiguationSource] = @DisambiguationSource
        FROM
            [ORCID].[PersonAffiliation]
        WHERE
        [ORCID].[PersonAffiliation].[PersonAffiliationID] = @PersonAffiliationID

        
        SET @intReturnVal = @@error
        IF @intReturnVal <> 0
        BEGIN
            RAISERROR (N'An error occurred while editing the PersonAffiliation record.', 11, 11); 
            RETURN @intReturnVal 
        END

GO

GRANT EXECUTE ON [ORCID].[cg2_PersonAffiliationEdit] TO App_Profiles10

GO

CREATE PROCEDURE [ORCID].[cg2_PersonAffiliationDelete]
 
    @PersonAffiliationID  INT 

 
AS
 
    DECLARE @intReturnVal INT 
    SET @intReturnVal = 0
 
 
        DELETE FROM [ORCID].[PersonAffiliation] WHERE         [ORCID].[PersonAffiliation].[PersonAffiliationID] = @PersonAffiliationID

 
        SET @intReturnVal = @@error
        IF @intReturnVal <> 0
        BEGIN
            RAISERROR (N'An error occurred while deleting the PersonAffiliation record.', 11, 11); 
            RETURN @intReturnVal 
        END
    RETURN @intReturnVal

GO

GRANT EXECUTE ON [ORCID].[cg2_PersonAffiliationDelete] TO App_Profiles10

GO

if exists (select * from dbo.sysobjects where id = object_id(N'[ORCID].[cg2_PersonAlternateEmailGetByPersonID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
    drop procedure [ORCID].[cg2_PersonAlternateEmailGetByPersonID]

GO

CREATE PROCEDURE [ORCID].[cg2_PersonAlternateEmailGetByPersonID]
 
    @PersonID  INT 

AS
 
    SELECT TOP 100 PERCENT
        [ORCID].[PersonAlternateEmail].[PersonAlternateEmailID]
        , [ORCID].[PersonAlternateEmail].[PersonID]
        , [ORCID].[PersonAlternateEmail].[EmailAddress]
        , [ORCID].[PersonAlternateEmail].[PersonMessageID]
    FROM
        [ORCID].[PersonAlternateEmail]
    WHERE
        [ORCID].[PersonAlternateEmail].[PersonID] = @PersonID


GO

GRANT EXECUTE ON [ORCID].[cg2_PersonAlternateEmailGetByPersonID] TO App_Profiles10

GO

if exists (select * from dbo.sysobjects where id = object_id(N'[ORCID].[cg2_PersonAlternateEmailGetByPersonMessageID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
    drop procedure [ORCID].[cg2_PersonAlternateEmailGetByPersonMessageID]

GO

CREATE PROCEDURE [ORCID].[cg2_PersonAlternateEmailGetByPersonMessageID]
 
    @PersonMessageID  INT 

AS
 
    SELECT TOP 100 PERCENT
        [ORCID].[PersonAlternateEmail].[PersonAlternateEmailID]
        , [ORCID].[PersonAlternateEmail].[PersonID]
        , [ORCID].[PersonAlternateEmail].[EmailAddress]
        , [ORCID].[PersonAlternateEmail].[PersonMessageID]
    FROM
        [ORCID].[PersonAlternateEmail]
    WHERE
        [ORCID].[PersonAlternateEmail].[PersonMessageID] = @PersonMessageID


GO

GRANT EXECUTE ON [ORCID].[cg2_PersonAlternateEmailGetByPersonMessageID] TO App_Profiles10

GO

if exists (select * from dbo.sysobjects where id = object_id(N'[ORCID].[cg2_PersonAlternateEmailGet]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
    drop procedure [ORCID].[cg2_PersonAlternateEmailGet]

GO

CREATE PROCEDURE [ORCID].[cg2_PersonAlternateEmailGet]
 
    @PersonAlternateEmailID  INT 

AS
 
    SELECT TOP 100 PERCENT
        [ORCID].[PersonAlternateEmail].[PersonAlternateEmailID]
        , [ORCID].[PersonAlternateEmail].[PersonID]
        , [ORCID].[PersonAlternateEmail].[EmailAddress]
        , [ORCID].[PersonAlternateEmail].[PersonMessageID]
    FROM
        [ORCID].[PersonAlternateEmail]
    WHERE
        [ORCID].[PersonAlternateEmail].[PersonAlternateEmailID] = @PersonAlternateEmailID


GO

GRANT EXECUTE ON [ORCID].[cg2_PersonAlternateEmailGet] TO App_Profiles10

GO

CREATE PROCEDURE [ORCID].[cg2_PersonAlternateEmailsGet]
 
AS
 
    SELECT TOP 100 PERCENT
        [ORCID].[PersonAlternateEmail].[PersonAlternateEmailID]
        , [ORCID].[PersonAlternateEmail].[PersonID]
        , [ORCID].[PersonAlternateEmail].[EmailAddress]
        , [ORCID].[PersonAlternateEmail].[PersonMessageID]
    FROM
        [ORCID].[PersonAlternateEmail]

GO

GRANT EXECUTE ON [ORCID].[cg2_PersonAlternateEmailsGet] TO App_Profiles10

GO

 
CREATE PROCEDURE [ORCID].[cg2_PersonAlternateEmailAdd]

    @PersonAlternateEmailID  INT =NULL OUTPUT 
    , @PersonID  INT 
    , @EmailAddress  VARCHAR(200) 
    , @PersonMessageID  INT =NULL

AS


    DECLARE @intReturnVal INT 
    SET @intReturnVal = 0
    DECLARE @strReturn  Varchar(200) 
    SET @intReturnVal = 0
    DECLARE @intRecordLevelAuditTrailID INT 
    DECLARE @intFieldLevelAuditTrailID INT 
    DECLARE @intTableID INT 
    SET @intTableID = 3579
 
  
        INSERT INTO [ORCID].[PersonAlternateEmail]
        (
            [PersonID]
            , [EmailAddress]
            , [PersonMessageID]
        )
        (
            SELECT
            @PersonID
            , @EmailAddress
            , @PersonMessageID
        )
   
        SET @intReturnVal = @@error
        SET @PersonAlternateEmailID = @@IDENTITY
        IF @intReturnVal <> 0
        BEGIN
            RAISERROR (N'An error occurred while adding the PersonAlternateEmail record.', 11, 11); 
            RETURN @intReturnVal 
        END

GO

GRANT EXECUTE ON [ORCID].[cg2_PersonAlternateEmailAdd] TO App_Profiles10

GO

 
CREATE PROCEDURE [ORCID].[cg2_PersonAlternateEmailEdit]

    @PersonAlternateEmailID  INT =NULL OUTPUT 
    , @PersonID  INT 
    , @EmailAddress  VARCHAR(200) 
    , @PersonMessageID  INT =NULL

AS


    DECLARE @intReturnVal INT 
    SET @intReturnVal = 0
    DECLARE @strReturn  Varchar(200) 
    SET @intReturnVal = 0
    DECLARE @intRecordLevelAuditTrailID INT 
    DECLARE @intFieldLevelAuditTrailID INT 
    DECLARE @intTableID INT 
    SET @intTableID = 3579
 
  
        UPDATE [ORCID].[PersonAlternateEmail]
        SET
            [PersonID] = @PersonID
            , [EmailAddress] = @EmailAddress
            , [PersonMessageID] = @PersonMessageID
        FROM
            [ORCID].[PersonAlternateEmail]
        WHERE
        [ORCID].[PersonAlternateEmail].[PersonAlternateEmailID] = @PersonAlternateEmailID

        
        SET @intReturnVal = @@error
        IF @intReturnVal <> 0
        BEGIN
            RAISERROR (N'An error occurred while editing the PersonAlternateEmail record.', 11, 11); 
            RETURN @intReturnVal 
        END

GO

GRANT EXECUTE ON [ORCID].[cg2_PersonAlternateEmailEdit] TO App_Profiles10

GO

CREATE PROCEDURE [ORCID].[cg2_PersonAlternateEmailDelete]
 
    @PersonAlternateEmailID  INT 

 
AS
 
    DECLARE @intReturnVal INT 
    SET @intReturnVal = 0
 
 
        DELETE FROM [ORCID].[PersonAlternateEmail] WHERE         [ORCID].[PersonAlternateEmail].[PersonAlternateEmailID] = @PersonAlternateEmailID

 
        SET @intReturnVal = @@error
        IF @intReturnVal <> 0
        BEGIN
            RAISERROR (N'An error occurred while deleting the PersonAlternateEmail record.', 11, 11); 
            RETURN @intReturnVal 
        END
    RETURN @intReturnVal

GO

GRANT EXECUTE ON [ORCID].[cg2_PersonAlternateEmailDelete] TO App_Profiles10

GO

if exists (select * from dbo.sysobjects where id = object_id(N'[ORCID].[cg2_PersonMessageGetByPersonID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
    drop procedure [ORCID].[cg2_PersonMessageGetByPersonID]

GO

CREATE PROCEDURE [ORCID].[cg2_PersonMessageGetByPersonID]
 
    @PersonID  INT 

AS
 
    SELECT TOP 100 PERCENT
        [ORCID].[PersonMessage].[PersonMessageID]
        , [ORCID].[PersonMessage].[PersonID]
        , [ORCID].[PersonMessage].[XML_Sent]
        , [ORCID].[PersonMessage].[XML_Response]
        , [ORCID].[PersonMessage].[ErrorMessage]
        , [ORCID].[PersonMessage].[HttpResponseCode]
        , [ORCID].[PersonMessage].[MessagePostSuccess]
        , [ORCID].[PersonMessage].[RecordStatusID]
        , [ORCID].[PersonMessage].[PermissionID]
        , [ORCID].[PersonMessage].[RequestURL]
        , [ORCID].[PersonMessage].[HeaderPost]
        , [ORCID].[PersonMessage].[UserMessage]
        , [ORCID].[PersonMessage].[PostDate]
    FROM
        [ORCID].[PersonMessage]
    WHERE
        [ORCID].[PersonMessage].[PersonID] = @PersonID


GO

GRANT EXECUTE ON [ORCID].[cg2_PersonMessageGetByPersonID] TO App_Profiles10

GO

if exists (select * from dbo.sysobjects where id = object_id(N'[ORCID].[cg2_PersonMessageGetByPersonIDAndRecordStatusIDAndPermissionID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
    drop procedure [ORCID].[cg2_PersonMessageGetByPersonIDAndRecordStatusIDAndPermissionID]

GO

CREATE PROCEDURE [ORCID].[cg2_PersonMessageGetByPersonIDAndRecordStatusIDAndPermissionID]
 
    @PersonID  INT 
    , @RecordStatusID  INT 
    , @PermissionID  INT 

AS
 
    SELECT TOP 100 PERCENT
        [ORCID].[PersonMessage].[PersonMessageID]
        , [ORCID].[PersonMessage].[PersonID]
        , [ORCID].[PersonMessage].[XML_Sent]
        , [ORCID].[PersonMessage].[XML_Response]
        , [ORCID].[PersonMessage].[ErrorMessage]
        , [ORCID].[PersonMessage].[HttpResponseCode]
        , [ORCID].[PersonMessage].[MessagePostSuccess]
        , [ORCID].[PersonMessage].[RecordStatusID]
        , [ORCID].[PersonMessage].[PermissionID]
        , [ORCID].[PersonMessage].[RequestURL]
        , [ORCID].[PersonMessage].[HeaderPost]
        , [ORCID].[PersonMessage].[UserMessage]
        , [ORCID].[PersonMessage].[PostDate]
    FROM
        [ORCID].[PersonMessage]
    WHERE
        [ORCID].[PersonMessage].[PersonID] = @PersonID
        AND [ORCID].[PersonMessage].[RecordStatusID] = @RecordStatusID
        AND [ORCID].[PersonMessage].[PermissionID] = @PermissionID


GO

GRANT EXECUTE ON [ORCID].[cg2_PersonMessageGetByPersonIDAndRecordStatusIDAndPermissionID] TO App_Profiles10

GO

if exists (select * from dbo.sysobjects where id = object_id(N'[ORCID].[cg2_PersonMessageGetByPersonIDAndRecordStatusIDAndPermissionID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
    drop procedure [ORCID].[cg2_PersonMessageGetByPersonIDAndRecordStatusIDAndPermissionID]

GO

CREATE PROCEDURE [ORCID].[cg2_PersonMessageGetByPersonIDAndRecordStatusIDAndPermissionID]
 
    @PersonID  INT 
    , @RecordStatusID  INT 
    , @PermissionID  INT 

AS
 
    SELECT TOP 100 PERCENT
        [ORCID].[PersonMessage].[PersonMessageID]
        , [ORCID].[PersonMessage].[PersonID]
        , [ORCID].[PersonMessage].[XML_Sent]
        , [ORCID].[PersonMessage].[XML_Response]
        , [ORCID].[PersonMessage].[ErrorMessage]
        , [ORCID].[PersonMessage].[HttpResponseCode]
        , [ORCID].[PersonMessage].[MessagePostSuccess]
        , [ORCID].[PersonMessage].[RecordStatusID]
        , [ORCID].[PersonMessage].[PermissionID]
        , [ORCID].[PersonMessage].[RequestURL]
        , [ORCID].[PersonMessage].[HeaderPost]
        , [ORCID].[PersonMessage].[UserMessage]
        , [ORCID].[PersonMessage].[PostDate]
    FROM
        [ORCID].[PersonMessage]
    WHERE
        [ORCID].[PersonMessage].[PersonID] = @PersonID
        AND [ORCID].[PersonMessage].[RecordStatusID] = @RecordStatusID
        AND [ORCID].[PersonMessage].[PermissionID] = @PermissionID


GO

GRANT EXECUTE ON [ORCID].[cg2_PersonMessageGetByPersonIDAndRecordStatusIDAndPermissionID] TO App_Profiles10

GO

if exists (select * from dbo.sysobjects where id = object_id(N'[ORCID].[cg2_PersonMessageGetByPersonIDAndRecordStatusIDAndPermissionID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
    drop procedure [ORCID].[cg2_PersonMessageGetByPersonIDAndRecordStatusIDAndPermissionID]

GO

CREATE PROCEDURE [ORCID].[cg2_PersonMessageGetByPersonIDAndRecordStatusIDAndPermissionID]
 
    @PersonID  INT 
    , @RecordStatusID  INT 
    , @PermissionID  INT 

AS
 
    SELECT TOP 100 PERCENT
        [ORCID].[PersonMessage].[PersonMessageID]
        , [ORCID].[PersonMessage].[PersonID]
        , [ORCID].[PersonMessage].[XML_Sent]
        , [ORCID].[PersonMessage].[XML_Response]
        , [ORCID].[PersonMessage].[ErrorMessage]
        , [ORCID].[PersonMessage].[HttpResponseCode]
        , [ORCID].[PersonMessage].[MessagePostSuccess]
        , [ORCID].[PersonMessage].[RecordStatusID]
        , [ORCID].[PersonMessage].[PermissionID]
        , [ORCID].[PersonMessage].[RequestURL]
        , [ORCID].[PersonMessage].[HeaderPost]
        , [ORCID].[PersonMessage].[UserMessage]
        , [ORCID].[PersonMessage].[PostDate]
    FROM
        [ORCID].[PersonMessage]
    WHERE
        [ORCID].[PersonMessage].[PersonID] = @PersonID
        AND [ORCID].[PersonMessage].[RecordStatusID] = @RecordStatusID
        AND [ORCID].[PersonMessage].[PermissionID] = @PermissionID


GO

GRANT EXECUTE ON [ORCID].[cg2_PersonMessageGetByPersonIDAndRecordStatusIDAndPermissionID] TO App_Profiles10

GO

if exists (select * from dbo.sysobjects where id = object_id(N'[ORCID].[cg2_PersonMessageGetByPersonIDAndRecordStatusID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
    drop procedure [ORCID].[cg2_PersonMessageGetByPersonIDAndRecordStatusID]

GO

CREATE PROCEDURE [ORCID].[cg2_PersonMessageGetByPersonIDAndRecordStatusID]
 
    @PersonID  INT 
    , @RecordStatusID  INT 

AS
 
    SELECT TOP 100 PERCENT
        [ORCID].[PersonMessage].[PersonMessageID]
        , [ORCID].[PersonMessage].[PersonID]
        , [ORCID].[PersonMessage].[XML_Sent]
        , [ORCID].[PersonMessage].[XML_Response]
        , [ORCID].[PersonMessage].[ErrorMessage]
        , [ORCID].[PersonMessage].[HttpResponseCode]
        , [ORCID].[PersonMessage].[MessagePostSuccess]
        , [ORCID].[PersonMessage].[RecordStatusID]
        , [ORCID].[PersonMessage].[PermissionID]
        , [ORCID].[PersonMessage].[RequestURL]
        , [ORCID].[PersonMessage].[HeaderPost]
        , [ORCID].[PersonMessage].[UserMessage]
        , [ORCID].[PersonMessage].[PostDate]
    FROM
        [ORCID].[PersonMessage]
    WHERE
        [ORCID].[PersonMessage].[PersonID] = @PersonID
        AND [ORCID].[PersonMessage].[RecordStatusID] = @RecordStatusID


GO

GRANT EXECUTE ON [ORCID].[cg2_PersonMessageGetByPersonIDAndRecordStatusID] TO App_Profiles10

GO

if exists (select * from dbo.sysobjects where id = object_id(N'[ORCID].[cg2_PersonMessageGetByPersonIDAndRecordStatusID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
    drop procedure [ORCID].[cg2_PersonMessageGetByPersonIDAndRecordStatusID]

GO

CREATE PROCEDURE [ORCID].[cg2_PersonMessageGetByPersonIDAndRecordStatusID]
 
    @PersonID  INT 
    , @RecordStatusID  INT 

AS
 
    SELECT TOP 100 PERCENT
        [ORCID].[PersonMessage].[PersonMessageID]
        , [ORCID].[PersonMessage].[PersonID]
        , [ORCID].[PersonMessage].[XML_Sent]
        , [ORCID].[PersonMessage].[XML_Response]
        , [ORCID].[PersonMessage].[ErrorMessage]
        , [ORCID].[PersonMessage].[HttpResponseCode]
        , [ORCID].[PersonMessage].[MessagePostSuccess]
        , [ORCID].[PersonMessage].[RecordStatusID]
        , [ORCID].[PersonMessage].[PermissionID]
        , [ORCID].[PersonMessage].[RequestURL]
        , [ORCID].[PersonMessage].[HeaderPost]
        , [ORCID].[PersonMessage].[UserMessage]
        , [ORCID].[PersonMessage].[PostDate]
    FROM
        [ORCID].[PersonMessage]
    WHERE
        [ORCID].[PersonMessage].[PersonID] = @PersonID
        AND [ORCID].[PersonMessage].[RecordStatusID] = @RecordStatusID


GO

GRANT EXECUTE ON [ORCID].[cg2_PersonMessageGetByPersonIDAndRecordStatusID] TO App_Profiles10

GO

if exists (select * from dbo.sysobjects where id = object_id(N'[ORCID].[cg2_PersonMessageGet]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
    drop procedure [ORCID].[cg2_PersonMessageGet]

GO

CREATE PROCEDURE [ORCID].[cg2_PersonMessageGet]
 
    @PersonMessageID  INT 

AS
 
    SELECT TOP 100 PERCENT
        [ORCID].[PersonMessage].[PersonMessageID]
        , [ORCID].[PersonMessage].[PersonID]
        , [ORCID].[PersonMessage].[XML_Sent]
        , [ORCID].[PersonMessage].[XML_Response]
        , [ORCID].[PersonMessage].[ErrorMessage]
        , [ORCID].[PersonMessage].[HttpResponseCode]
        , [ORCID].[PersonMessage].[MessagePostSuccess]
        , [ORCID].[PersonMessage].[RecordStatusID]
        , [ORCID].[PersonMessage].[PermissionID]
        , [ORCID].[PersonMessage].[RequestURL]
        , [ORCID].[PersonMessage].[HeaderPost]
        , [ORCID].[PersonMessage].[UserMessage]
        , [ORCID].[PersonMessage].[PostDate]
    FROM
        [ORCID].[PersonMessage]
    WHERE
        [ORCID].[PersonMessage].[PersonMessageID] = @PersonMessageID


GO

GRANT EXECUTE ON [ORCID].[cg2_PersonMessageGet] TO App_Profiles10

GO

CREATE PROCEDURE [ORCID].[cg2_PersonMessagesGet]
 
AS
 
    SELECT TOP 100 PERCENT
        [ORCID].[PersonMessage].[PersonMessageID]
        , [ORCID].[PersonMessage].[PersonID]
        , [ORCID].[PersonMessage].[XML_Sent]
        , [ORCID].[PersonMessage].[XML_Response]
        , [ORCID].[PersonMessage].[ErrorMessage]
        , [ORCID].[PersonMessage].[HttpResponseCode]
        , [ORCID].[PersonMessage].[MessagePostSuccess]
        , [ORCID].[PersonMessage].[RecordStatusID]
        , [ORCID].[PersonMessage].[PermissionID]
        , [ORCID].[PersonMessage].[RequestURL]
        , [ORCID].[PersonMessage].[HeaderPost]
        , [ORCID].[PersonMessage].[UserMessage]
        , [ORCID].[PersonMessage].[PostDate]
    FROM
        [ORCID].[PersonMessage]

GO

GRANT EXECUTE ON [ORCID].[cg2_PersonMessagesGet] TO App_Profiles10

GO

 
CREATE PROCEDURE [ORCID].[cg2_PersonMessageAdd]

    @PersonMessageID  INT =NULL OUTPUT 
    , @PersonID  INT 
    , @XML_Sent  VARCHAR(MAX) =NULL
    , @XML_Response  VARCHAR(MAX) =NULL
    , @ErrorMessage  VARCHAR(1000) =NULL
    , @HttpResponseCode  VARCHAR(50) =NULL
    , @MessagePostSuccess  BIT =NULL
    , @RecordStatusID  INT =NULL
    , @PermissionID  INT =NULL
    , @RequestURL  VARCHAR(1000) =NULL
    , @HeaderPost  VARCHAR(1000) =NULL
    , @UserMessage  VARCHAR(2000) =NULL
    , @PostDate  SMALLDATETIME =NULL

AS


    DECLARE @intReturnVal INT 
    SET @intReturnVal = 0
    DECLARE @strReturn  Varchar(200) 
    SET @intReturnVal = 0
    DECLARE @intRecordLevelAuditTrailID INT 
    DECLARE @intFieldLevelAuditTrailID INT 
    DECLARE @intTableID INT 
    SET @intTableID = 3575
 
  
        INSERT INTO [ORCID].[PersonMessage]
        (
            [PersonID]
            , [XML_Sent]
            , [XML_Response]
            , [ErrorMessage]
            , [HttpResponseCode]
            , [MessagePostSuccess]
            , [RecordStatusID]
            , [PermissionID]
            , [RequestURL]
            , [HeaderPost]
            , [UserMessage]
            , [PostDate]
        )
        (
            SELECT
            @PersonID
            , @XML_Sent
            , @XML_Response
            , @ErrorMessage
            , @HttpResponseCode
            , @MessagePostSuccess
            , @RecordStatusID
            , @PermissionID
            , @RequestURL
            , @HeaderPost
            , @UserMessage
            , @PostDate
        )
   
        SET @intReturnVal = @@error
        SET @PersonMessageID = @@IDENTITY
        IF @intReturnVal <> 0
        BEGIN
            RAISERROR (N'An error occurred while adding the PersonMessage record.', 11, 11); 
            RETURN @intReturnVal 
        END

GO

GRANT EXECUTE ON [ORCID].[cg2_PersonMessageAdd] TO App_Profiles10

GO

 
CREATE PROCEDURE [ORCID].[cg2_PersonMessageEdit]

    @PersonMessageID  INT =NULL OUTPUT 
    , @PersonID  INT 
    , @XML_Sent  VARCHAR(MAX) =NULL
    , @XML_Response  VARCHAR(MAX) =NULL
    , @ErrorMessage  VARCHAR(1000) =NULL
    , @HttpResponseCode  VARCHAR(50) =NULL
    , @MessagePostSuccess  BIT =NULL
    , @RecordStatusID  INT =NULL
    , @PermissionID  INT =NULL
    , @RequestURL  VARCHAR(1000) =NULL
    , @HeaderPost  VARCHAR(1000) =NULL
    , @UserMessage  VARCHAR(2000) =NULL
    , @PostDate  SMALLDATETIME =NULL

AS


    DECLARE @intReturnVal INT 
    SET @intReturnVal = 0
    DECLARE @strReturn  Varchar(200) 
    SET @intReturnVal = 0
    DECLARE @intRecordLevelAuditTrailID INT 
    DECLARE @intFieldLevelAuditTrailID INT 
    DECLARE @intTableID INT 
    SET @intTableID = 3575
 
  
        UPDATE [ORCID].[PersonMessage]
        SET
            [PersonID] = @PersonID
            , [XML_Sent] = @XML_Sent
            , [XML_Response] = @XML_Response
            , [ErrorMessage] = @ErrorMessage
            , [HttpResponseCode] = @HttpResponseCode
            , [MessagePostSuccess] = @MessagePostSuccess
            , [RecordStatusID] = @RecordStatusID
            , [PermissionID] = @PermissionID
            , [RequestURL] = @RequestURL
            , [HeaderPost] = @HeaderPost
            , [UserMessage] = @UserMessage
            , [PostDate] = @PostDate
        FROM
            [ORCID].[PersonMessage]
        WHERE
        [ORCID].[PersonMessage].[PersonMessageID] = @PersonMessageID

        
        SET @intReturnVal = @@error
        IF @intReturnVal <> 0
        BEGIN
            RAISERROR (N'An error occurred while editing the PersonMessage record.', 11, 11); 
            RETURN @intReturnVal 
        END

GO

GRANT EXECUTE ON [ORCID].[cg2_PersonMessageEdit] TO App_Profiles10

GO

CREATE PROCEDURE [ORCID].[cg2_PersonMessageDelete]
 
    @PersonMessageID  INT 

 
AS
 
    DECLARE @intReturnVal INT 
    SET @intReturnVal = 0
 
 
        DELETE FROM [ORCID].[PersonMessage] WHERE         [ORCID].[PersonMessage].[PersonMessageID] = @PersonMessageID

 
        SET @intReturnVal = @@error
        IF @intReturnVal <> 0
        BEGIN
            RAISERROR (N'An error occurred while deleting the PersonMessage record.', 11, 11); 
            RETURN @intReturnVal 
        END
    RETURN @intReturnVal

GO

GRANT EXECUTE ON [ORCID].[cg2_PersonMessageDelete] TO App_Profiles10

GO

if exists (select * from dbo.sysobjects where id = object_id(N'[ORCID].[cg2_PersonOthernameGet]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
    drop procedure [ORCID].[cg2_PersonOthernameGet]

GO

CREATE PROCEDURE [ORCID].[cg2_PersonOthernameGet]
 
    @PersonOthernameID  INT 

AS
 
    SELECT TOP 100 PERCENT
        [ORCID].[PersonOthername].[PersonOthernameID]
        , [ORCID].[PersonOthername].[PersonID]
        , [ORCID].[PersonOthername].[OtherName]
        , [ORCID].[PersonOthername].[PersonMessageID]
    FROM
        [ORCID].[PersonOthername]
    WHERE
        [ORCID].[PersonOthername].[PersonOthernameID] = @PersonOthernameID


GO

GRANT EXECUTE ON [ORCID].[cg2_PersonOthernameGet] TO App_Profiles10

GO

CREATE PROCEDURE [ORCID].[cg2_PersonOthernamesGet]
 
AS
 
    SELECT TOP 100 PERCENT
        [ORCID].[PersonOthername].[PersonOthernameID]
        , [ORCID].[PersonOthername].[PersonID]
        , [ORCID].[PersonOthername].[OtherName]
        , [ORCID].[PersonOthername].[PersonMessageID]
    FROM
        [ORCID].[PersonOthername]

GO

GRANT EXECUTE ON [ORCID].[cg2_PersonOthernamesGet] TO App_Profiles10

GO

 
CREATE PROCEDURE [ORCID].[cg2_PersonOthernameAdd]

    @PersonOthernameID  INT =NULL OUTPUT 
    , @PersonID  INT 
    , @OtherName  NVARCHAR(500) =NULL
    , @PersonMessageID  INT =NULL

AS


    DECLARE @intReturnVal INT 
    SET @intReturnVal = 0
    DECLARE @strReturn  Varchar(200) 
    SET @intReturnVal = 0
    DECLARE @intRecordLevelAuditTrailID INT 
    DECLARE @intFieldLevelAuditTrailID INT 
    DECLARE @intTableID INT 
    SET @intTableID = 3733
 
  
        INSERT INTO [ORCID].[PersonOthername]
        (
            [PersonID]
            , [OtherName]
            , [PersonMessageID]
        )
        (
            SELECT
            @PersonID
            , @OtherName
            , @PersonMessageID
        )
   
        SET @intReturnVal = @@error
        SET @PersonOthernameID = @@IDENTITY
        IF @intReturnVal <> 0
        BEGIN
            RAISERROR (N'An error occurred while adding the PersonOthername record.', 11, 11); 
            RETURN @intReturnVal 
        END

GO

GRANT EXECUTE ON [ORCID].[cg2_PersonOthernameAdd] TO App_Profiles10

GO

 
CREATE PROCEDURE [ORCID].[cg2_PersonOthernameEdit]

    @PersonOthernameID  INT =NULL OUTPUT 
    , @PersonID  INT 
    , @OtherName  NVARCHAR(500) =NULL
    , @PersonMessageID  INT =NULL

AS


    DECLARE @intReturnVal INT 
    SET @intReturnVal = 0
    DECLARE @strReturn  Varchar(200) 
    SET @intReturnVal = 0
    DECLARE @intRecordLevelAuditTrailID INT 
    DECLARE @intFieldLevelAuditTrailID INT 
    DECLARE @intTableID INT 
    SET @intTableID = 3733
 
  
        UPDATE [ORCID].[PersonOthername]
        SET
            [PersonID] = @PersonID
            , [OtherName] = @OtherName
            , [PersonMessageID] = @PersonMessageID
        FROM
            [ORCID].[PersonOthername]
        WHERE
        [ORCID].[PersonOthername].[PersonOthernameID] = @PersonOthernameID

        
        SET @intReturnVal = @@error
        IF @intReturnVal <> 0
        BEGIN
            RAISERROR (N'An error occurred while editing the PersonOthername record.', 11, 11); 
            RETURN @intReturnVal 
        END

GO

GRANT EXECUTE ON [ORCID].[cg2_PersonOthernameEdit] TO App_Profiles10

GO

CREATE PROCEDURE [ORCID].[cg2_PersonOthernameDelete]
 
    @PersonOthernameID  INT 

 
AS
 
    DECLARE @intReturnVal INT 
    SET @intReturnVal = 0
 
 
        DELETE FROM [ORCID].[PersonOthername] WHERE         [ORCID].[PersonOthername].[PersonOthernameID] = @PersonOthernameID

 
        SET @intReturnVal = @@error
        IF @intReturnVal <> 0
        BEGIN
            RAISERROR (N'An error occurred while deleting the PersonOthername record.', 11, 11); 
            RETURN @intReturnVal 
        END
    RETURN @intReturnVal

GO

GRANT EXECUTE ON [ORCID].[cg2_PersonOthernameDelete] TO App_Profiles10

GO

if exists (select * from dbo.sysobjects where id = object_id(N'[ORCID].[cg2_PersonTokenGetByPermissionID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
    drop procedure [ORCID].[cg2_PersonTokenGetByPermissionID]

GO

CREATE PROCEDURE [ORCID].[cg2_PersonTokenGetByPermissionID]
 
    @PermissionID  INT 

AS
 
    SELECT TOP 100 PERCENT
        [ORCID].[PersonToken].[PersonTokenID]
        , [ORCID].[PersonToken].[PersonID]
        , [ORCID].[PersonToken].[PermissionID]
        , [ORCID].[PersonToken].[AccessToken]
        , [ORCID].[PersonToken].[TokenExpiration]
        , [ORCID].[PersonToken].[RefreshToken]
    FROM
        [ORCID].[PersonToken]
    WHERE
        [ORCID].[PersonToken].[PermissionID] = @PermissionID


GO

GRANT EXECUTE ON [ORCID].[cg2_PersonTokenGetByPermissionID] TO App_Profiles10

GO

if exists (select * from dbo.sysobjects where id = object_id(N'[ORCID].[cg2_PersonTokenGetByPersonID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
    drop procedure [ORCID].[cg2_PersonTokenGetByPersonID]

GO

CREATE PROCEDURE [ORCID].[cg2_PersonTokenGetByPersonID]
 
    @PersonID  INT 

AS
 
    SELECT TOP 100 PERCENT
        [ORCID].[PersonToken].[PersonTokenID]
        , [ORCID].[PersonToken].[PersonID]
        , [ORCID].[PersonToken].[PermissionID]
        , [ORCID].[PersonToken].[AccessToken]
        , [ORCID].[PersonToken].[TokenExpiration]
        , [ORCID].[PersonToken].[RefreshToken]
    FROM
        [ORCID].[PersonToken]
    WHERE
        [ORCID].[PersonToken].[PersonID] = @PersonID


GO

GRANT EXECUTE ON [ORCID].[cg2_PersonTokenGetByPersonID] TO App_Profiles10

GO

if exists (select * from dbo.sysobjects where id = object_id(N'[ORCID].[cg2_PersonTokenGetByPersonIDAndPermissionID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
    drop procedure [ORCID].[cg2_PersonTokenGetByPersonIDAndPermissionID]

GO

CREATE PROCEDURE [ORCID].[cg2_PersonTokenGetByPersonIDAndPermissionID]
 
    @PersonID  INT 
    , @PermissionID  INT 

AS
 
    SELECT TOP 100 PERCENT
        [ORCID].[PersonToken].[PersonTokenID]
        , [ORCID].[PersonToken].[PersonID]
        , [ORCID].[PersonToken].[PermissionID]
        , [ORCID].[PersonToken].[AccessToken]
        , [ORCID].[PersonToken].[TokenExpiration]
        , [ORCID].[PersonToken].[RefreshToken]
    FROM
        [ORCID].[PersonToken]
    WHERE
        [ORCID].[PersonToken].[PersonID] = @PersonID
        AND [ORCID].[PersonToken].[PermissionID] = @PermissionID


GO

GRANT EXECUTE ON [ORCID].[cg2_PersonTokenGetByPersonIDAndPermissionID] TO App_Profiles10

GO

if exists (select * from dbo.sysobjects where id = object_id(N'[ORCID].[cg2_PersonTokenGetByPersonIDAndPermissionID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
    drop procedure [ORCID].[cg2_PersonTokenGetByPersonIDAndPermissionID]

GO

CREATE PROCEDURE [ORCID].[cg2_PersonTokenGetByPersonIDAndPermissionID]
 
    @PersonID  INT 
    , @PermissionID  INT 

AS
 
    SELECT TOP 100 PERCENT
        [ORCID].[PersonToken].[PersonTokenID]
        , [ORCID].[PersonToken].[PersonID]
        , [ORCID].[PersonToken].[PermissionID]
        , [ORCID].[PersonToken].[AccessToken]
        , [ORCID].[PersonToken].[TokenExpiration]
        , [ORCID].[PersonToken].[RefreshToken]
    FROM
        [ORCID].[PersonToken]
    WHERE
        [ORCID].[PersonToken].[PersonID] = @PersonID
        AND [ORCID].[PersonToken].[PermissionID] = @PermissionID


GO

GRANT EXECUTE ON [ORCID].[cg2_PersonTokenGetByPersonIDAndPermissionID] TO App_Profiles10

GO

if exists (select * from dbo.sysobjects where id = object_id(N'[ORCID].[cg2_PersonTokenGet]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
    drop procedure [ORCID].[cg2_PersonTokenGet]

GO

CREATE PROCEDURE [ORCID].[cg2_PersonTokenGet]
 
    @PersonTokenID  INT 

AS
 
    SELECT TOP 100 PERCENT
        [ORCID].[PersonToken].[PersonTokenID]
        , [ORCID].[PersonToken].[PersonID]
        , [ORCID].[PersonToken].[PermissionID]
        , [ORCID].[PersonToken].[AccessToken]
        , [ORCID].[PersonToken].[TokenExpiration]
        , [ORCID].[PersonToken].[RefreshToken]
    FROM
        [ORCID].[PersonToken]
    WHERE
        [ORCID].[PersonToken].[PersonTokenID] = @PersonTokenID


GO

GRANT EXECUTE ON [ORCID].[cg2_PersonTokenGet] TO App_Profiles10

GO

CREATE PROCEDURE [ORCID].[cg2_PersonTokensGet]
 
AS
 
    SELECT TOP 100 PERCENT
        [ORCID].[PersonToken].[PersonTokenID]
        , [ORCID].[PersonToken].[PersonID]
        , [ORCID].[PersonToken].[PermissionID]
        , [ORCID].[PersonToken].[AccessToken]
        , [ORCID].[PersonToken].[TokenExpiration]
        , [ORCID].[PersonToken].[RefreshToken]
    FROM
        [ORCID].[PersonToken]

GO

GRANT EXECUTE ON [ORCID].[cg2_PersonTokensGet] TO App_Profiles10

GO

 
CREATE PROCEDURE [ORCID].[cg2_PersonTokenAdd]

    @PersonTokenID  INT =NULL OUTPUT 
    , @PersonID  INT 
    , @PermissionID  INT 
    , @AccessToken  VARCHAR(50) 
    , @TokenExpiration  SMALLDATETIME 
    , @RefreshToken  VARCHAR(50) =NULL

AS


    DECLARE @intReturnVal INT 
    SET @intReturnVal = 0
    DECLARE @strReturn  Varchar(200) 
    SET @intReturnVal = 0
    DECLARE @intRecordLevelAuditTrailID INT 
    DECLARE @intFieldLevelAuditTrailID INT 
    DECLARE @intTableID INT 
    SET @intTableID = 3595
 
  
        INSERT INTO [ORCID].[PersonToken]
        (
            [PersonID]
            , [PermissionID]
            , [AccessToken]
            , [TokenExpiration]
            , [RefreshToken]
        )
        (
            SELECT
            @PersonID
            , @PermissionID
            , @AccessToken
            , @TokenExpiration
            , @RefreshToken
        )
   
        SET @intReturnVal = @@error
        SET @PersonTokenID = @@IDENTITY
        IF @intReturnVal <> 0
        BEGIN
            RAISERROR (N'An error occurred while adding the PersonToken record.', 11, 11); 
            RETURN @intReturnVal 
        END

GO

GRANT EXECUTE ON [ORCID].[cg2_PersonTokenAdd] TO App_Profiles10

GO

 
CREATE PROCEDURE [ORCID].[cg2_PersonTokenEdit]

    @PersonTokenID  INT =NULL OUTPUT 
    , @PersonID  INT 
    , @PermissionID  INT 
    , @AccessToken  VARCHAR(50) 
    , @TokenExpiration  SMALLDATETIME 
    , @RefreshToken  VARCHAR(50) =NULL

AS


    DECLARE @intReturnVal INT 
    SET @intReturnVal = 0
    DECLARE @strReturn  Varchar(200) 
    SET @intReturnVal = 0
    DECLARE @intRecordLevelAuditTrailID INT 
    DECLARE @intFieldLevelAuditTrailID INT 
    DECLARE @intTableID INT 
    SET @intTableID = 3595
 
  
        UPDATE [ORCID].[PersonToken]
        SET
            [PersonID] = @PersonID
            , [PermissionID] = @PermissionID
            , [AccessToken] = @AccessToken
            , [TokenExpiration] = @TokenExpiration
            , [RefreshToken] = @RefreshToken
        FROM
            [ORCID].[PersonToken]
        WHERE
        [ORCID].[PersonToken].[PersonTokenID] = @PersonTokenID

        
        SET @intReturnVal = @@error
        IF @intReturnVal <> 0
        BEGIN
            RAISERROR (N'An error occurred while editing the PersonToken record.', 11, 11); 
            RETURN @intReturnVal 
        END

GO

GRANT EXECUTE ON [ORCID].[cg2_PersonTokenEdit] TO App_Profiles10

GO

CREATE PROCEDURE [ORCID].[cg2_PersonTokenDelete]
 
    @PersonTokenID  INT 

 
AS
 
    DECLARE @intReturnVal INT 
    SET @intReturnVal = 0
 
 
        DELETE FROM [ORCID].[PersonToken] WHERE         [ORCID].[PersonToken].[PersonTokenID] = @PersonTokenID

 
        SET @intReturnVal = @@error
        IF @intReturnVal <> 0
        BEGIN
            RAISERROR (N'An error occurred while deleting the PersonToken record.', 11, 11); 
            RETURN @intReturnVal 
        END
    RETURN @intReturnVal

GO

GRANT EXECUTE ON [ORCID].[cg2_PersonTokenDelete] TO App_Profiles10

GO

if exists (select * from dbo.sysobjects where id = object_id(N'[ORCID].[cg2_PersonURLGetByPersonID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
    drop procedure [ORCID].[cg2_PersonURLGetByPersonID]

GO

CREATE PROCEDURE [ORCID].[cg2_PersonURLGetByPersonID]
 
    @PersonID  INT 

AS
 
    SELECT TOP 100 PERCENT
        [ORCID].[PersonURL].[PersonURLID]
        , [ORCID].[PersonURL].[PersonID]
        , [ORCID].[PersonURL].[PersonMessageID]
        , [ORCID].[PersonURL].[URLName]
        , [ORCID].[PersonURL].[URL]
        , [ORCID].[PersonURL].[DecisionID]
    FROM
        [ORCID].[PersonURL]
    WHERE
        [ORCID].[PersonURL].[PersonID] = @PersonID


GO

GRANT EXECUTE ON [ORCID].[cg2_PersonURLGetByPersonID] TO App_Profiles10

GO

if exists (select * from dbo.sysobjects where id = object_id(N'[ORCID].[cg2_PersonURLGetByPersonIDAndURL]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
    drop procedure [ORCID].[cg2_PersonURLGetByPersonIDAndURL]

GO

CREATE PROCEDURE [ORCID].[cg2_PersonURLGetByPersonIDAndURL]
 
    @PersonID  INT 
    , @URL  VARCHAR(2000) 

AS
 
    SELECT TOP 100 PERCENT
        [ORCID].[PersonURL].[PersonURLID]
        , [ORCID].[PersonURL].[PersonID]
        , [ORCID].[PersonURL].[PersonMessageID]
        , [ORCID].[PersonURL].[URLName]
        , [ORCID].[PersonURL].[URL]
        , [ORCID].[PersonURL].[DecisionID]
    FROM
        [ORCID].[PersonURL]
    WHERE
        [ORCID].[PersonURL].[PersonID] = @PersonID
        AND [ORCID].[PersonURL].[URL] = @URL


GO

GRANT EXECUTE ON [ORCID].[cg2_PersonURLGetByPersonIDAndURL] TO App_Profiles10

GO

if exists (select * from dbo.sysobjects where id = object_id(N'[ORCID].[cg2_PersonURLGetByPersonIDAndURL]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
    drop procedure [ORCID].[cg2_PersonURLGetByPersonIDAndURL]

GO

CREATE PROCEDURE [ORCID].[cg2_PersonURLGetByPersonIDAndURL]
 
    @PersonID  INT 
    , @URL  VARCHAR(2000) 

AS
 
    SELECT TOP 100 PERCENT
        [ORCID].[PersonURL].[PersonURLID]
        , [ORCID].[PersonURL].[PersonID]
        , [ORCID].[PersonURL].[PersonMessageID]
        , [ORCID].[PersonURL].[URLName]
        , [ORCID].[PersonURL].[URL]
        , [ORCID].[PersonURL].[DecisionID]
    FROM
        [ORCID].[PersonURL]
    WHERE
        [ORCID].[PersonURL].[PersonID] = @PersonID
        AND [ORCID].[PersonURL].[URL] = @URL


GO

GRANT EXECUTE ON [ORCID].[cg2_PersonURLGetByPersonIDAndURL] TO App_Profiles10

GO

if exists (select * from dbo.sysobjects where id = object_id(N'[ORCID].[cg2_PersonURLGetByPersonMessageID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
    drop procedure [ORCID].[cg2_PersonURLGetByPersonMessageID]

GO

CREATE PROCEDURE [ORCID].[cg2_PersonURLGetByPersonMessageID]
 
    @PersonMessageID  INT 

AS
 
    SELECT TOP 100 PERCENT
        [ORCID].[PersonURL].[PersonURLID]
        , [ORCID].[PersonURL].[PersonID]
        , [ORCID].[PersonURL].[PersonMessageID]
        , [ORCID].[PersonURL].[URLName]
        , [ORCID].[PersonURL].[URL]
        , [ORCID].[PersonURL].[DecisionID]
    FROM
        [ORCID].[PersonURL]
    WHERE
        [ORCID].[PersonURL].[PersonMessageID] = @PersonMessageID


GO

GRANT EXECUTE ON [ORCID].[cg2_PersonURLGetByPersonMessageID] TO App_Profiles10

GO

if exists (select * from dbo.sysobjects where id = object_id(N'[ORCID].[cg2_PersonURLGet]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
    drop procedure [ORCID].[cg2_PersonURLGet]

GO

CREATE PROCEDURE [ORCID].[cg2_PersonURLGet]
 
    @PersonURLID  INT 

AS
 
    SELECT TOP 100 PERCENT
        [ORCID].[PersonURL].[PersonURLID]
        , [ORCID].[PersonURL].[PersonID]
        , [ORCID].[PersonURL].[PersonMessageID]
        , [ORCID].[PersonURL].[URLName]
        , [ORCID].[PersonURL].[URL]
        , [ORCID].[PersonURL].[DecisionID]
    FROM
        [ORCID].[PersonURL]
    WHERE
        [ORCID].[PersonURL].[PersonURLID] = @PersonURLID


GO

GRANT EXECUTE ON [ORCID].[cg2_PersonURLGet] TO App_Profiles10

GO

CREATE PROCEDURE [ORCID].[cg2_PersonURLsGet]
 
AS
 
    SELECT TOP 100 PERCENT
        [ORCID].[PersonURL].[PersonURLID]
        , [ORCID].[PersonURL].[PersonID]
        , [ORCID].[PersonURL].[PersonMessageID]
        , [ORCID].[PersonURL].[URLName]
        , [ORCID].[PersonURL].[URL]
        , [ORCID].[PersonURL].[DecisionID]
    FROM
        [ORCID].[PersonURL]

GO

GRANT EXECUTE ON [ORCID].[cg2_PersonURLsGet] TO App_Profiles10

GO

 
CREATE PROCEDURE [ORCID].[cg2_PersonURLAdd]

    @PersonURLID  INT =NULL OUTPUT 
    , @PersonID  INT 
    , @PersonMessageID  INT =NULL
    , @URLName  VARCHAR(500) =NULL
    , @URL  VARCHAR(2000) 
    , @DecisionID  INT 

AS


    DECLARE @intReturnVal INT 
    SET @intReturnVal = 0
    DECLARE @strReturn  Varchar(200) 
    SET @intReturnVal = 0
    DECLARE @intRecordLevelAuditTrailID INT 
    DECLARE @intFieldLevelAuditTrailID INT 
    DECLARE @intTableID INT 
    SET @intTableID = 3621
 
  
        INSERT INTO [ORCID].[PersonURL]
        (
            [PersonID]
            , [PersonMessageID]
            , [URLName]
            , [URL]
            , [DecisionID]
        )
        (
            SELECT
            @PersonID
            , @PersonMessageID
            , @URLName
            , @URL
            , @DecisionID
        )
   
        SET @intReturnVal = @@error
        SET @PersonURLID = @@IDENTITY
        IF @intReturnVal <> 0
        BEGIN
            RAISERROR (N'An error occurred while adding the PersonURL record.', 11, 11); 
            RETURN @intReturnVal 
        END

GO

GRANT EXECUTE ON [ORCID].[cg2_PersonURLAdd] TO App_Profiles10

GO

 
CREATE PROCEDURE [ORCID].[cg2_PersonURLEdit]

    @PersonURLID  INT =NULL OUTPUT 
    , @PersonID  INT 
    , @PersonMessageID  INT =NULL
    , @URLName  VARCHAR(500) =NULL
    , @URL  VARCHAR(2000) 
    , @DecisionID  INT 

AS


    DECLARE @intReturnVal INT 
    SET @intReturnVal = 0
    DECLARE @strReturn  Varchar(200) 
    SET @intReturnVal = 0
    DECLARE @intRecordLevelAuditTrailID INT 
    DECLARE @intFieldLevelAuditTrailID INT 
    DECLARE @intTableID INT 
    SET @intTableID = 3621
 
  
        UPDATE [ORCID].[PersonURL]
        SET
            [PersonID] = @PersonID
            , [PersonMessageID] = @PersonMessageID
            , [URLName] = @URLName
            , [URL] = @URL
            , [DecisionID] = @DecisionID
        FROM
            [ORCID].[PersonURL]
        WHERE
        [ORCID].[PersonURL].[PersonURLID] = @PersonURLID

        
        SET @intReturnVal = @@error
        IF @intReturnVal <> 0
        BEGIN
            RAISERROR (N'An error occurred while editing the PersonURL record.', 11, 11); 
            RETURN @intReturnVal 
        END

GO

GRANT EXECUTE ON [ORCID].[cg2_PersonURLEdit] TO App_Profiles10

GO

CREATE PROCEDURE [ORCID].[cg2_PersonURLDelete]
 
    @PersonURLID  INT 

 
AS
 
    DECLARE @intReturnVal INT 
    SET @intReturnVal = 0
 
 
        DELETE FROM [ORCID].[PersonURL] WHERE         [ORCID].[PersonURL].[PersonURLID] = @PersonURLID

 
        SET @intReturnVal = @@error
        IF @intReturnVal <> 0
        BEGIN
            RAISERROR (N'An error occurred while deleting the PersonURL record.', 11, 11); 
            RETURN @intReturnVal 
        END
    RETURN @intReturnVal

GO

GRANT EXECUTE ON [ORCID].[cg2_PersonURLDelete] TO App_Profiles10

GO

if exists (select * from dbo.sysobjects where id = object_id(N'[ORCID].[cg2_PersonWorkGetByDecisionID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
    drop procedure [ORCID].[cg2_PersonWorkGetByDecisionID]

GO

CREATE PROCEDURE [ORCID].[cg2_PersonWorkGetByDecisionID]
 
    @DecisionID  INT 

AS
 
    SELECT TOP 100 PERCENT
        [ORCID].[PersonWork].[PersonWorkID]
        , [ORCID].[PersonWork].[PersonID]
        , [ORCID].[PersonWork].[PersonMessageID]
        , [ORCID].[PersonWork].[DecisionID]
        , [ORCID].[PersonWork].[WorkTitle]
        , [ORCID].[PersonWork].[ShortDescription]
        , [ORCID].[PersonWork].[WorkCitation]
        , [ORCID].[PersonWork].[WorkType]
        , [ORCID].[PersonWork].[URL]
        , [ORCID].[PersonWork].[SubTitle]
        , [ORCID].[PersonWork].[WorkCitationType]
        , [ORCID].[PersonWork].[PubDate]
        , [ORCID].[PersonWork].[PublicationMediaType]
        , [ORCID].[PersonWork].[PubID]
    FROM
        [ORCID].[PersonWork]
    WHERE
        [ORCID].[PersonWork].[DecisionID] = @DecisionID


GO

GRANT EXECUTE ON [ORCID].[cg2_PersonWorkGetByDecisionID] TO App_Profiles10

GO

if exists (select * from dbo.sysobjects where id = object_id(N'[ORCID].[cg2_PersonWorkGetByPersonID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
    drop procedure [ORCID].[cg2_PersonWorkGetByPersonID]

GO

CREATE PROCEDURE [ORCID].[cg2_PersonWorkGetByPersonID]
 
    @PersonID  INT 

AS
 
    SELECT TOP 100 PERCENT
        [ORCID].[PersonWork].[PersonWorkID]
        , [ORCID].[PersonWork].[PersonID]
        , [ORCID].[PersonWork].[PersonMessageID]
        , [ORCID].[PersonWork].[DecisionID]
        , [ORCID].[PersonWork].[WorkTitle]
        , [ORCID].[PersonWork].[ShortDescription]
        , [ORCID].[PersonWork].[WorkCitation]
        , [ORCID].[PersonWork].[WorkType]
        , [ORCID].[PersonWork].[URL]
        , [ORCID].[PersonWork].[SubTitle]
        , [ORCID].[PersonWork].[WorkCitationType]
        , [ORCID].[PersonWork].[PubDate]
        , [ORCID].[PersonWork].[PublicationMediaType]
        , [ORCID].[PersonWork].[PubID]
    FROM
        [ORCID].[PersonWork]
    WHERE
        [ORCID].[PersonWork].[PersonID] = @PersonID


GO

GRANT EXECUTE ON [ORCID].[cg2_PersonWorkGetByPersonID] TO App_Profiles10

GO

if exists (select * from dbo.sysobjects where id = object_id(N'[ORCID].[cg2_PersonWorkGetByPersonIDAndPubID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
    drop procedure [ORCID].[cg2_PersonWorkGetByPersonIDAndPubID]

GO

CREATE PROCEDURE [ORCID].[cg2_PersonWorkGetByPersonIDAndPubID]
 
    @PersonID  INT 
    , @PubID  NVARCHAR(50) 

AS
 
    SELECT TOP 100 PERCENT
        [ORCID].[PersonWork].[PersonWorkID]
        , [ORCID].[PersonWork].[PersonID]
        , [ORCID].[PersonWork].[PersonMessageID]
        , [ORCID].[PersonWork].[DecisionID]
        , [ORCID].[PersonWork].[WorkTitle]
        , [ORCID].[PersonWork].[ShortDescription]
        , [ORCID].[PersonWork].[WorkCitation]
        , [ORCID].[PersonWork].[WorkType]
        , [ORCID].[PersonWork].[URL]
        , [ORCID].[PersonWork].[SubTitle]
        , [ORCID].[PersonWork].[WorkCitationType]
        , [ORCID].[PersonWork].[PubDate]
        , [ORCID].[PersonWork].[PublicationMediaType]
        , [ORCID].[PersonWork].[PubID]
    FROM
        [ORCID].[PersonWork]
    WHERE
        [ORCID].[PersonWork].[PersonID] = @PersonID
        AND [ORCID].[PersonWork].[PubID] = @PubID


GO

GRANT EXECUTE ON [ORCID].[cg2_PersonWorkGetByPersonIDAndPubID] TO App_Profiles10

GO

if exists (select * from dbo.sysobjects where id = object_id(N'[ORCID].[cg2_PersonWorkGetByPersonIDAndPubID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
    drop procedure [ORCID].[cg2_PersonWorkGetByPersonIDAndPubID]

GO

CREATE PROCEDURE [ORCID].[cg2_PersonWorkGetByPersonIDAndPubID]
 
    @PersonID  INT 
    , @PubID  NVARCHAR(50) 

AS
 
    SELECT TOP 100 PERCENT
        [ORCID].[PersonWork].[PersonWorkID]
        , [ORCID].[PersonWork].[PersonID]
        , [ORCID].[PersonWork].[PersonMessageID]
        , [ORCID].[PersonWork].[DecisionID]
        , [ORCID].[PersonWork].[WorkTitle]
        , [ORCID].[PersonWork].[ShortDescription]
        , [ORCID].[PersonWork].[WorkCitation]
        , [ORCID].[PersonWork].[WorkType]
        , [ORCID].[PersonWork].[URL]
        , [ORCID].[PersonWork].[SubTitle]
        , [ORCID].[PersonWork].[WorkCitationType]
        , [ORCID].[PersonWork].[PubDate]
        , [ORCID].[PersonWork].[PublicationMediaType]
        , [ORCID].[PersonWork].[PubID]
    FROM
        [ORCID].[PersonWork]
    WHERE
        [ORCID].[PersonWork].[PersonID] = @PersonID
        AND [ORCID].[PersonWork].[PubID] = @PubID


GO

GRANT EXECUTE ON [ORCID].[cg2_PersonWorkGetByPersonIDAndPubID] TO App_Profiles10

GO

if exists (select * from dbo.sysobjects where id = object_id(N'[ORCID].[cg2_PersonWorkGetByPersonMessageID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
    drop procedure [ORCID].[cg2_PersonWorkGetByPersonMessageID]

GO

CREATE PROCEDURE [ORCID].[cg2_PersonWorkGetByPersonMessageID]
 
    @PersonMessageID  INT 

AS
 
    SELECT TOP 100 PERCENT
        [ORCID].[PersonWork].[PersonWorkID]
        , [ORCID].[PersonWork].[PersonID]
        , [ORCID].[PersonWork].[PersonMessageID]
        , [ORCID].[PersonWork].[DecisionID]
        , [ORCID].[PersonWork].[WorkTitle]
        , [ORCID].[PersonWork].[ShortDescription]
        , [ORCID].[PersonWork].[WorkCitation]
        , [ORCID].[PersonWork].[WorkType]
        , [ORCID].[PersonWork].[URL]
        , [ORCID].[PersonWork].[SubTitle]
        , [ORCID].[PersonWork].[WorkCitationType]
        , [ORCID].[PersonWork].[PubDate]
        , [ORCID].[PersonWork].[PublicationMediaType]
        , [ORCID].[PersonWork].[PubID]
    FROM
        [ORCID].[PersonWork]
    WHERE
        [ORCID].[PersonWork].[PersonMessageID] = @PersonMessageID


GO

GRANT EXECUTE ON [ORCID].[cg2_PersonWorkGetByPersonMessageID] TO App_Profiles10

GO

if exists (select * from dbo.sysobjects where id = object_id(N'[ORCID].[cg2_PersonWorkGet]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
    drop procedure [ORCID].[cg2_PersonWorkGet]

GO

CREATE PROCEDURE [ORCID].[cg2_PersonWorkGet]
 
    @PersonWorkID  INT 

AS
 
    SELECT TOP 100 PERCENT
        [ORCID].[PersonWork].[PersonWorkID]
        , [ORCID].[PersonWork].[PersonID]
        , [ORCID].[PersonWork].[PersonMessageID]
        , [ORCID].[PersonWork].[DecisionID]
        , [ORCID].[PersonWork].[WorkTitle]
        , [ORCID].[PersonWork].[ShortDescription]
        , [ORCID].[PersonWork].[WorkCitation]
        , [ORCID].[PersonWork].[WorkType]
        , [ORCID].[PersonWork].[URL]
        , [ORCID].[PersonWork].[SubTitle]
        , [ORCID].[PersonWork].[WorkCitationType]
        , [ORCID].[PersonWork].[PubDate]
        , [ORCID].[PersonWork].[PublicationMediaType]
        , [ORCID].[PersonWork].[PubID]
    FROM
        [ORCID].[PersonWork]
    WHERE
        [ORCID].[PersonWork].[PersonWorkID] = @PersonWorkID


GO

GRANT EXECUTE ON [ORCID].[cg2_PersonWorkGet] TO App_Profiles10

GO

CREATE PROCEDURE [ORCID].[cg2_PersonWorksGet]
 
AS
 
    SELECT TOP 100 PERCENT
        [ORCID].[PersonWork].[PersonWorkID]
        , [ORCID].[PersonWork].[PersonID]
        , [ORCID].[PersonWork].[PersonMessageID]
        , [ORCID].[PersonWork].[DecisionID]
        , [ORCID].[PersonWork].[WorkTitle]
        , [ORCID].[PersonWork].[ShortDescription]
        , [ORCID].[PersonWork].[WorkCitation]
        , [ORCID].[PersonWork].[WorkType]
        , [ORCID].[PersonWork].[URL]
        , [ORCID].[PersonWork].[SubTitle]
        , [ORCID].[PersonWork].[WorkCitationType]
        , [ORCID].[PersonWork].[PubDate]
        , [ORCID].[PersonWork].[PublicationMediaType]
        , [ORCID].[PersonWork].[PubID]
    FROM
        [ORCID].[PersonWork]

GO

GRANT EXECUTE ON [ORCID].[cg2_PersonWorksGet] TO App_Profiles10

GO

 
CREATE PROCEDURE [ORCID].[cg2_PersonWorkAdd]

    @PersonWorkID  INT =NULL OUTPUT 
    , @PersonID  INT 
    , @PersonMessageID  INT =NULL
    , @DecisionID  INT 
    , @WorkTitle  VARCHAR(MAX) 
    , @ShortDescription  VARCHAR(MAX) =NULL
    , @WorkCitation  VARCHAR(MAX) =NULL
    , @WorkType  VARCHAR(500) =NULL
    , @URL  VARCHAR(1000) =NULL
    , @SubTitle  VARCHAR(MAX) =NULL
    , @WorkCitationType  VARCHAR(500) =NULL
    , @PubDate  SMALLDATETIME =NULL
    , @PublicationMediaType  VARCHAR(500) =NULL
    , @PubID  NVARCHAR(50) 

AS


    DECLARE @intReturnVal INT 
    SET @intReturnVal = 0
    DECLARE @strReturn  Varchar(200) 
    SET @intReturnVal = 0
    DECLARE @intRecordLevelAuditTrailID INT 
    DECLARE @intFieldLevelAuditTrailID INT 
    DECLARE @intTableID INT 
    SET @intTableID = 3607
 
  
        INSERT INTO [ORCID].[PersonWork]
        (
            [PersonID]
            , [PersonMessageID]
            , [DecisionID]
            , [WorkTitle]
            , [ShortDescription]
            , [WorkCitation]
            , [WorkType]
            , [URL]
            , [SubTitle]
            , [WorkCitationType]
            , [PubDate]
            , [PublicationMediaType]
            , [PubID]
        )
        (
            SELECT
            @PersonID
            , @PersonMessageID
            , @DecisionID
            , @WorkTitle
            , @ShortDescription
            , @WorkCitation
            , @WorkType
            , @URL
            , @SubTitle
            , @WorkCitationType
            , @PubDate
            , @PublicationMediaType
            , @PubID
        )
   
        SET @intReturnVal = @@error
        SET @PersonWorkID = @@IDENTITY
        IF @intReturnVal <> 0
        BEGIN
            RAISERROR (N'An error occurred while adding the PersonWork record.', 11, 11); 
            RETURN @intReturnVal 
        END

GO

GRANT EXECUTE ON [ORCID].[cg2_PersonWorkAdd] TO App_Profiles10

GO

 
CREATE PROCEDURE [ORCID].[cg2_PersonWorkEdit]

    @PersonWorkID  INT =NULL OUTPUT 
    , @PersonID  INT 
    , @PersonMessageID  INT =NULL
    , @DecisionID  INT 
    , @WorkTitle  VARCHAR(MAX) 
    , @ShortDescription  VARCHAR(MAX) =NULL
    , @WorkCitation  VARCHAR(MAX) =NULL
    , @WorkType  VARCHAR(500) =NULL
    , @URL  VARCHAR(1000) =NULL
    , @SubTitle  VARCHAR(MAX) =NULL
    , @WorkCitationType  VARCHAR(500) =NULL
    , @PubDate  SMALLDATETIME =NULL
    , @PublicationMediaType  VARCHAR(500) =NULL
    , @PubID  NVARCHAR(50) 

AS


    DECLARE @intReturnVal INT 
    SET @intReturnVal = 0
    DECLARE @strReturn  Varchar(200) 
    SET @intReturnVal = 0
    DECLARE @intRecordLevelAuditTrailID INT 
    DECLARE @intFieldLevelAuditTrailID INT 
    DECLARE @intTableID INT 
    SET @intTableID = 3607
 
  
        UPDATE [ORCID].[PersonWork]
        SET
            [PersonID] = @PersonID
            , [PersonMessageID] = @PersonMessageID
            , [DecisionID] = @DecisionID
            , [WorkTitle] = @WorkTitle
            , [ShortDescription] = @ShortDescription
            , [WorkCitation] = @WorkCitation
            , [WorkType] = @WorkType
            , [URL] = @URL
            , [SubTitle] = @SubTitle
            , [WorkCitationType] = @WorkCitationType
            , [PubDate] = @PubDate
            , [PublicationMediaType] = @PublicationMediaType
            , [PubID] = @PubID
        FROM
            [ORCID].[PersonWork]
        WHERE
        [ORCID].[PersonWork].[PersonWorkID] = @PersonWorkID

        
        SET @intReturnVal = @@error
        IF @intReturnVal <> 0
        BEGIN
            RAISERROR (N'An error occurred while editing the PersonWork record.', 11, 11); 
            RETURN @intReturnVal 
        END

GO

GRANT EXECUTE ON [ORCID].[cg2_PersonWorkEdit] TO App_Profiles10

GO

CREATE PROCEDURE [ORCID].[cg2_PersonWorkDelete]
 
    @PersonWorkID  INT 

 
AS
 
    DECLARE @intReturnVal INT 
    SET @intReturnVal = 0
 
 
        DELETE FROM [ORCID].[PersonWork] WHERE         [ORCID].[PersonWork].[PersonWorkID] = @PersonWorkID

 
        SET @intReturnVal = @@error
        IF @intReturnVal <> 0
        BEGIN
            RAISERROR (N'An error occurred while deleting the PersonWork record.', 11, 11); 
            RETURN @intReturnVal 
        END
    RETURN @intReturnVal

GO

GRANT EXECUTE ON [ORCID].[cg2_PersonWorkDelete] TO App_Profiles10

GO

if exists (select * from dbo.sysobjects where id = object_id(N'[ORCID].[cg2_PersonWorkIdentifierGetByPersonWorkID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
    drop procedure [ORCID].[cg2_PersonWorkIdentifierGetByPersonWorkID]

GO

CREATE PROCEDURE [ORCID].[cg2_PersonWorkIdentifierGetByPersonWorkID]
 
    @PersonWorkID  INT 

AS
 
    SELECT TOP 100 PERCENT
        [ORCID].[PersonWorkIdentifier].[PersonWorkIdentifierID]
        , [ORCID].[PersonWorkIdentifier].[PersonWorkID]
        , [ORCID].[PersonWorkIdentifier].[WorkExternalTypeID]
        , [ORCID].[PersonWorkIdentifier].[Identifier]
    FROM
        [ORCID].[PersonWorkIdentifier]
    WHERE
        [ORCID].[PersonWorkIdentifier].[PersonWorkID] = @PersonWorkID


GO

GRANT EXECUTE ON [ORCID].[cg2_PersonWorkIdentifierGetByPersonWorkID] TO App_Profiles10

GO

if exists (select * from dbo.sysobjects where id = object_id(N'[ORCID].[cg2_PersonWorkIdentifierGetByWorkExternalTypeID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
    drop procedure [ORCID].[cg2_PersonWorkIdentifierGetByWorkExternalTypeID]

GO

CREATE PROCEDURE [ORCID].[cg2_PersonWorkIdentifierGetByWorkExternalTypeID]
 
    @WorkExternalTypeID  INT 

AS
 
    SELECT TOP 100 PERCENT
        [ORCID].[PersonWorkIdentifier].[PersonWorkIdentifierID]
        , [ORCID].[PersonWorkIdentifier].[PersonWorkID]
        , [ORCID].[PersonWorkIdentifier].[WorkExternalTypeID]
        , [ORCID].[PersonWorkIdentifier].[Identifier]
    FROM
        [ORCID].[PersonWorkIdentifier]
    WHERE
        [ORCID].[PersonWorkIdentifier].[WorkExternalTypeID] = @WorkExternalTypeID


GO

GRANT EXECUTE ON [ORCID].[cg2_PersonWorkIdentifierGetByWorkExternalTypeID] TO App_Profiles10

GO

if exists (select * from dbo.sysobjects where id = object_id(N'[ORCID].[cg2_PersonWorkIdentifierGetByPersonWorkIDAndWorkExternalTypeIDAndIdentifier]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
    drop procedure [ORCID].[cg2_PersonWorkIdentifierGetByPersonWorkIDAndWorkExternalTypeIDAndIdentifier]

GO

CREATE PROCEDURE [ORCID].[cg2_PersonWorkIdentifierGetByPersonWorkIDAndWorkExternalTypeIDAndIdentifier]
 
    @PersonWorkID  INT 
    , @WorkExternalTypeID  INT 
    , @Identifier  VARCHAR(250) 

AS
 
    SELECT TOP 100 PERCENT
        [ORCID].[PersonWorkIdentifier].[PersonWorkIdentifierID]
        , [ORCID].[PersonWorkIdentifier].[PersonWorkID]
        , [ORCID].[PersonWorkIdentifier].[WorkExternalTypeID]
        , [ORCID].[PersonWorkIdentifier].[Identifier]
    FROM
        [ORCID].[PersonWorkIdentifier]
    WHERE
        [ORCID].[PersonWorkIdentifier].[PersonWorkID] = @PersonWorkID
        AND [ORCID].[PersonWorkIdentifier].[WorkExternalTypeID] = @WorkExternalTypeID
        AND [ORCID].[PersonWorkIdentifier].[Identifier] = @Identifier


GO

GRANT EXECUTE ON [ORCID].[cg2_PersonWorkIdentifierGetByPersonWorkIDAndWorkExternalTypeIDAndIdentifier] TO App_Profiles10

GO

if exists (select * from dbo.sysobjects where id = object_id(N'[ORCID].[cg2_PersonWorkIdentifierGetByPersonWorkIDAndWorkExternalTypeIDAndIdentifier]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
    drop procedure [ORCID].[cg2_PersonWorkIdentifierGetByPersonWorkIDAndWorkExternalTypeIDAndIdentifier]

GO

CREATE PROCEDURE [ORCID].[cg2_PersonWorkIdentifierGetByPersonWorkIDAndWorkExternalTypeIDAndIdentifier]
 
    @PersonWorkID  INT 
    , @WorkExternalTypeID  INT 
    , @Identifier  VARCHAR(250) 

AS
 
    SELECT TOP 100 PERCENT
        [ORCID].[PersonWorkIdentifier].[PersonWorkIdentifierID]
        , [ORCID].[PersonWorkIdentifier].[PersonWorkID]
        , [ORCID].[PersonWorkIdentifier].[WorkExternalTypeID]
        , [ORCID].[PersonWorkIdentifier].[Identifier]
    FROM
        [ORCID].[PersonWorkIdentifier]
    WHERE
        [ORCID].[PersonWorkIdentifier].[PersonWorkID] = @PersonWorkID
        AND [ORCID].[PersonWorkIdentifier].[WorkExternalTypeID] = @WorkExternalTypeID
        AND [ORCID].[PersonWorkIdentifier].[Identifier] = @Identifier


GO

GRANT EXECUTE ON [ORCID].[cg2_PersonWorkIdentifierGetByPersonWorkIDAndWorkExternalTypeIDAndIdentifier] TO App_Profiles10

GO

if exists (select * from dbo.sysobjects where id = object_id(N'[ORCID].[cg2_PersonWorkIdentifierGetByPersonWorkIDAndWorkExternalTypeIDAndIdentifier]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
    drop procedure [ORCID].[cg2_PersonWorkIdentifierGetByPersonWorkIDAndWorkExternalTypeIDAndIdentifier]

GO

CREATE PROCEDURE [ORCID].[cg2_PersonWorkIdentifierGetByPersonWorkIDAndWorkExternalTypeIDAndIdentifier]
 
    @PersonWorkID  INT 
    , @WorkExternalTypeID  INT 
    , @Identifier  VARCHAR(250) 

AS
 
    SELECT TOP 100 PERCENT
        [ORCID].[PersonWorkIdentifier].[PersonWorkIdentifierID]
        , [ORCID].[PersonWorkIdentifier].[PersonWorkID]
        , [ORCID].[PersonWorkIdentifier].[WorkExternalTypeID]
        , [ORCID].[PersonWorkIdentifier].[Identifier]
    FROM
        [ORCID].[PersonWorkIdentifier]
    WHERE
        [ORCID].[PersonWorkIdentifier].[PersonWorkID] = @PersonWorkID
        AND [ORCID].[PersonWorkIdentifier].[WorkExternalTypeID] = @WorkExternalTypeID
        AND [ORCID].[PersonWorkIdentifier].[Identifier] = @Identifier


GO

GRANT EXECUTE ON [ORCID].[cg2_PersonWorkIdentifierGetByPersonWorkIDAndWorkExternalTypeIDAndIdentifier] TO App_Profiles10

GO

if exists (select * from dbo.sysobjects where id = object_id(N'[ORCID].[cg2_PersonWorkIdentifierGet]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
    drop procedure [ORCID].[cg2_PersonWorkIdentifierGet]

GO

CREATE PROCEDURE [ORCID].[cg2_PersonWorkIdentifierGet]
 
    @PersonWorkIdentifierID  INT 

AS
 
    SELECT TOP 100 PERCENT
        [ORCID].[PersonWorkIdentifier].[PersonWorkIdentifierID]
        , [ORCID].[PersonWorkIdentifier].[PersonWorkID]
        , [ORCID].[PersonWorkIdentifier].[WorkExternalTypeID]
        , [ORCID].[PersonWorkIdentifier].[Identifier]
    FROM
        [ORCID].[PersonWorkIdentifier]
    WHERE
        [ORCID].[PersonWorkIdentifier].[PersonWorkIdentifierID] = @PersonWorkIdentifierID


GO

GRANT EXECUTE ON [ORCID].[cg2_PersonWorkIdentifierGet] TO App_Profiles10

GO

CREATE PROCEDURE [ORCID].[cg2_PersonWorkIdentifiersGet]
 
AS
 
    SELECT TOP 100 PERCENT
        [ORCID].[PersonWorkIdentifier].[PersonWorkIdentifierID]
        , [ORCID].[PersonWorkIdentifier].[PersonWorkID]
        , [ORCID].[PersonWorkIdentifier].[WorkExternalTypeID]
        , [ORCID].[PersonWorkIdentifier].[Identifier]
    FROM
        [ORCID].[PersonWorkIdentifier]

GO

GRANT EXECUTE ON [ORCID].[cg2_PersonWorkIdentifiersGet] TO App_Profiles10

GO

 
CREATE PROCEDURE [ORCID].[cg2_PersonWorkIdentifierAdd]

    @PersonWorkIdentifierID  INT =NULL OUTPUT 
    , @PersonWorkID  INT 
    , @WorkExternalTypeID  INT 
    , @Identifier  VARCHAR(250) 

AS


    DECLARE @intReturnVal INT 
    SET @intReturnVal = 0
    DECLARE @strReturn  Varchar(200) 
    SET @intReturnVal = 0
    DECLARE @intRecordLevelAuditTrailID INT 
    DECLARE @intFieldLevelAuditTrailID INT 
    DECLARE @intTableID INT 
    SET @intTableID = 3615
 
  
        INSERT INTO [ORCID].[PersonWorkIdentifier]
        (
            [PersonWorkID]
            , [WorkExternalTypeID]
            , [Identifier]
        )
        (
            SELECT
            @PersonWorkID
            , @WorkExternalTypeID
            , @Identifier
        )
   
        SET @intReturnVal = @@error
        SET @PersonWorkIdentifierID = @@IDENTITY
        IF @intReturnVal <> 0
        BEGIN
            RAISERROR (N'An error occurred while adding the PersonWorkIdentifier record.', 11, 11); 
            RETURN @intReturnVal 
        END

GO

GRANT EXECUTE ON [ORCID].[cg2_PersonWorkIdentifierAdd] TO App_Profiles10

GO

 
CREATE PROCEDURE [ORCID].[cg2_PersonWorkIdentifierEdit]

    @PersonWorkIdentifierID  INT =NULL OUTPUT 
    , @PersonWorkID  INT 
    , @WorkExternalTypeID  INT 
    , @Identifier  VARCHAR(250) 

AS


    DECLARE @intReturnVal INT 
    SET @intReturnVal = 0
    DECLARE @strReturn  Varchar(200) 
    SET @intReturnVal = 0
    DECLARE @intRecordLevelAuditTrailID INT 
    DECLARE @intFieldLevelAuditTrailID INT 
    DECLARE @intTableID INT 
    SET @intTableID = 3615
 
  
        UPDATE [ORCID].[PersonWorkIdentifier]
        SET
            [PersonWorkID] = @PersonWorkID
            , [WorkExternalTypeID] = @WorkExternalTypeID
            , [Identifier] = @Identifier
        FROM
            [ORCID].[PersonWorkIdentifier]
        WHERE
        [ORCID].[PersonWorkIdentifier].[PersonWorkIdentifierID] = @PersonWorkIdentifierID

        
        SET @intReturnVal = @@error
        IF @intReturnVal <> 0
        BEGIN
            RAISERROR (N'An error occurred while editing the PersonWorkIdentifier record.', 11, 11); 
            RETURN @intReturnVal 
        END

GO

GRANT EXECUTE ON [ORCID].[cg2_PersonWorkIdentifierEdit] TO App_Profiles10

GO

CREATE PROCEDURE [ORCID].[cg2_PersonWorkIdentifierDelete]
 
    @PersonWorkIdentifierID  INT 

 
AS
 
    DECLARE @intReturnVal INT 
    SET @intReturnVal = 0
 
 
        DELETE FROM [ORCID].[PersonWorkIdentifier] WHERE         [ORCID].[PersonWorkIdentifier].[PersonWorkIdentifierID] = @PersonWorkIdentifierID

 
        SET @intReturnVal = @@error
        IF @intReturnVal <> 0
        BEGIN
            RAISERROR (N'An error occurred while deleting the PersonWorkIdentifier record.', 11, 11); 
            RETURN @intReturnVal 
        END
    RETURN @intReturnVal

GO

GRANT EXECUTE ON [ORCID].[cg2_PersonWorkIdentifierDelete] TO App_Profiles10

GO

if exists (select * from dbo.sysobjects where id = object_id(N'[ORCID].[cg2_RecordLevelAuditTrailGet]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
    drop procedure [ORCID].[cg2_RecordLevelAuditTrailGet]

GO

CREATE PROCEDURE [ORCID].[cg2_RecordLevelAuditTrailGet]
 
    @RecordLevelAuditTrailID  BIGINT 

AS
 
    SELECT TOP 100 PERCENT
        [ORCID].[RecordLevelAuditTrail].[RecordLevelAuditTrailID]
        , [ORCID].[RecordLevelAuditTrail].[MetaTableID]
        , [ORCID].[RecordLevelAuditTrail].[RowIdentifier]
        , [ORCID].[RecordLevelAuditTrail].[RecordLevelAuditTypeID]
        , [ORCID].[RecordLevelAuditTrail].[CreatedDate]
        , [ORCID].[RecordLevelAuditTrail].[CreatedBy]
    FROM
        [ORCID].[RecordLevelAuditTrail]
    WHERE
        [ORCID].[RecordLevelAuditTrail].[RecordLevelAuditTrailID] = @RecordLevelAuditTrailID


GO

GRANT EXECUTE ON [ORCID].[cg2_RecordLevelAuditTrailGet] TO App_Profiles10

GO

CREATE PROCEDURE [ORCID].[cg2_RecordLevelAuditTrailsGet]
 
AS
 
    SELECT TOP 100 PERCENT
        [ORCID].[RecordLevelAuditTrail].[RecordLevelAuditTrailID]
        , [ORCID].[RecordLevelAuditTrail].[MetaTableID]
        , [ORCID].[RecordLevelAuditTrail].[RowIdentifier]
        , [ORCID].[RecordLevelAuditTrail].[RecordLevelAuditTypeID]
        , [ORCID].[RecordLevelAuditTrail].[CreatedDate]
        , [ORCID].[RecordLevelAuditTrail].[CreatedBy]
    FROM
        [ORCID].[RecordLevelAuditTrail]

GO

GRANT EXECUTE ON [ORCID].[cg2_RecordLevelAuditTrailsGet] TO App_Profiles10

GO

 
CREATE PROCEDURE [ORCID].[cg2_RecordLevelAuditTrailAdd]

    @RecordLevelAuditTrailID  BIGINT =NULL OUTPUT 
    , @MetaTableID  INT 
    , @RowIdentifier  BIGINT 
    , @RecordLevelAuditTypeID  INT 
    , @CreatedDate  SMALLDATETIME 
    , @CreatedBy  VARCHAR(10) 

AS


    DECLARE @intReturnVal INT 
    SET @intReturnVal = 0
    DECLARE @strReturn  Varchar(200) 
    SET @intReturnVal = 0
 
  
        INSERT INTO [ORCID].[RecordLevelAuditTrail]
        (
            [MetaTableID]
            , [RowIdentifier]
            , [RecordLevelAuditTypeID]
            , [CreatedDate]
            , [CreatedBy]
        )
        (
            SELECT
            @MetaTableID
            , @RowIdentifier
            , @RecordLevelAuditTypeID
            , @CreatedDate
            , @CreatedBy
        )
   
        SET @intReturnVal = @@error
        SET @RecordLevelAuditTrailID = @@IDENTITY
        IF @intReturnVal <> 0
        BEGIN
            RAISERROR (N'An error occurred while adding the RecordLevelAuditTrail record.', 11, 11); 
            RETURN @intReturnVal 
        END

GO

GRANT EXECUTE ON [ORCID].[cg2_RecordLevelAuditTrailAdd] TO App_Profiles10

GO

 
CREATE PROCEDURE [ORCID].[cg2_RecordLevelAuditTrailEdit]

    @RecordLevelAuditTrailID  BIGINT =NULL OUTPUT 
    , @MetaTableID  INT 
    , @RowIdentifier  BIGINT 
    , @RecordLevelAuditTypeID  INT 
    , @CreatedDate  SMALLDATETIME 
    , @CreatedBy  VARCHAR(10) 

AS


    DECLARE @intReturnVal INT 
    SET @intReturnVal = 0
    DECLARE @strReturn  Varchar(200) 
    SET @intReturnVal = 0
 
  
        UPDATE [ORCID].[RecordLevelAuditTrail]
        SET
            [MetaTableID] = @MetaTableID
            , [RowIdentifier] = @RowIdentifier
            , [RecordLevelAuditTypeID] = @RecordLevelAuditTypeID
            , [CreatedDate] = @CreatedDate
            , [CreatedBy] = @CreatedBy
        FROM
            [ORCID].[RecordLevelAuditTrail]
        WHERE
        [ORCID].[RecordLevelAuditTrail].[RecordLevelAuditTrailID] = @RecordLevelAuditTrailID

        
        SET @intReturnVal = @@error
        IF @intReturnVal <> 0
        BEGIN
            RAISERROR (N'An error occurred while editing the RecordLevelAuditTrail record.', 11, 11); 
            RETURN @intReturnVal 
        END

GO

GRANT EXECUTE ON [ORCID].[cg2_RecordLevelAuditTrailEdit] TO App_Profiles10

GO

CREATE PROCEDURE [ORCID].[cg2_RecordLevelAuditTrailDelete]
 
    @RecordLevelAuditTrailID  BIGINT 

 
AS
 
    DECLARE @intReturnVal INT 
    SET @intReturnVal = 0
 
 
        DELETE FROM [ORCID].[RecordLevelAuditTrail] WHERE         [ORCID].[RecordLevelAuditTrail].[RecordLevelAuditTrailID] = @RecordLevelAuditTrailID

 
        SET @intReturnVal = @@error
        IF @intReturnVal <> 0
        BEGIN
            RAISERROR (N'An error occurred while deleting the RecordLevelAuditTrail record.', 11, 11); 
            RETURN @intReturnVal 
        END
    RETURN @intReturnVal

GO

GRANT EXECUTE ON [ORCID].[cg2_RecordLevelAuditTrailDelete] TO App_Profiles10

GO

if exists (select * from dbo.sysobjects where id = object_id(N'[ORCID].[cg2_RecordLevelAuditTypeGet]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
    drop procedure [ORCID].[cg2_RecordLevelAuditTypeGet]

GO

CREATE PROCEDURE [ORCID].[cg2_RecordLevelAuditTypeGet]
 
    @RecordLevelAuditTypeID  INT 

AS
 
    SELECT TOP 100 PERCENT
        [ORCID].[RecordLevelAuditType].[RecordLevelAuditTypeID]
        , [ORCID].[RecordLevelAuditType].[AuditType]
    FROM
        [ORCID].[RecordLevelAuditType]
    WHERE
        [ORCID].[RecordLevelAuditType].[RecordLevelAuditTypeID] = @RecordLevelAuditTypeID


GO

GRANT EXECUTE ON [ORCID].[cg2_RecordLevelAuditTypeGet] TO App_Profiles10

GO

CREATE PROCEDURE [ORCID].[cg2_RecordLevelAuditTypesGet]
 
AS
 
    SELECT TOP 100 PERCENT
        [ORCID].[RecordLevelAuditType].[RecordLevelAuditTypeID]
        , [ORCID].[RecordLevelAuditType].[AuditType]
    FROM
        [ORCID].[RecordLevelAuditType]

GO

GRANT EXECUTE ON [ORCID].[cg2_RecordLevelAuditTypesGet] TO App_Profiles10

GO

 
CREATE PROCEDURE [ORCID].[cg2_RecordLevelAuditTypeAdd]

    @RecordLevelAuditTypeID  INT =NULL OUTPUT 
    , @AuditType  VARCHAR(50) 

AS


    DECLARE @intReturnVal INT 
    SET @intReturnVal = 0
    DECLARE @strReturn  Varchar(200) 
    SET @intReturnVal = 0
    DECLARE @intRecordLevelAuditTrailID INT 
    DECLARE @intFieldLevelAuditTrailID INT 
    DECLARE @intTableID INT 
    SET @intTableID = 3629
 
  
        INSERT INTO [ORCID].[RecordLevelAuditType]
        (
            [AuditType]
        )
        (
            SELECT
            @AuditType
        )
   
        SET @intReturnVal = @@error
        SET @RecordLevelAuditTypeID = @@IDENTITY
        IF @intReturnVal <> 0
        BEGIN
            RAISERROR (N'An error occurred while adding the RecordLevelAuditType record.', 11, 11); 
            RETURN @intReturnVal 
        END

GO

GRANT EXECUTE ON [ORCID].[cg2_RecordLevelAuditTypeAdd] TO App_Profiles10

GO

 
CREATE PROCEDURE [ORCID].[cg2_RecordLevelAuditTypeEdit]

    @RecordLevelAuditTypeID  INT =NULL OUTPUT 
    , @AuditType  VARCHAR(50) 

AS


    DECLARE @intReturnVal INT 
    SET @intReturnVal = 0
    DECLARE @strReturn  Varchar(200) 
    SET @intReturnVal = 0
    DECLARE @intRecordLevelAuditTrailID INT 
    DECLARE @intFieldLevelAuditTrailID INT 
    DECLARE @intTableID INT 
    SET @intTableID = 3629
 
  
        UPDATE [ORCID].[RecordLevelAuditType]
        SET
            [AuditType] = @AuditType
        FROM
            [ORCID].[RecordLevelAuditType]
        WHERE
        [ORCID].[RecordLevelAuditType].[RecordLevelAuditTypeID] = @RecordLevelAuditTypeID

        
        SET @intReturnVal = @@error
        IF @intReturnVal <> 0
        BEGIN
            RAISERROR (N'An error occurred while editing the RecordLevelAuditType record.', 11, 11); 
            RETURN @intReturnVal 
        END

GO

GRANT EXECUTE ON [ORCID].[cg2_RecordLevelAuditTypeEdit] TO App_Profiles10

GO

CREATE PROCEDURE [ORCID].[cg2_RecordLevelAuditTypeDelete]
 
    @RecordLevelAuditTypeID  INT 

 
AS
 
    DECLARE @intReturnVal INT 
    SET @intReturnVal = 0
 
 
        DELETE FROM [ORCID].[RecordLevelAuditType] WHERE         [ORCID].[RecordLevelAuditType].[RecordLevelAuditTypeID] = @RecordLevelAuditTypeID

 
        SET @intReturnVal = @@error
        IF @intReturnVal <> 0
        BEGIN
            RAISERROR (N'An error occurred while deleting the RecordLevelAuditType record.', 11, 11); 
            RETURN @intReturnVal 
        END
    RETURN @intReturnVal

GO

GRANT EXECUTE ON [ORCID].[cg2_RecordLevelAuditTypeDelete] TO App_Profiles10

GO

if exists (select * from dbo.sysobjects where id = object_id(N'[ORCID].[cg2_REFDecisionGet]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
    drop procedure [ORCID].[cg2_REFDecisionGet]

GO

CREATE PROCEDURE [ORCID].[cg2_REFDecisionGet]
 
    @DecisionID  INT 

AS
 
    SELECT TOP 100 PERCENT
        [ORCID].[REF_Decision].[DecisionID]
        , [ORCID].[REF_Decision].[DecisionDescription]
        , [ORCID].[REF_Decision].[DecisionDescriptionLong]
    FROM
        [ORCID].[REF_Decision]
    WHERE
        [ORCID].[REF_Decision].[DecisionID] = @DecisionID


GO

GRANT EXECUTE ON [ORCID].[cg2_REFDecisionGet] TO App_Profiles10

GO

CREATE PROCEDURE [ORCID].[cg2_REFDecisionsGet]
 
AS
 
    SELECT TOP 100 PERCENT
        [ORCID].[REF_Decision].[DecisionID]
        , [ORCID].[REF_Decision].[DecisionDescription]
        , [ORCID].[REF_Decision].[DecisionDescriptionLong]
    FROM
        [ORCID].[REF_Decision]

GO

GRANT EXECUTE ON [ORCID].[cg2_REFDecisionsGet] TO App_Profiles10

GO

 
CREATE PROCEDURE [ORCID].[cg2_REFDecisionAdd]

    @DecisionID  INT =NULL OUTPUT 
    , @DecisionDescription  VARCHAR(150) 
    , @DecisionDescriptionLong  VARCHAR(500) 

AS


    DECLARE @intReturnVal INT 
    SET @intReturnVal = 0
    DECLARE @strReturn  Varchar(200) 
    SET @intReturnVal = 0
    DECLARE @intRecordLevelAuditTrailID INT 
    DECLARE @intFieldLevelAuditTrailID INT 
    DECLARE @intTableID INT 
    SET @intTableID = 3730
 
  
        INSERT INTO [ORCID].[REF_Decision]
        (
            [DecisionDescription]
            , [DecisionDescriptionLong]
        )
        (
            SELECT
            @DecisionDescription
            , @DecisionDescriptionLong
        )
   
        SET @intReturnVal = @@error
        SET @DecisionID = @@IDENTITY
        IF @intReturnVal <> 0
        BEGIN
            RAISERROR (N'An error occurred while adding the REF_Decision record.', 11, 11); 
            RETURN @intReturnVal 
        END

GO

GRANT EXECUTE ON [ORCID].[cg2_REFDecisionAdd] TO App_Profiles10

GO

 
CREATE PROCEDURE [ORCID].[cg2_REFDecisionEdit]

    @DecisionID  INT =NULL OUTPUT 
    , @DecisionDescription  VARCHAR(150) 
    , @DecisionDescriptionLong  VARCHAR(500) 

AS


    DECLARE @intReturnVal INT 
    SET @intReturnVal = 0
    DECLARE @strReturn  Varchar(200) 
    SET @intReturnVal = 0
    DECLARE @intRecordLevelAuditTrailID INT 
    DECLARE @intFieldLevelAuditTrailID INT 
    DECLARE @intTableID INT 
    SET @intTableID = 3730
 
  
        UPDATE [ORCID].[REF_Decision]
        SET
            [DecisionDescription] = @DecisionDescription
            , [DecisionDescriptionLong] = @DecisionDescriptionLong
        FROM
            [ORCID].[REF_Decision]
        WHERE
        [ORCID].[REF_Decision].[DecisionID] = @DecisionID

        
        SET @intReturnVal = @@error
        IF @intReturnVal <> 0
        BEGIN
            RAISERROR (N'An error occurred while editing the REF_Decision record.', 11, 11); 
            RETURN @intReturnVal 
        END

GO

GRANT EXECUTE ON [ORCID].[cg2_REFDecisionEdit] TO App_Profiles10

GO

CREATE PROCEDURE [ORCID].[cg2_REFDecisionDelete]
 
    @DecisionID  INT 

 
AS
 
    DECLARE @intReturnVal INT 
    SET @intReturnVal = 0
 
 
        DELETE FROM [ORCID].[REF_Decision] WHERE         [ORCID].[REF_Decision].[DecisionID] = @DecisionID

 
        SET @intReturnVal = @@error
        IF @intReturnVal <> 0
        BEGIN
            RAISERROR (N'An error occurred while deleting the REF_Decision record.', 11, 11); 
            RETURN @intReturnVal 
        END
    RETURN @intReturnVal

GO

GRANT EXECUTE ON [ORCID].[cg2_REFDecisionDelete] TO App_Profiles10

GO

if exists (select * from dbo.sysobjects where id = object_id(N'[ORCID].[cg2_REFPermissionGetByPermissionScope]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
    drop procedure [ORCID].[cg2_REFPermissionGetByPermissionScope]

GO

CREATE PROCEDURE [ORCID].[cg2_REFPermissionGetByPermissionScope]
 
    @PermissionScope  VARCHAR(100) 

AS
 
    SELECT TOP 100 PERCENT
        [ORCID].[REF_Permission].[PermissionID]
        , [ORCID].[REF_Permission].[PermissionScope]
        , [ORCID].[REF_Permission].[PermissionDescription]
        , [ORCID].[REF_Permission].[MethodAndRequest]
        , [ORCID].[REF_Permission].[SuccessMessage]
        , [ORCID].[REF_Permission].[FailedMessage]
    FROM
        [ORCID].[REF_Permission]
    WHERE
        [ORCID].[REF_Permission].[PermissionScope] = @PermissionScope


GO

GRANT EXECUTE ON [ORCID].[cg2_REFPermissionGetByPermissionScope] TO App_Profiles10

GO

if exists (select * from dbo.sysobjects where id = object_id(N'[ORCID].[cg2_REFPermissionGet]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
    drop procedure [ORCID].[cg2_REFPermissionGet]

GO

CREATE PROCEDURE [ORCID].[cg2_REFPermissionGet]
 
    @PermissionID  INT 

AS
 
    SELECT TOP 100 PERCENT
        [ORCID].[REF_Permission].[PermissionID]
        , [ORCID].[REF_Permission].[PermissionScope]
        , [ORCID].[REF_Permission].[PermissionDescription]
        , [ORCID].[REF_Permission].[MethodAndRequest]
        , [ORCID].[REF_Permission].[SuccessMessage]
        , [ORCID].[REF_Permission].[FailedMessage]
    FROM
        [ORCID].[REF_Permission]
    WHERE
        [ORCID].[REF_Permission].[PermissionID] = @PermissionID


GO

GRANT EXECUTE ON [ORCID].[cg2_REFPermissionGet] TO App_Profiles10

GO

CREATE PROCEDURE [ORCID].[cg2_REFPermissionsGet]
 
AS
 
    SELECT TOP 100 PERCENT
        [ORCID].[REF_Permission].[PermissionID]
        , [ORCID].[REF_Permission].[PermissionScope]
        , [ORCID].[REF_Permission].[PermissionDescription]
        , [ORCID].[REF_Permission].[MethodAndRequest]
        , [ORCID].[REF_Permission].[SuccessMessage]
        , [ORCID].[REF_Permission].[FailedMessage]
    FROM
        [ORCID].[REF_Permission]

GO

GRANT EXECUTE ON [ORCID].[cg2_REFPermissionsGet] TO App_Profiles10

GO

 
CREATE PROCEDURE [ORCID].[cg2_REFPermissionAdd]

    @PermissionID  INT =NULL OUTPUT 
    , @PermissionScope  VARCHAR(100) 
    , @PermissionDescription  VARCHAR(500) 
    , @MethodAndRequest  VARCHAR(100) =NULL
    , @SuccessMessage  VARCHAR(1000) =NULL
    , @FailedMessage  VARCHAR(1000) =NULL

AS


    DECLARE @intReturnVal INT 
    SET @intReturnVal = 0
    DECLARE @strReturn  Varchar(200) 
    SET @intReturnVal = 0
    DECLARE @intRecordLevelAuditTrailID INT 
    DECLARE @intFieldLevelAuditTrailID INT 
    DECLARE @intTableID INT 
    SET @intTableID = 3722
 
  
        INSERT INTO [ORCID].[REF_Permission]
        (
            [PermissionScope]
            , [PermissionDescription]
            , [MethodAndRequest]
            , [SuccessMessage]
            , [FailedMessage]
        )
        (
            SELECT
            @PermissionScope
            , @PermissionDescription
            , @MethodAndRequest
            , @SuccessMessage
            , @FailedMessage
        )
   
        SET @intReturnVal = @@error
        SET @PermissionID = @@IDENTITY
        IF @intReturnVal <> 0
        BEGIN
            RAISERROR (N'An error occurred while adding the REF_Permission record.', 11, 11); 
            RETURN @intReturnVal 
        END

GO

GRANT EXECUTE ON [ORCID].[cg2_REFPermissionAdd] TO App_Profiles10

GO

 
CREATE PROCEDURE [ORCID].[cg2_REFPermissionEdit]

    @PermissionID  INT =NULL OUTPUT 
    , @PermissionScope  VARCHAR(100) 
    , @PermissionDescription  VARCHAR(500) 
    , @MethodAndRequest  VARCHAR(100) =NULL
    , @SuccessMessage  VARCHAR(1000) =NULL
    , @FailedMessage  VARCHAR(1000) =NULL

AS


    DECLARE @intReturnVal INT 
    SET @intReturnVal = 0
    DECLARE @strReturn  Varchar(200) 
    SET @intReturnVal = 0
    DECLARE @intRecordLevelAuditTrailID INT 
    DECLARE @intFieldLevelAuditTrailID INT 
    DECLARE @intTableID INT 
    SET @intTableID = 3722
 
  
        UPDATE [ORCID].[REF_Permission]
        SET
            [PermissionScope] = @PermissionScope
            , [PermissionDescription] = @PermissionDescription
            , [MethodAndRequest] = @MethodAndRequest
            , [SuccessMessage] = @SuccessMessage
            , [FailedMessage] = @FailedMessage
        FROM
            [ORCID].[REF_Permission]
        WHERE
        [ORCID].[REF_Permission].[PermissionID] = @PermissionID

        
        SET @intReturnVal = @@error
        IF @intReturnVal <> 0
        BEGIN
            RAISERROR (N'An error occurred while editing the REF_Permission record.', 11, 11); 
            RETURN @intReturnVal 
        END

GO

GRANT EXECUTE ON [ORCID].[cg2_REFPermissionEdit] TO App_Profiles10

GO

CREATE PROCEDURE [ORCID].[cg2_REFPermissionDelete]
 
    @PermissionID  INT 

 
AS
 
    DECLARE @intReturnVal INT 
    SET @intReturnVal = 0
 
 
        DELETE FROM [ORCID].[REF_Permission] WHERE         [ORCID].[REF_Permission].[PermissionID] = @PermissionID

 
        SET @intReturnVal = @@error
        IF @intReturnVal <> 0
        BEGIN
            RAISERROR (N'An error occurred while deleting the REF_Permission record.', 11, 11); 
            RETURN @intReturnVal 
        END
    RETURN @intReturnVal

GO

GRANT EXECUTE ON [ORCID].[cg2_REFPermissionDelete] TO App_Profiles10

GO

if exists (select * from dbo.sysobjects where id = object_id(N'[RDF.].[cg2_TripleGetByPredicateAndViewSecurityGroupAndWeightAndSubjectAndObject]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
    drop procedure [RDF.].[cg2_TripleGetByPredicateAndViewSecurityGroupAndWeightAndSubjectAndObject]

GO

CREATE PROCEDURE [RDF.].[cg2_TripleGetByPredicateAndViewSecurityGroupAndWeightAndSubjectAndObject]
 
    @Predicate  BIGINT 
    , @ViewSecurityGroup  BIGINT 
    , @Weight  REAL 
    , @Subject  BIGINT 
    , @Object  BIGINT 

AS
 
    SELECT TOP 100 PERCENT
        [RDF.].[Triple].[TripleID]
        , [RDF.].[Triple].[Subject]
        , [RDF.].[Triple].[Predicate]
        , [RDF.].[Triple].[Object]
        , [RDF.].[Triple].[TripleHash]
        , [RDF.].[Triple].[Weight]
        , [RDF.].[Triple].[Reitification]
        , [RDF.].[Triple].[ObjectType]
        , [RDF.].[Triple].[SortOrder]
        , [RDF.].[Triple].[ViewSecurityGroup]
        , [RDF.].[Triple].[Graph]
    FROM
        [RDF.].[Triple]
    WHERE
        [RDF.].[Triple].[Predicate] = @Predicate
        AND [RDF.].[Triple].[ViewSecurityGroup] = @ViewSecurityGroup
        AND [RDF.].[Triple].[Weight] = @Weight
        AND [RDF.].[Triple].[Subject] = @Subject
        AND [RDF.].[Triple].[Object] = @Object


GO

GRANT EXECUTE ON [RDF.].[cg2_TripleGetByPredicateAndViewSecurityGroupAndWeightAndSubjectAndObject] TO App_Profiles10

GO

if exists (select * from dbo.sysobjects where id = object_id(N'[RDF.].[cg2_TripleGetByPredicateAndViewSecurityGroupAndWeightAndSubjectAndObject]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
    drop procedure [RDF.].[cg2_TripleGetByPredicateAndViewSecurityGroupAndWeightAndSubjectAndObject]

GO

CREATE PROCEDURE [RDF.].[cg2_TripleGetByPredicateAndViewSecurityGroupAndWeightAndSubjectAndObject]
 
    @Predicate  BIGINT 
    , @ViewSecurityGroup  BIGINT 
    , @Weight  REAL 
    , @Subject  BIGINT 
    , @Object  BIGINT 

AS
 
    SELECT TOP 100 PERCENT
        [RDF.].[Triple].[TripleID]
        , [RDF.].[Triple].[Subject]
        , [RDF.].[Triple].[Predicate]
        , [RDF.].[Triple].[Object]
        , [RDF.].[Triple].[TripleHash]
        , [RDF.].[Triple].[Weight]
        , [RDF.].[Triple].[Reitification]
        , [RDF.].[Triple].[ObjectType]
        , [RDF.].[Triple].[SortOrder]
        , [RDF.].[Triple].[ViewSecurityGroup]
        , [RDF.].[Triple].[Graph]
    FROM
        [RDF.].[Triple]
    WHERE
        [RDF.].[Triple].[Predicate] = @Predicate
        AND [RDF.].[Triple].[ViewSecurityGroup] = @ViewSecurityGroup
        AND [RDF.].[Triple].[Weight] = @Weight
        AND [RDF.].[Triple].[Subject] = @Subject
        AND [RDF.].[Triple].[Object] = @Object


GO

GRANT EXECUTE ON [RDF.].[cg2_TripleGetByPredicateAndViewSecurityGroupAndWeightAndSubjectAndObject] TO App_Profiles10

GO

if exists (select * from dbo.sysobjects where id = object_id(N'[RDF.].[cg2_TripleGetByPredicateAndViewSecurityGroupAndWeightAndSubjectAndObject]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
    drop procedure [RDF.].[cg2_TripleGetByPredicateAndViewSecurityGroupAndWeightAndSubjectAndObject]

GO

CREATE PROCEDURE [RDF.].[cg2_TripleGetByPredicateAndViewSecurityGroupAndWeightAndSubjectAndObject]
 
    @Predicate  BIGINT 
    , @ViewSecurityGroup  BIGINT 
    , @Weight  REAL 
    , @Subject  BIGINT 
    , @Object  BIGINT 

AS
 
    SELECT TOP 100 PERCENT
        [RDF.].[Triple].[TripleID]
        , [RDF.].[Triple].[Subject]
        , [RDF.].[Triple].[Predicate]
        , [RDF.].[Triple].[Object]
        , [RDF.].[Triple].[TripleHash]
        , [RDF.].[Triple].[Weight]
        , [RDF.].[Triple].[Reitification]
        , [RDF.].[Triple].[ObjectType]
        , [RDF.].[Triple].[SortOrder]
        , [RDF.].[Triple].[ViewSecurityGroup]
        , [RDF.].[Triple].[Graph]
    FROM
        [RDF.].[Triple]
    WHERE
        [RDF.].[Triple].[Predicate] = @Predicate
        AND [RDF.].[Triple].[ViewSecurityGroup] = @ViewSecurityGroup
        AND [RDF.].[Triple].[Weight] = @Weight
        AND [RDF.].[Triple].[Subject] = @Subject
        AND [RDF.].[Triple].[Object] = @Object


GO

GRANT EXECUTE ON [RDF.].[cg2_TripleGetByPredicateAndViewSecurityGroupAndWeightAndSubjectAndObject] TO App_Profiles10

GO

if exists (select * from dbo.sysobjects where id = object_id(N'[RDF.].[cg2_TripleGetByPredicateAndViewSecurityGroupAndWeightAndSubjectAndObject]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
    drop procedure [RDF.].[cg2_TripleGetByPredicateAndViewSecurityGroupAndWeightAndSubjectAndObject]

GO

CREATE PROCEDURE [RDF.].[cg2_TripleGetByPredicateAndViewSecurityGroupAndWeightAndSubjectAndObject]
 
    @Predicate  BIGINT 
    , @ViewSecurityGroup  BIGINT 
    , @Weight  REAL 
    , @Subject  BIGINT 
    , @Object  BIGINT 

AS
 
    SELECT TOP 100 PERCENT
        [RDF.].[Triple].[TripleID]
        , [RDF.].[Triple].[Subject]
        , [RDF.].[Triple].[Predicate]
        , [RDF.].[Triple].[Object]
        , [RDF.].[Triple].[TripleHash]
        , [RDF.].[Triple].[Weight]
        , [RDF.].[Triple].[Reitification]
        , [RDF.].[Triple].[ObjectType]
        , [RDF.].[Triple].[SortOrder]
        , [RDF.].[Triple].[ViewSecurityGroup]
        , [RDF.].[Triple].[Graph]
    FROM
        [RDF.].[Triple]
    WHERE
        [RDF.].[Triple].[Predicate] = @Predicate
        AND [RDF.].[Triple].[ViewSecurityGroup] = @ViewSecurityGroup
        AND [RDF.].[Triple].[Weight] = @Weight
        AND [RDF.].[Triple].[Subject] = @Subject
        AND [RDF.].[Triple].[Object] = @Object


GO

GRANT EXECUTE ON [RDF.].[cg2_TripleGetByPredicateAndViewSecurityGroupAndWeightAndSubjectAndObject] TO App_Profiles10

GO

if exists (select * from dbo.sysobjects where id = object_id(N'[RDF.].[cg2_TripleGetByPredicateAndViewSecurityGroupAndWeightAndSubjectAndObject]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
    drop procedure [RDF.].[cg2_TripleGetByPredicateAndViewSecurityGroupAndWeightAndSubjectAndObject]

GO

CREATE PROCEDURE [RDF.].[cg2_TripleGetByPredicateAndViewSecurityGroupAndWeightAndSubjectAndObject]
 
    @Predicate  BIGINT 
    , @ViewSecurityGroup  BIGINT 
    , @Weight  REAL 
    , @Subject  BIGINT 
    , @Object  BIGINT 

AS
 
    SELECT TOP 100 PERCENT
        [RDF.].[Triple].[TripleID]
        , [RDF.].[Triple].[Subject]
        , [RDF.].[Triple].[Predicate]
        , [RDF.].[Triple].[Object]
        , [RDF.].[Triple].[TripleHash]
        , [RDF.].[Triple].[Weight]
        , [RDF.].[Triple].[Reitification]
        , [RDF.].[Triple].[ObjectType]
        , [RDF.].[Triple].[SortOrder]
        , [RDF.].[Triple].[ViewSecurityGroup]
        , [RDF.].[Triple].[Graph]
    FROM
        [RDF.].[Triple]
    WHERE
        [RDF.].[Triple].[Predicate] = @Predicate
        AND [RDF.].[Triple].[ViewSecurityGroup] = @ViewSecurityGroup
        AND [RDF.].[Triple].[Weight] = @Weight
        AND [RDF.].[Triple].[Subject] = @Subject
        AND [RDF.].[Triple].[Object] = @Object


GO

GRANT EXECUTE ON [RDF.].[cg2_TripleGetByPredicateAndViewSecurityGroupAndWeightAndSubjectAndObject] TO App_Profiles10

GO

if exists (select * from dbo.sysobjects where id = object_id(N'[RDF.].[cg2_TripleGetByPredicateAndObjectAndSubject]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
    drop procedure [RDF.].[cg2_TripleGetByPredicateAndObjectAndSubject]

GO

CREATE PROCEDURE [RDF.].[cg2_TripleGetByPredicateAndObjectAndSubject]
 
    @Predicate  BIGINT 
    , @Object  BIGINT 
    , @Subject  BIGINT 

AS
 
    SELECT TOP 100 PERCENT
        [RDF.].[Triple].[TripleID]
        , [RDF.].[Triple].[Subject]
        , [RDF.].[Triple].[Predicate]
        , [RDF.].[Triple].[Object]
        , [RDF.].[Triple].[TripleHash]
        , [RDF.].[Triple].[Weight]
        , [RDF.].[Triple].[Reitification]
        , [RDF.].[Triple].[ObjectType]
        , [RDF.].[Triple].[SortOrder]
        , [RDF.].[Triple].[ViewSecurityGroup]
        , [RDF.].[Triple].[Graph]
    FROM
        [RDF.].[Triple]
    WHERE
        [RDF.].[Triple].[Predicate] = @Predicate
        AND [RDF.].[Triple].[Object] = @Object
        AND [RDF.].[Triple].[Subject] = @Subject


GO

GRANT EXECUTE ON [RDF.].[cg2_TripleGetByPredicateAndObjectAndSubject] TO App_Profiles10

GO

if exists (select * from dbo.sysobjects where id = object_id(N'[RDF.].[cg2_TripleGetByPredicateAndObjectAndSubject]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
    drop procedure [RDF.].[cg2_TripleGetByPredicateAndObjectAndSubject]

GO

CREATE PROCEDURE [RDF.].[cg2_TripleGetByPredicateAndObjectAndSubject]
 
    @Predicate  BIGINT 
    , @Object  BIGINT 
    , @Subject  BIGINT 

AS
 
    SELECT TOP 100 PERCENT
        [RDF.].[Triple].[TripleID]
        , [RDF.].[Triple].[Subject]
        , [RDF.].[Triple].[Predicate]
        , [RDF.].[Triple].[Object]
        , [RDF.].[Triple].[TripleHash]
        , [RDF.].[Triple].[Weight]
        , [RDF.].[Triple].[Reitification]
        , [RDF.].[Triple].[ObjectType]
        , [RDF.].[Triple].[SortOrder]
        , [RDF.].[Triple].[ViewSecurityGroup]
        , [RDF.].[Triple].[Graph]
    FROM
        [RDF.].[Triple]
    WHERE
        [RDF.].[Triple].[Predicate] = @Predicate
        AND [RDF.].[Triple].[Object] = @Object
        AND [RDF.].[Triple].[Subject] = @Subject


GO

GRANT EXECUTE ON [RDF.].[cg2_TripleGetByPredicateAndObjectAndSubject] TO App_Profiles10

GO

if exists (select * from dbo.sysobjects where id = object_id(N'[RDF.].[cg2_TripleGetByPredicateAndObjectAndSubject]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
    drop procedure [RDF.].[cg2_TripleGetByPredicateAndObjectAndSubject]

GO

CREATE PROCEDURE [RDF.].[cg2_TripleGetByPredicateAndObjectAndSubject]
 
    @Predicate  BIGINT 
    , @Object  BIGINT 
    , @Subject  BIGINT 

AS
 
    SELECT TOP 100 PERCENT
        [RDF.].[Triple].[TripleID]
        , [RDF.].[Triple].[Subject]
        , [RDF.].[Triple].[Predicate]
        , [RDF.].[Triple].[Object]
        , [RDF.].[Triple].[TripleHash]
        , [RDF.].[Triple].[Weight]
        , [RDF.].[Triple].[Reitification]
        , [RDF.].[Triple].[ObjectType]
        , [RDF.].[Triple].[SortOrder]
        , [RDF.].[Triple].[ViewSecurityGroup]
        , [RDF.].[Triple].[Graph]
    FROM
        [RDF.].[Triple]
    WHERE
        [RDF.].[Triple].[Predicate] = @Predicate
        AND [RDF.].[Triple].[Object] = @Object
        AND [RDF.].[Triple].[Subject] = @Subject


GO

GRANT EXECUTE ON [RDF.].[cg2_TripleGetByPredicateAndObjectAndSubject] TO App_Profiles10

GO

if exists (select * from dbo.sysobjects where id = object_id(N'[RDF.].[cg2_TripleGetByReitification]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
    drop procedure [RDF.].[cg2_TripleGetByReitification]

GO

CREATE PROCEDURE [RDF.].[cg2_TripleGetByReitification]
 
    @Reitification  BIGINT 

AS
 
    SELECT TOP 100 PERCENT
        [RDF.].[Triple].[TripleID]
        , [RDF.].[Triple].[Subject]
        , [RDF.].[Triple].[Predicate]
        , [RDF.].[Triple].[Object]
        , [RDF.].[Triple].[TripleHash]
        , [RDF.].[Triple].[Weight]
        , [RDF.].[Triple].[Reitification]
        , [RDF.].[Triple].[ObjectType]
        , [RDF.].[Triple].[SortOrder]
        , [RDF.].[Triple].[ViewSecurityGroup]
        , [RDF.].[Triple].[Graph]
    FROM
        [RDF.].[Triple]
    WHERE
        [RDF.].[Triple].[Reitification] = @Reitification


GO

GRANT EXECUTE ON [RDF.].[cg2_TripleGetByReitification] TO App_Profiles10

GO

if exists (select * from dbo.sysobjects where id = object_id(N'[RDF.].[cg2_TripleGetBySubjectAndPredicateAndObject]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
    drop procedure [RDF.].[cg2_TripleGetBySubjectAndPredicateAndObject]

GO

CREATE PROCEDURE [RDF.].[cg2_TripleGetBySubjectAndPredicateAndObject]
 
    @Subject  BIGINT 
    , @Predicate  BIGINT 
    , @Object  BIGINT 

AS
 
    SELECT TOP 100 PERCENT
        [RDF.].[Triple].[TripleID]
        , [RDF.].[Triple].[Subject]
        , [RDF.].[Triple].[Predicate]
        , [RDF.].[Triple].[Object]
        , [RDF.].[Triple].[TripleHash]
        , [RDF.].[Triple].[Weight]
        , [RDF.].[Triple].[Reitification]
        , [RDF.].[Triple].[ObjectType]
        , [RDF.].[Triple].[SortOrder]
        , [RDF.].[Triple].[ViewSecurityGroup]
        , [RDF.].[Triple].[Graph]
    FROM
        [RDF.].[Triple]
    WHERE
        [RDF.].[Triple].[Subject] = @Subject
        AND [RDF.].[Triple].[Predicate] = @Predicate
        AND [RDF.].[Triple].[Object] = @Object


GO

GRANT EXECUTE ON [RDF.].[cg2_TripleGetBySubjectAndPredicateAndObject] TO App_Profiles10

GO

if exists (select * from dbo.sysobjects where id = object_id(N'[RDF.].[cg2_TripleGetBySubjectAndPredicateAndObject]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
    drop procedure [RDF.].[cg2_TripleGetBySubjectAndPredicateAndObject]

GO

CREATE PROCEDURE [RDF.].[cg2_TripleGetBySubjectAndPredicateAndObject]
 
    @Subject  BIGINT 
    , @Predicate  BIGINT 
    , @Object  BIGINT 

AS
 
    SELECT TOP 100 PERCENT
        [RDF.].[Triple].[TripleID]
        , [RDF.].[Triple].[Subject]
        , [RDF.].[Triple].[Predicate]
        , [RDF.].[Triple].[Object]
        , [RDF.].[Triple].[TripleHash]
        , [RDF.].[Triple].[Weight]
        , [RDF.].[Triple].[Reitification]
        , [RDF.].[Triple].[ObjectType]
        , [RDF.].[Triple].[SortOrder]
        , [RDF.].[Triple].[ViewSecurityGroup]
        , [RDF.].[Triple].[Graph]
    FROM
        [RDF.].[Triple]
    WHERE
        [RDF.].[Triple].[Subject] = @Subject
        AND [RDF.].[Triple].[Predicate] = @Predicate
        AND [RDF.].[Triple].[Object] = @Object


GO

GRANT EXECUTE ON [RDF.].[cg2_TripleGetBySubjectAndPredicateAndObject] TO App_Profiles10

GO

if exists (select * from dbo.sysobjects where id = object_id(N'[RDF.].[cg2_TripleGetBySubjectAndPredicateAndObject]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
    drop procedure [RDF.].[cg2_TripleGetBySubjectAndPredicateAndObject]

GO

CREATE PROCEDURE [RDF.].[cg2_TripleGetBySubjectAndPredicateAndObject]
 
    @Subject  BIGINT 
    , @Predicate  BIGINT 
    , @Object  BIGINT 

AS
 
    SELECT TOP 100 PERCENT
        [RDF.].[Triple].[TripleID]
        , [RDF.].[Triple].[Subject]
        , [RDF.].[Triple].[Predicate]
        , [RDF.].[Triple].[Object]
        , [RDF.].[Triple].[TripleHash]
        , [RDF.].[Triple].[Weight]
        , [RDF.].[Triple].[Reitification]
        , [RDF.].[Triple].[ObjectType]
        , [RDF.].[Triple].[SortOrder]
        , [RDF.].[Triple].[ViewSecurityGroup]
        , [RDF.].[Triple].[Graph]
    FROM
        [RDF.].[Triple]
    WHERE
        [RDF.].[Triple].[Subject] = @Subject
        AND [RDF.].[Triple].[Predicate] = @Predicate
        AND [RDF.].[Triple].[Object] = @Object


GO

GRANT EXECUTE ON [RDF.].[cg2_TripleGetBySubjectAndPredicateAndObject] TO App_Profiles10

GO

if exists (select * from dbo.sysobjects where id = object_id(N'[RDF.].[cg2_TripleGetByPredicate]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
    drop procedure [RDF.].[cg2_TripleGetByPredicate]

GO

CREATE PROCEDURE [RDF.].[cg2_TripleGetByPredicate]
 
    @Predicate  BIGINT 

AS
 
    SELECT TOP 100 PERCENT
        [RDF.].[Triple].[TripleID]
        , [RDF.].[Triple].[Subject]
        , [RDF.].[Triple].[Predicate]
        , [RDF.].[Triple].[Object]
        , [RDF.].[Triple].[TripleHash]
        , [RDF.].[Triple].[Weight]
        , [RDF.].[Triple].[Reitification]
        , [RDF.].[Triple].[ObjectType]
        , [RDF.].[Triple].[SortOrder]
        , [RDF.].[Triple].[ViewSecurityGroup]
        , [RDF.].[Triple].[Graph]
    FROM
        [RDF.].[Triple]
    WHERE
        [RDF.].[Triple].[Predicate] = @Predicate


GO

GRANT EXECUTE ON [RDF.].[cg2_TripleGetByPredicate] TO App_Profiles10

GO

if exists (select * from dbo.sysobjects where id = object_id(N'[RDF.].[cg2_TripleGetByTripleHash]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
    drop procedure [RDF.].[cg2_TripleGetByTripleHash]

GO

CREATE PROCEDURE [RDF.].[cg2_TripleGetByTripleHash]
 
    @TripleHash  BINARY(20) 

AS
 
    SELECT TOP 100 PERCENT
        [RDF.].[Triple].[TripleID]
        , [RDF.].[Triple].[Subject]
        , [RDF.].[Triple].[Predicate]
        , [RDF.].[Triple].[Object]
        , [RDF.].[Triple].[TripleHash]
        , [RDF.].[Triple].[Weight]
        , [RDF.].[Triple].[Reitification]
        , [RDF.].[Triple].[ObjectType]
        , [RDF.].[Triple].[SortOrder]
        , [RDF.].[Triple].[ViewSecurityGroup]
        , [RDF.].[Triple].[Graph]
    FROM
        [RDF.].[Triple]
    WHERE
        [RDF.].[Triple].[TripleHash] = @TripleHash


GO

GRANT EXECUTE ON [RDF.].[cg2_TripleGetByTripleHash] TO App_Profiles10

GO

if exists (select * from dbo.sysobjects where id = object_id(N'[RDF.].[cg2_TripleGetByObjectAndSubjectAndPredicateAndReitification]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
    drop procedure [RDF.].[cg2_TripleGetByObjectAndSubjectAndPredicateAndReitification]

GO

CREATE PROCEDURE [RDF.].[cg2_TripleGetByObjectAndSubjectAndPredicateAndReitification]
 
    @Object  BIGINT 
    , @Subject  BIGINT 
    , @Predicate  BIGINT 
    , @Reitification  BIGINT 

AS
 
    SELECT TOP 100 PERCENT
        [RDF.].[Triple].[TripleID]
        , [RDF.].[Triple].[Subject]
        , [RDF.].[Triple].[Predicate]
        , [RDF.].[Triple].[Object]
        , [RDF.].[Triple].[TripleHash]
        , [RDF.].[Triple].[Weight]
        , [RDF.].[Triple].[Reitification]
        , [RDF.].[Triple].[ObjectType]
        , [RDF.].[Triple].[SortOrder]
        , [RDF.].[Triple].[ViewSecurityGroup]
        , [RDF.].[Triple].[Graph]
    FROM
        [RDF.].[Triple]
    WHERE
        [RDF.].[Triple].[Object] = @Object
        AND [RDF.].[Triple].[Subject] = @Subject
        AND [RDF.].[Triple].[Predicate] = @Predicate
        AND [RDF.].[Triple].[Reitification] = @Reitification


GO

GRANT EXECUTE ON [RDF.].[cg2_TripleGetByObjectAndSubjectAndPredicateAndReitification] TO App_Profiles10

GO

if exists (select * from dbo.sysobjects where id = object_id(N'[RDF.].[cg2_TripleGetByObjectAndSubjectAndPredicateAndReitification]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
    drop procedure [RDF.].[cg2_TripleGetByObjectAndSubjectAndPredicateAndReitification]

GO

CREATE PROCEDURE [RDF.].[cg2_TripleGetByObjectAndSubjectAndPredicateAndReitification]
 
    @Object  BIGINT 
    , @Subject  BIGINT 
    , @Predicate  BIGINT 
    , @Reitification  BIGINT 

AS
 
    SELECT TOP 100 PERCENT
        [RDF.].[Triple].[TripleID]
        , [RDF.].[Triple].[Subject]
        , [RDF.].[Triple].[Predicate]
        , [RDF.].[Triple].[Object]
        , [RDF.].[Triple].[TripleHash]
        , [RDF.].[Triple].[Weight]
        , [RDF.].[Triple].[Reitification]
        , [RDF.].[Triple].[ObjectType]
        , [RDF.].[Triple].[SortOrder]
        , [RDF.].[Triple].[ViewSecurityGroup]
        , [RDF.].[Triple].[Graph]
    FROM
        [RDF.].[Triple]
    WHERE
        [RDF.].[Triple].[Object] = @Object
        AND [RDF.].[Triple].[Subject] = @Subject
        AND [RDF.].[Triple].[Predicate] = @Predicate
        AND [RDF.].[Triple].[Reitification] = @Reitification


GO

GRANT EXECUTE ON [RDF.].[cg2_TripleGetByObjectAndSubjectAndPredicateAndReitification] TO App_Profiles10

GO

if exists (select * from dbo.sysobjects where id = object_id(N'[RDF.].[cg2_TripleGetByObjectAndSubjectAndPredicateAndReitification]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
    drop procedure [RDF.].[cg2_TripleGetByObjectAndSubjectAndPredicateAndReitification]

GO

CREATE PROCEDURE [RDF.].[cg2_TripleGetByObjectAndSubjectAndPredicateAndReitification]
 
    @Object  BIGINT 
    , @Subject  BIGINT 
    , @Predicate  BIGINT 
    , @Reitification  BIGINT 

AS
 
    SELECT TOP 100 PERCENT
        [RDF.].[Triple].[TripleID]
        , [RDF.].[Triple].[Subject]
        , [RDF.].[Triple].[Predicate]
        , [RDF.].[Triple].[Object]
        , [RDF.].[Triple].[TripleHash]
        , [RDF.].[Triple].[Weight]
        , [RDF.].[Triple].[Reitification]
        , [RDF.].[Triple].[ObjectType]
        , [RDF.].[Triple].[SortOrder]
        , [RDF.].[Triple].[ViewSecurityGroup]
        , [RDF.].[Triple].[Graph]
    FROM
        [RDF.].[Triple]
    WHERE
        [RDF.].[Triple].[Object] = @Object
        AND [RDF.].[Triple].[Subject] = @Subject
        AND [RDF.].[Triple].[Predicate] = @Predicate
        AND [RDF.].[Triple].[Reitification] = @Reitification


GO

GRANT EXECUTE ON [RDF.].[cg2_TripleGetByObjectAndSubjectAndPredicateAndReitification] TO App_Profiles10

GO

if exists (select * from dbo.sysobjects where id = object_id(N'[RDF.].[cg2_TripleGetByObjectAndSubjectAndPredicateAndReitification]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
    drop procedure [RDF.].[cg2_TripleGetByObjectAndSubjectAndPredicateAndReitification]

GO

CREATE PROCEDURE [RDF.].[cg2_TripleGetByObjectAndSubjectAndPredicateAndReitification]
 
    @Object  BIGINT 
    , @Subject  BIGINT 
    , @Predicate  BIGINT 
    , @Reitification  BIGINT 

AS
 
    SELECT TOP 100 PERCENT
        [RDF.].[Triple].[TripleID]
        , [RDF.].[Triple].[Subject]
        , [RDF.].[Triple].[Predicate]
        , [RDF.].[Triple].[Object]
        , [RDF.].[Triple].[TripleHash]
        , [RDF.].[Triple].[Weight]
        , [RDF.].[Triple].[Reitification]
        , [RDF.].[Triple].[ObjectType]
        , [RDF.].[Triple].[SortOrder]
        , [RDF.].[Triple].[ViewSecurityGroup]
        , [RDF.].[Triple].[Graph]
    FROM
        [RDF.].[Triple]
    WHERE
        [RDF.].[Triple].[Object] = @Object
        AND [RDF.].[Triple].[Subject] = @Subject
        AND [RDF.].[Triple].[Predicate] = @Predicate
        AND [RDF.].[Triple].[Reitification] = @Reitification


GO

GRANT EXECUTE ON [RDF.].[cg2_TripleGetByObjectAndSubjectAndPredicateAndReitification] TO App_Profiles10

GO

if exists (select * from dbo.sysobjects where id = object_id(N'[RDF.].[cg2_TripleGetBySubject]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
    drop procedure [RDF.].[cg2_TripleGetBySubject]

GO

CREATE PROCEDURE [RDF.].[cg2_TripleGetBySubject]
 
    @Subject  BIGINT 

AS
 
    SELECT TOP 100 PERCENT
        [RDF.].[Triple].[TripleID]
        , [RDF.].[Triple].[Subject]
        , [RDF.].[Triple].[Predicate]
        , [RDF.].[Triple].[Object]
        , [RDF.].[Triple].[TripleHash]
        , [RDF.].[Triple].[Weight]
        , [RDF.].[Triple].[Reitification]
        , [RDF.].[Triple].[ObjectType]
        , [RDF.].[Triple].[SortOrder]
        , [RDF.].[Triple].[ViewSecurityGroup]
        , [RDF.].[Triple].[Graph]
    FROM
        [RDF.].[Triple]
    WHERE
        [RDF.].[Triple].[Subject] = @Subject


GO

GRANT EXECUTE ON [RDF.].[cg2_TripleGetBySubject] TO App_Profiles10

GO

if exists (select * from dbo.sysobjects where id = object_id(N'[RDF.].[cg2_TripleGet]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
    drop procedure [RDF.].[cg2_TripleGet]

GO

CREATE PROCEDURE [RDF.].[cg2_TripleGet]
 
    @TripleID  BIGINT 

AS
 
    SELECT TOP 100 PERCENT
        [RDF.].[Triple].[TripleID]
        , [RDF.].[Triple].[Subject]
        , [RDF.].[Triple].[Predicate]
        , [RDF.].[Triple].[Object]
        , [RDF.].[Triple].[TripleHash]
        , [RDF.].[Triple].[Weight]
        , [RDF.].[Triple].[Reitification]
        , [RDF.].[Triple].[ObjectType]
        , [RDF.].[Triple].[SortOrder]
        , [RDF.].[Triple].[ViewSecurityGroup]
        , [RDF.].[Triple].[Graph]
    FROM
        [RDF.].[Triple]
    WHERE
        [RDF.].[Triple].[TripleID] = @TripleID


GO

GRANT EXECUTE ON [RDF.].[cg2_TripleGet] TO App_Profiles10

GO

CREATE PROCEDURE [RDF.].[cg2_TriplesGet]
 
AS
 
    SELECT TOP 100 PERCENT
        [RDF.].[Triple].[TripleID]
        , [RDF.].[Triple].[Subject]
        , [RDF.].[Triple].[Predicate]
        , [RDF.].[Triple].[Object]
        , [RDF.].[Triple].[TripleHash]
        , [RDF.].[Triple].[Weight]
        , [RDF.].[Triple].[Reitification]
        , [RDF.].[Triple].[ObjectType]
        , [RDF.].[Triple].[SortOrder]
        , [RDF.].[Triple].[ViewSecurityGroup]
        , [RDF.].[Triple].[Graph]
    FROM
        [RDF.].[Triple]

GO

GRANT EXECUTE ON [RDF.].[cg2_TriplesGet] TO App_Profiles10

GO

 
CREATE PROCEDURE [RDF.].[cg2_TripleAdd]

    @TripleID  BIGINT =NULL OUTPUT 
    , @Subject  BIGINT 
    , @Predicate  BIGINT 
    , @Object  BIGINT 
    , @TripleHash  BINARY(20) 
    , @Weight  REAL 
    , @Reitification  BIGINT =NULL
    , @ObjectType  BIT =NULL
    , @SortOrder  INT =NULL
    , @ViewSecurityGroup  BIGINT =NULL
    , @Graph  BIGINT =NULL

AS


    DECLARE @intReturnVal INT 
    SET @intReturnVal = 0
    DECLARE @strReturn  Varchar(200) 
    SET @intReturnVal = 0
    DECLARE @intRecordLevelAuditTrailID INT 
    DECLARE @intFieldLevelAuditTrailID INT 
    DECLARE @intTableID INT 
    SET @intTableID = 3676
 
  
        INSERT INTO [RDF.].[Triple]
        (
            [Subject]
            , [Predicate]
            , [Object]
            , [TripleHash]
            , [Weight]
            , [Reitification]
            , [ObjectType]
            , [SortOrder]
            , [ViewSecurityGroup]
            , [Graph]
        )
        (
            SELECT
            @Subject
            , @Predicate
            , @Object
            , @TripleHash
            , @Weight
            , @Reitification
            , @ObjectType
            , @SortOrder
            , @ViewSecurityGroup
            , @Graph
        )
   
        SET @intReturnVal = @@error
        SET @TripleID = @@IDENTITY
        IF @intReturnVal <> 0
        BEGIN
            RAISERROR (N'An error occurred while adding the Triple record.', 11, 11); 
            RETURN @intReturnVal 
        END

GO

GRANT EXECUTE ON [RDF.].[cg2_TripleAdd] TO App_Profiles10

GO

 
CREATE PROCEDURE [RDF.].[cg2_TripleEdit]

    @TripleID  BIGINT =NULL OUTPUT 
    , @Subject  BIGINT 
    , @Predicate  BIGINT 
    , @Object  BIGINT 
    , @TripleHash  BINARY(20) 
    , @Weight  REAL 
    , @Reitification  BIGINT =NULL
    , @ObjectType  BIT =NULL
    , @SortOrder  INT =NULL
    , @ViewSecurityGroup  BIGINT =NULL
    , @Graph  BIGINT =NULL

AS


    DECLARE @intReturnVal INT 
    SET @intReturnVal = 0
    DECLARE @strReturn  Varchar(200) 
    SET @intReturnVal = 0
    DECLARE @intRecordLevelAuditTrailID INT 
    DECLARE @intFieldLevelAuditTrailID INT 
    DECLARE @intTableID INT 
    SET @intTableID = 3676
 
  
        UPDATE [RDF.].[Triple]
        SET
            [Subject] = @Subject
            , [Predicate] = @Predicate
            , [Object] = @Object
            , [TripleHash] = @TripleHash
            , [Weight] = @Weight
            , [Reitification] = @Reitification
            , [ObjectType] = @ObjectType
            , [SortOrder] = @SortOrder
            , [ViewSecurityGroup] = @ViewSecurityGroup
            , [Graph] = @Graph
        FROM
            [RDF.].[Triple]
        WHERE
        [RDF.].[Triple].[TripleID] = @TripleID

        
        SET @intReturnVal = @@error
        IF @intReturnVal <> 0
        BEGIN
            RAISERROR (N'An error occurred while editing the Triple record.', 11, 11); 
            RETURN @intReturnVal 
        END

GO

GRANT EXECUTE ON [RDF.].[cg2_TripleEdit] TO App_Profiles10

GO

CREATE PROCEDURE [RDF.].[cg2_TripleDelete]
 
    @TripleID  BIGINT 

 
AS
 
    DECLARE @intReturnVal INT 
    SET @intReturnVal = 0
 
 
        DELETE FROM [RDF.].[Triple] WHERE         [RDF.].[Triple].[TripleID] = @TripleID

 
        SET @intReturnVal = @@error
        IF @intReturnVal <> 0
        BEGIN
            RAISERROR (N'An error occurred while deleting the Triple record.', 11, 11); 
            RETURN @intReturnVal 
        END
    RETURN @intReturnVal

GO

GRANT EXECUTE ON [RDF.].[cg2_TripleDelete] TO App_Profiles10

GO

